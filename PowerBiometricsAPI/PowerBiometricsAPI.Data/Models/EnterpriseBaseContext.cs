using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace PowerBiometricsAPI.Data.Models
{
    public partial class EnterpriseBaseContext : DbContext
    {
        public EnterpriseBaseContext()
        {
        }

        public EnterpriseBaseContext(DbContextOptions<EnterpriseBaseContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AccessPermissionPage> AccessPermissionPage { get; set; }
        public virtual DbSet<AccessPermissions> AccessPermissions { get; set; }
        public virtual DbSet<AircraftDetail> AircraftDetail { get; set; }
        public virtual DbSet<AircraftFlightDays> AircraftFlightDays { get; set; }
        public virtual DbSet<AircraftFlightSchedule> AircraftFlightSchedule { get; set; }
        public virtual DbSet<AircraftHeader> AircraftHeader { get; set; }
        public virtual DbSet<ApagedAllocation> ApagedAllocation { get; set; }
        public virtual DbSet<Apitoken> ApiToken { get; set; }
        public virtual DbSet<ApapportionmentBase> ApapportionmentBase { get; set; }
        public virtual DbSet<ApmemoBatchDetail> ApmemoBatchDetail { get; set; }
        public virtual DbSet<ApmemoBatchHeader> ApmemoBatchHeader { get; set; }
        public virtual DbSet<AptransactionTypes> AptransactionTypes { get; set; }
        public virtual DbSet<AragedAllocation> AragedAllocation { get; set; }
        public virtual DbSet<ArmemoBatchDetail> ArmemoBatchDetail { get; set; }
        public virtual DbSet<ArmemoBatchHeader> ArmemoBatchHeader { get; set; }
        public virtual DbSet<ArtransactionTypes> ArtransactionTypes { get; set; }
        public virtual DbSet<AuditLogin> AuditLogin { get; set; }
        public virtual DbSet<AuditLoginHistory> AuditLoginHistory { get; set; }
        public virtual DbSet<AuditTablesDescription> AuditTablesDescription { get; set; }
        public virtual DbSet<AuditTrail> AuditTrail { get; set; }
        public virtual DbSet<AuditTrailHistory> AuditTrailHistory { get; set; }
        public virtual DbSet<BankAccounts> BankAccounts { get; set; }
        public virtual DbSet<BankAccountsContacts> BankAccountsContacts { get; set; }
        public virtual DbSet<BankAccountsType> BankAccountsType { get; set; }
        public virtual DbSet<BankReceiptDetail> BankReceiptDetail { get; set; }
        public virtual DbSet<BankReceiptHeader> BankReceiptHeader { get; set; }
        public virtual DbSet<BankReconciliation> BankReconciliation { get; set; }
        public virtual DbSet<BankReconciliationDetail> BankReconciliationDetail { get; set; }
        public virtual DbSet<BankReconciliationDetailCredits> BankReconciliationDetailCredits { get; set; }
        public virtual DbSet<BankReconciliationDetailCredits1> BankReconciliationDetailCredits1 { get; set; }
        public virtual DbSet<BankReconciliationDetailDebits> BankReconciliationDetailDebits { get; set; }
        public virtual DbSet<BankReconciliationDetailDebits1> BankReconciliationDetailDebits1 { get; set; }
        public virtual DbSet<BankReconciliationHeader> BankReconciliationHeader { get; set; }
        public virtual DbSet<BankReconciliationSummary> BankReconciliationSummary { get; set; }
        public virtual DbSet<BankReconciliationSummaryTemp> BankReconciliationSummaryTemp { get; set; }
        public virtual DbSet<BankStatement> BankStatement { get; set; }
        public virtual DbSet<BankStatementHeader> BankStatementHeader { get; set; }
        public virtual DbSet<BankStatementImport> BankStatementImport { get; set; }
        public virtual DbSet<BankStatementOld> BankStatementOld { get; set; }
        public virtual DbSet<BankStatementTransactionType> BankStatementTransactionType { get; set; }
        public virtual DbSet<BankTransactionTypes> BankTransactionTypes { get; set; }
        public virtual DbSet<BankTransactions> BankTransactions { get; set; }
        public virtual DbSet<BankTransactionsBatch> BankTransactionsBatch { get; set; }
        public virtual DbSet<BankTransactionsHistory> BankTransactionsHistory { get; set; }
        public virtual DbSet<BankTransfer> BankTransfer { get; set; }
        public virtual DbSet<BankTransferDetail> BankTransferDetail { get; set; }
        public virtual DbSet<BankTransferDetailHistory> BankTransferDetailHistory { get; set; }
        public virtual DbSet<BankTransferHistory> BankTransferHistory { get; set; }
        public virtual DbSet<Boqdetail> Boqdetail { get; set; }
        public virtual DbSet<Boqheader> Boqheader { get; set; }
        public virtual DbSet<CashbookRequisitionDetail> CashbookRequisitionDetail { get; set; }
        public virtual DbSet<CashbookRequisitionHeader> CashbookRequisitionHeader { get; set; }
        public virtual DbSet<CommentTypes> CommentTypes { get; set; }
        public virtual DbSet<Companies> Companies { get; set; }
        public virtual DbSet<CompaniesAuditing> CompaniesAuditing { get; set; }
        public virtual DbSet<CompaniesChallanges> CompaniesChallanges { get; set; }
        public virtual DbSet<CompaniesDisplayLang> CompaniesDisplayLang { get; set; }
        public virtual DbSet<CompaniesNextNumbers> CompaniesNextNumbers { get; set; }
        public virtual DbSet<CompaniesSystemWideMessage> CompaniesSystemWideMessage { get; set; }
        public virtual DbSet<CompaniesTombstone> CompaniesTombstone { get; set; }
        public virtual DbSet<CompaniesWorkFlowTypes> CompaniesWorkFlowTypes { get; set; }
        public virtual DbSet<CompaniesWorkflow> CompaniesWorkflow { get; set; }
        public virtual DbSet<CompaniesWorkflowByEmployees> CompaniesWorkflowByEmployees { get; set; }
        public virtual DbSet<ContactIndustry> ContactIndustry { get; set; }
        public virtual DbSet<ContactRegions> ContactRegions { get; set; }
        public virtual DbSet<ContactSource> ContactSource { get; set; }
        public virtual DbSet<ContactType> ContactType { get; set; }
        public virtual DbSet<ContractTrackingDetail> ContractTrackingDetail { get; set; }
        public virtual DbSet<ContractTrackingHeader> ContractTrackingHeader { get; set; }
        public virtual DbSet<ContractTypes> ContractTypes { get; set; }
        public virtual DbSet<ContractsDetail> ContractsDetail { get; set; }
        public virtual DbSet<ContractsHeader> ContractsHeader { get; set; }
        public virtual DbSet<CreditCardTypes> CreditCardTypes { get; set; }
        public virtual DbSet<CurrencyTypes> CurrencyTypes { get; set; }
        public virtual DbSet<CurrencyTypesHistory> CurrencyTypesHistory { get; set; }
        public virtual DbSet<CustomerAccountStatuses> CustomerAccountStatuses { get; set; }
        public virtual DbSet<CustomerBillingDetail> CustomerBillingDetail { get; set; }
        public virtual DbSet<CustomerBillingHeader> CustomerBillingHeader { get; set; }
        public virtual DbSet<CustomerBillsGeneratedHeader> CustomerBillsGeneratedHeader { get; set; }
        public virtual DbSet<CustomerComments> CustomerComments { get; set; }
        public virtual DbSet<CustomerContactLog> CustomerContactLog { get; set; }
        public virtual DbSet<CustomerContacts> CustomerContacts { get; set; }
        public virtual DbSet<CustomerCreditReferences> CustomerCreditReferences { get; set; }
        public virtual DbSet<CustomerFinancials> CustomerFinancials { get; set; }
        public virtual DbSet<CustomerInformation> CustomerInformation { get; set; }
        public virtual DbSet<CustomerInformation2> CustomerInformation2 { get; set; }
        public virtual DbSet<CustomerItemCrossReference> CustomerItemCrossReference { get; set; }
        public virtual DbSet<CustomerLoyaltyCardTypes> CustomerLoyaltyCardTypes { get; set; }
        public virtual DbSet<CustomerLoyaltyCards> CustomerLoyaltyCards { get; set; }
        public virtual DbSet<CustomerLoyaltyPointDetail> CustomerLoyaltyPointDetail { get; set; }
        public virtual DbSet<CustomerLoyaltyPointHeader> CustomerLoyaltyPointHeader { get; set; }
        public virtual DbSet<CustomerPaymentsDetail> CustomerPaymentsDetail { get; set; }
        public virtual DbSet<CustomerPaymentsHeader> CustomerPaymentsHeader { get; set; }
        public virtual DbSet<CustomerPriceCrossReference> CustomerPriceCrossReference { get; set; }
        public virtual DbSet<CustomerReferences> CustomerReferences { get; set; }
        public virtual DbSet<CustomerSatisfaction> CustomerSatisfaction { get; set; }
        public virtual DbSet<CustomerShipForLocations> CustomerShipForLocations { get; set; }
        public virtual DbSet<CustomerShipToLocations> CustomerShipToLocations { get; set; }
        public virtual DbSet<CustomerTypes> CustomerTypes { get; set; }
        public virtual DbSet<CustomerTypesDetail> CustomerTypesDetail { get; set; }
        public virtual DbSet<Customreports> Customreports { get; set; }
        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<DepartmentsTombstone> DepartmentsTombstone { get; set; }
        public virtual DbSet<DisbursementDetail> DisbursementDetail { get; set; }
        public virtual DbSet<DisbursementHeader> DisbursementHeader { get; set; }
        public virtual DbSet<Discounts> Discounts { get; set; }
        public virtual DbSet<Divisions> Divisions { get; set; }
        public virtual DbSet<DivisionsTombstone> DivisionsTombstone { get; set; }
        public virtual DbSet<Ediaddresses> Ediaddresses { get; set; }
        public virtual DbSet<Edidirection> Edidirection { get; set; }
        public virtual DbSet<EdidocumentTypes> EdidocumentTypes { get; set; }
        public virtual DbSet<EdiexceptionTypes> EdiexceptionTypes { get; set; }
        public virtual DbSet<Ediexceptions> Ediexceptions { get; set; }
        public virtual DbSet<EdiinvoiceDetail> EdiinvoiceDetail { get; set; }
        public virtual DbSet<EdiinvoiceHeader> EdiinvoiceHeader { get; set; }
        public virtual DbSet<Ediitems> Ediitems { get; set; }
        public virtual DbSet<EdiorderDetail> EdiorderDetail { get; set; }
        public virtual DbSet<EdiorderHeader> EdiorderHeader { get; set; }
        public virtual DbSet<EdipaymentsDetail> EdipaymentsDetail { get; set; }
        public virtual DbSet<EdipaymentsHeader> EdipaymentsHeader { get; set; }
        public virtual DbSet<EdipurchaseDetail> EdipurchaseDetail { get; set; }
        public virtual DbSet<EdipurchaseHeader> EdipurchaseHeader { get; set; }
        public virtual DbSet<EdireceiptsDetail> EdireceiptsDetail { get; set; }
        public virtual DbSet<EdireceiptsHeader> EdireceiptsHeader { get; set; }
        public virtual DbSet<Edisetup> Edisetup { get; set; }
        public virtual DbSet<Edistatements> Edistatements { get; set; }
        public virtual DbSet<EdistatementsHistory> EdistatementsHistory { get; set; }
        public virtual DbSet<ErrorLog> ErrorLog { get; set; }
        public virtual DbSet<ErrorLogDetail> ErrorLogDetail { get; set; }
        public virtual DbSet<ExpenseReportDetail> ExpenseReportDetail { get; set; }
        public virtual DbSet<ExpenseReportDetailHistory> ExpenseReportDetailHistory { get; set; }
        public virtual DbSet<ExpenseReportHeader> ExpenseReportHeader { get; set; }
        public virtual DbSet<ExpenseReportHeaderHistory> ExpenseReportHeaderHistory { get; set; }
        public virtual DbSet<ExpenseReportItems> ExpenseReportItems { get; set; }
        public virtual DbSet<ExpenseReportReasons> ExpenseReportReasons { get; set; }
        public virtual DbSet<ExpenseReportTypes> ExpenseReportTypes { get; set; }
        public virtual DbSet<ExpensesSharingDetail> ExpensesSharingDetail { get; set; }
        public virtual DbSet<ExpensesSharingHeader> ExpensesSharingHeader { get; set; }
        public virtual DbSet<FixedAssetDepreciationMethods> FixedAssetDepreciationMethods { get; set; }
        public virtual DbSet<FixedAssetDisposals> FixedAssetDisposals { get; set; }
        public virtual DbSet<FixedAssetLocation> FixedAssetLocation { get; set; }
        public virtual DbSet<FixedAssetStatus> FixedAssetStatus { get; set; }
        public virtual DbSet<FixedAssetTransactions> FixedAssetTransactions { get; set; }
        public virtual DbSet<FixedAssetType> FixedAssetType { get; set; }
        public virtual DbSet<FixedAssets> FixedAssets { get; set; }
        public virtual DbSet<FixedAssetsHistory> FixedAssetsHistory { get; set; }
        public virtual DbSet<FixedAssetsImpairment> FixedAssetsImpairment { get; set; }
        public virtual DbSet<FixedAssetsInsurance> FixedAssetsInsurance { get; set; }
        public virtual DbSet<HelpMessageBoard> HelpMessageBoard { get; set; }
        public virtual DbSet<HelpMessageHeading> HelpMessageHeading { get; set; }
        public virtual DbSet<HelpMessageTopic> HelpMessageTopic { get; set; }
        public virtual DbSet<HelpMessageTopicSubscribe> HelpMessageTopicSubscribe { get; set; }
        public virtual DbSet<HelpNewTopicsSubscribe> HelpNewTopicsSubscribe { get; set; }
        public virtual DbSet<HelpNewsBoard> HelpNewsBoard { get; set; }
        public virtual DbSet<HelpPriority> HelpPriority { get; set; }
        public virtual DbSet<HelpProblemReport> HelpProblemReport { get; set; }
        public virtual DbSet<HelpProblemReportDetail> HelpProblemReportDetail { get; set; }
        public virtual DbSet<HelpProblemType> HelpProblemType { get; set; }
        public virtual DbSet<HelpReleaseDates> HelpReleaseDates { get; set; }
        public virtual DbSet<HelpRequestMethod> HelpRequestMethod { get; set; }
        public virtual DbSet<HelpResourceType> HelpResourceType { get; set; }
        public virtual DbSet<HelpResources> HelpResources { get; set; }
        public virtual DbSet<HelpSeverity> HelpSeverity { get; set; }
        public virtual DbSet<HelpStatus> HelpStatus { get; set; }
        public virtual DbSet<HelpSupportRequest> HelpSupportRequest { get; set; }
        public virtual DbSet<HelpSupportRequestDetail> HelpSupportRequestDetail { get; set; }
        public virtual DbSet<HelpSupportRequestType> HelpSupportRequestType { get; set; }
        public virtual DbSet<ImportExportUtility> ImportExportUtility { get; set; }
        public virtual DbSet<InventoryAdjustmentSerialNumberDetail> InventoryAdjustmentSerialNumberDetail { get; set; }
        public virtual DbSet<InventoryAdjustmentTypes> InventoryAdjustmentTypes { get; set; }
        public virtual DbSet<InventoryAdjustments> InventoryAdjustments { get; set; }
        public virtual DbSet<InventoryAdjustmentsBatch> InventoryAdjustmentsBatch { get; set; }
        public virtual DbSet<InventoryAdjustmentsDetail> InventoryAdjustmentsDetail { get; set; }
        public virtual DbSet<InventoryAdjustmentsDetailBatch> InventoryAdjustmentsDetailBatch { get; set; }
        public virtual DbSet<InventoryAdjustmentsDetailHistory> InventoryAdjustmentsDetailHistory { get; set; }
        public virtual DbSet<InventoryAdjustmentsHistory> InventoryAdjustmentsHistory { get; set; }
        public virtual DbSet<InventoryAssemblies> InventoryAssemblies { get; set; }
        public virtual DbSet<InventoryAssembliesAlternate> InventoryAssembliesAlternate { get; set; }
        public virtual DbSet<InventoryAssembliesInstructions> InventoryAssembliesInstructions { get; set; }
        public virtual DbSet<InventoryAttributes> InventoryAttributes { get; set; }
        public virtual DbSet<InventoryByWarehouse> InventoryByWarehouse { get; set; }
        public virtual DbSet<InventoryByWarehouseTombstone> InventoryByWarehouseTombstone { get; set; }
        public virtual DbSet<InventoryCart> InventoryCart { get; set; }
        public virtual DbSet<InventoryCategories> InventoryCategories { get; set; }
        public virtual DbSet<InventoryCategoriesDisplayLang> InventoryCategoriesDisplayLang { get; set; }
        public virtual DbSet<InventoryCategoriesTombstone> InventoryCategoriesTombstone { get; set; }
        public virtual DbSet<InventoryCrossSelling> InventoryCrossSelling { get; set; }
        public virtual DbSet<InventoryCustomerPricingCode> InventoryCustomerPricingCode { get; set; }
        public virtual DbSet<InventoryFamilies> InventoryFamilies { get; set; }
        public virtual DbSet<InventoryFamiliesDisplayLang> InventoryFamiliesDisplayLang { get; set; }
        public virtual DbSet<InventoryFamiliesTombstone> InventoryFamiliesTombstone { get; set; }
        public virtual DbSet<InventoryIssuedSerialNumberDetail> InventoryIssuedSerialNumberDetail { get; set; }
        public virtual DbSet<InventoryItemTypes> InventoryItemTypes { get; set; }
        public virtual DbSet<InventoryItems> InventoryItems { get; set; }
        public virtual DbSet<InventoryItemsDisplayLang> InventoryItemsDisplayLang { get; set; }
        public virtual DbSet<InventoryItemsTombstone> InventoryItemsTombstone { get; set; }
        public virtual DbSet<InventoryLedger> InventoryLedger { get; set; }
        public virtual DbSet<InventoryLedgerHistory> InventoryLedgerHistory { get; set; }
        public virtual DbSet<InventoryNoticifations> InventoryNoticifations { get; set; }
        public virtual DbSet<InventoryPricingCode> InventoryPricingCode { get; set; }
        public virtual DbSet<InventoryPricingMethods> InventoryPricingMethods { get; set; }
        public virtual DbSet<InventoryReceivedDetail> InventoryReceivedDetail { get; set; }
        public virtual DbSet<InventoryReceivedHeader> InventoryReceivedHeader { get; set; }
        public virtual DbSet<InventoryReceivedSerialNumberDetail> InventoryReceivedSerialNumberDetail { get; set; }
        public virtual DbSet<InventoryRelations> InventoryRelations { get; set; }
        public virtual DbSet<InventoryRequisitionDetail> InventoryRequisitionDetail { get; set; }
        public virtual DbSet<InventoryRequisitionHeader> InventoryRequisitionHeader { get; set; }
        public virtual DbSet<InventoryReviews> InventoryReviews { get; set; }
        public virtual DbSet<InventorySerialNumbers> InventorySerialNumbers { get; set; }
        public virtual DbSet<InventorySerialNumbersDetail> InventorySerialNumbersDetail { get; set; }
        public virtual DbSet<InventorySerialNumbersHeader> InventorySerialNumbersHeader { get; set; }
        public virtual DbSet<InventorySubstitutions> InventorySubstitutions { get; set; }
        public virtual DbSet<InventoryTransferDetail> InventoryTransferDetail { get; set; }
        public virtual DbSet<InventoryTransferHeader> InventoryTransferHeader { get; set; }
        public virtual DbSet<InventoryUnitOfMeasure> InventoryUnitOfMeasure { get; set; }
        public virtual DbSet<InventoryWarrantyDetail> InventoryWarrantyDetail { get; set; }
        public virtual DbSet<InventoryWishList> InventoryWishList { get; set; }
        public virtual DbSet<InvoiceDetail> InvoiceDetail { get; set; }
        public virtual DbSet<InvoiceDetailBatches> InvoiceDetailBatches { get; set; }
        public virtual DbSet<InvoiceDetailHistory> InvoiceDetailHistory { get; set; }
        public virtual DbSet<InvoiceHeader> InvoiceHeader { get; set; }
        public virtual DbSet<InvoiceHeaderBatches> InvoiceHeaderBatches { get; set; }
        public virtual DbSet<InvoiceHeaderHistory> InvoiceHeaderHistory { get; set; }
        public virtual DbSet<InvoiceSerialNumberDetail> InvoiceSerialNumberDetail { get; set; }
        public virtual DbSet<InvoiceTrackingDetail> InvoiceTrackingDetail { get; set; }
        public virtual DbSet<InvoiceTrackingHeader> InvoiceTrackingHeader { get; set; }
        public virtual DbSet<JournalDetail> JournalDetail { get; set; }
        public virtual DbSet<JournalDetailHistory> JournalDetailHistory { get; set; }
        public virtual DbSet<JournalHeader> JournalHeader { get; set; }
        public virtual DbSet<JournalHeaderHistory> JournalHeaderHistory { get; set; }
        public virtual DbSet<LeadComments> LeadComments { get; set; }
        public virtual DbSet<LeadContacts> LeadContacts { get; set; }
        public virtual DbSet<LeadInformation> LeadInformation { get; set; }
        public virtual DbSet<LeadInformationDetail> LeadInformationDetail { get; set; }
        public virtual DbSet<LeadSatisfaction> LeadSatisfaction { get; set; }
        public virtual DbSet<LeadType> LeadType { get; set; }
        public virtual DbSet<LedgerAccountTypes> LedgerAccountTypes { get; set; }
        public virtual DbSet<LedgerAccrualDetail> LedgerAccrualDetail { get; set; }
        public virtual DbSet<LedgerAccrualHeader> LedgerAccrualHeader { get; set; }
        public virtual DbSet<LedgerAnalysis> LedgerAnalysis { get; set; }
        public virtual DbSet<LedgerAnalysis2> LedgerAnalysis2 { get; set; }
        public virtual DbSet<LedgerBalanceGroupDetail> LedgerBalanceGroupDetail { get; set; }
        public virtual DbSet<LedgerBalanceGroupHeader> LedgerBalanceGroupHeader { get; set; }
        public virtual DbSet<LedgerBalanceType> LedgerBalanceType { get; set; }
        public virtual DbSet<LedgerCashFlowType> LedgerCashFlowType { get; set; }
        public virtual DbSet<LedgerCashFlowTypeItem> LedgerCashFlowTypeItem { get; set; }
        public virtual DbSet<LedgerChartOfAccounts> LedgerChartOfAccounts { get; set; }
        public virtual DbSet<LedgerChartOfAccountsBudgets> LedgerChartOfAccountsBudgets { get; set; }
        public virtual DbSet<LedgerChartOfAccountsBudgetsDetail> LedgerChartOfAccountsBudgetsDetail { get; set; }
        public virtual DbSet<LedgerChartOfAccountsBudgetsHeader> LedgerChartOfAccountsBudgetsHeader { get; set; }
        public virtual DbSet<LedgerChartOfAccountsDetail> LedgerChartOfAccountsDetail { get; set; }
        public virtual DbSet<LedgerChartOfAccountsForeign> LedgerChartOfAccountsForeign { get; set; }
        public virtual DbSet<LedgerChartOfAccountsPriorYears> LedgerChartOfAccountsPriorYears { get; set; }
        public virtual DbSet<LedgerPrepaymentDetail> LedgerPrepaymentDetail { get; set; }
        public virtual DbSet<LedgerPrepaymentHeader> LedgerPrepaymentHeader { get; set; }
        public virtual DbSet<LedgerStoredChartOfAccounts> LedgerStoredChartOfAccounts { get; set; }
        public virtual DbSet<LedgerTransactionTypes> LedgerTransactionTypes { get; set; }
        public virtual DbSet<LedgerTransactions> LedgerTransactions { get; set; }
        public virtual DbSet<LedgerTransactionsBatch> LedgerTransactionsBatch { get; set; }
        public virtual DbSet<LedgerTransactionsDetail> LedgerTransactionsDetail { get; set; }
        public virtual DbSet<LedgerTransactionsDetailBatch> LedgerTransactionsDetailBatch { get; set; }
        public virtual DbSet<LedgerTransactionsDetailFgnHistory> LedgerTransactionsDetailFgnHistory { get; set; }
        public virtual DbSet<LedgerTransactionsDetailForeign> LedgerTransactionsDetailForeign { get; set; }
        public virtual DbSet<LedgerTransactionsDetailHistory> LedgerTransactionsDetailHistory { get; set; }
        public virtual DbSet<LedgerTransactionsForeign> LedgerTransactionsForeign { get; set; }
        public virtual DbSet<LedgerTransactionsForeignHistory> LedgerTransactionsForeignHistory { get; set; }
        public virtual DbSet<LedgerTransactionsHistory> LedgerTransactionsHistory { get; set; }
        public virtual DbSet<MailSend> MailSend { get; set; }
        public virtual DbSet<MaterialRequisitionDetail> MaterialRequisitionDetail { get; set; }
        public virtual DbSet<MaterialRequisitionHeader> MaterialRequisitionHeader { get; set; }
        public virtual DbSet<MultipleDiscountGroupDetail> MultipleDiscountGroupDetail { get; set; }
        public virtual DbSet<MultipleDiscountGroups> MultipleDiscountGroups { get; set; }
        public virtual DbSet<MultipleDiscounts> MultipleDiscounts { get; set; }
        public virtual DbSet<OrderApproval> OrderApproval { get; set; }
        public virtual DbSet<OrderDetail> OrderDetail { get; set; }
        public virtual DbSet<OrderDetailHistory> OrderDetailHistory { get; set; }
        public virtual DbSet<OrderHeader> OrderHeader { get; set; }
        public virtual DbSet<OrderHeaderHistory> OrderHeaderHistory { get; set; }
        public virtual DbSet<OrderTrackingDetail> OrderTrackingDetail { get; set; }
        public virtual DbSet<OrderTrackingHeader> OrderTrackingHeader { get; set; }
        public virtual DbSet<OrderTypes> OrderTypes { get; set; }
        public virtual DbSet<Packs> Packs { get; set; }
        public virtual DbSet<PaymentChecks> PaymentChecks { get; set; }
        public virtual DbSet<PaymentClasses> PaymentClasses { get; set; }
        public virtual DbSet<PaymentMethods> PaymentMethods { get; set; }
        public virtual DbSet<PaymentTypes> PaymentTypes { get; set; }
        public virtual DbSet<PaymentTypesTombstone> PaymentTypesTombstone { get; set; }
        public virtual DbSet<PaymentsDetail> PaymentsDetail { get; set; }
        public virtual DbSet<PaymentsDetailBatch> PaymentsDetailBatch { get; set; }
        public virtual DbSet<PaymentsDetailHistory> PaymentsDetailHistory { get; set; }
        public virtual DbSet<PaymentsHeader> PaymentsHeader { get; set; }
        public virtual DbSet<PaymentsHeaderBatch> PaymentsHeaderBatch { get; set; }
        public virtual DbSet<PaymentsHeaderHistory> PaymentsHeaderHistory { get; set; }
        public virtual DbSet<PayrollCheckType> PayrollCheckType { get; set; }
        public virtual DbSet<PayrollChecks> PayrollChecks { get; set; }
        public virtual DbSet<PayrollCityTax> PayrollCityTax { get; set; }
        public virtual DbSet<PayrollCityTaxTables> PayrollCityTaxTables { get; set; }
        public virtual DbSet<PayrollCountyTax> PayrollCountyTax { get; set; }
        public virtual DbSet<PayrollCountyTaxTables> PayrollCountyTaxTables { get; set; }
        public virtual DbSet<PayrollDetailTemp> PayrollDetailTemp { get; set; }
        public virtual DbSet<PayrollEmailMessages> PayrollEmailMessages { get; set; }
        public virtual DbSet<PayrollEmployeeDepartment> PayrollEmployeeDepartment { get; set; }
        public virtual DbSet<PayrollEmployeeDepartmentDetails> PayrollEmployeeDepartmentDetails { get; set; }
        public virtual DbSet<PayrollEmployeeEmailMessage> PayrollEmployeeEmailMessage { get; set; }
        public virtual DbSet<PayrollEmployeeInstantMessage> PayrollEmployeeInstantMessage { get; set; }
        public virtual DbSet<PayrollEmployeePayFrequency> PayrollEmployeePayFrequency { get; set; }
        public virtual DbSet<PayrollEmployeePayType> PayrollEmployeePayType { get; set; }
        public virtual DbSet<PayrollEmployeePwdhistory> PayrollEmployeePwdhistory { get; set; }
        public virtual DbSet<PayrollEmployeeStatus> PayrollEmployeeStatus { get; set; }
        public virtual DbSet<PayrollEmployeeStatusType> PayrollEmployeeStatusType { get; set; }
        public virtual DbSet<PayrollEmployeeType> PayrollEmployeeType { get; set; }
        public virtual DbSet<PayrollEmployeeUserGroup> PayrollEmployeeUserGroup { get; set; }
        public virtual DbSet<PayrollEmployees> PayrollEmployees { get; set; }
        public virtual DbSet<PayrollEmployeesAccrual> PayrollEmployeesAccrual { get; set; }
        public virtual DbSet<PayrollEmployeesAccrualFrequency> PayrollEmployeesAccrualFrequency { get; set; }
        public virtual DbSet<PayrollEmployeesAccrualTypes> PayrollEmployeesAccrualTypes { get; set; }
        public virtual DbSet<PayrollEmployeesCalendar> PayrollEmployeesCalendar { get; set; }
        public virtual DbSet<PayrollEmployeesCurrentlyOn> PayrollEmployeesCurrentlyOn { get; set; }
        public virtual DbSet<PayrollEmployeesDetail> PayrollEmployeesDetail { get; set; }
        public virtual DbSet<PayrollEmployeesDetailHistory> PayrollEmployeesDetailHistory { get; set; }
        public virtual DbSet<PayrollEmployeesEventTypes> PayrollEmployeesEventTypes { get; set; }
        public virtual DbSet<PayrollEmployeesEvents> PayrollEmployeesEvents { get; set; }
        public virtual DbSet<PayrollEmployeesExit> PayrollEmployeesExit { get; set; }
        public virtual DbSet<PayrollEmployeesHistory> PayrollEmployeesHistory { get; set; }
        public virtual DbSet<PayrollEmployeesTaskDetail> PayrollEmployeesTaskDetail { get; set; }
        public virtual DbSet<PayrollEmployeesTaskDetailHistory> PayrollEmployeesTaskDetailHistory { get; set; }
        public virtual DbSet<PayrollEmployeesTaskHeader> PayrollEmployeesTaskHeader { get; set; }
        public virtual DbSet<PayrollEmployeesTaskHeaderHistory> PayrollEmployeesTaskHeaderHistory { get; set; }
        public virtual DbSet<PayrollEmployeesTaskPriority> PayrollEmployeesTaskPriority { get; set; }
        public virtual DbSet<PayrollEmployeesTaskType> PayrollEmployeesTaskType { get; set; }
        public virtual DbSet<PayrollEmployeesTimesheetDetail> PayrollEmployeesTimesheetDetail { get; set; }
        public virtual DbSet<PayrollEmployeesTimesheetHeader> PayrollEmployeesTimesheetHeader { get; set; }
        public virtual DbSet<PayrollEmployeesTombstone> PayrollEmployeesTombstone { get; set; }
        public virtual DbSet<PayrollEmployeesTransactionDetail> PayrollEmployeesTransactionDetail { get; set; }
        public virtual DbSet<PayrollEmployeesTransactionHeader> PayrollEmployeesTransactionHeader { get; set; }
        public virtual DbSet<PayrollFedTax> PayrollFedTax { get; set; }
        public virtual DbSet<PayrollFedTaxTables> PayrollFedTaxTables { get; set; }
        public virtual DbSet<PayrollHrpayrollAbsenteeism> PayrollHrpayrollAbsenteeism { get; set; }
        public virtual DbSet<PayrollHrpayrollAbsenteeismHistory> PayrollHrpayrollAbsenteeismHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollActivation> PayrollHrpayrollActivation { get; set; }
        public virtual DbSet<PayrollHrpayrollActivationHistory> PayrollHrpayrollActivationHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollActiveReason> PayrollHrpayrollActiveReason { get; set; }
        public virtual DbSet<PayrollHrpayrollActiveTransaction> PayrollHrpayrollActiveTransaction { get; set; }
        public virtual DbSet<PayrollHrpayrollActiveType> PayrollHrpayrollActiveType { get; set; }
        public virtual DbSet<PayrollHrpayrollAllowanceRelief> PayrollHrpayrollAllowanceRelief { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalCategory> PayrollHrpayrollAppraisalCategory { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalComments> PayrollHrpayrollAppraisalComments { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalCriteria> PayrollHrpayrollAppraisalCriteria { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalCriteriaDetail> PayrollHrpayrollAppraisalCriteriaDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalDetail> PayrollHrpayrollAppraisalDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalGoal> PayrollHrpayrollAppraisalGoal { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalHeader> PayrollHrpayrollAppraisalHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalHistoryDetail> PayrollHrpayrollAppraisalHistoryDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalHistoryHeader> PayrollHrpayrollAppraisalHistoryHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalKeyDetail> PayrollHrpayrollAppraisalKeyDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalKeyHeader> PayrollHrpayrollAppraisalKeyHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalPeriod> PayrollHrpayrollAppraisalPeriod { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalScore> PayrollHrpayrollAppraisalScore { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalScoreCriteria> PayrollHrpayrollAppraisalScoreCriteria { get; set; }
        public virtual DbSet<PayrollHrpayrollAppraisalType> PayrollHrpayrollAppraisalType { get; set; }
        public virtual DbSet<PayrollHrpayrollAttDetail> PayrollHrpayrollAttDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAttHeader> PayrollHrpayrollAttHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollAttr> PayrollHrpayrollAttr { get; set; }
        public virtual DbSet<PayrollHrpayrollAutoIncrementDetail> PayrollHrpayrollAutoIncrementDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollAutoIncrementHeader> PayrollHrpayrollAutoIncrementHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollAutoIncrementType> PayrollHrpayrollAutoIncrementType { get; set; }
        public virtual DbSet<PayrollHrpayrollBasis> PayrollHrpayrollBasis { get; set; }
        public virtual DbSet<PayrollHrpayrollBilling> PayrollHrpayrollBilling { get; set; }
        public virtual DbSet<PayrollHrpayrollBillingDetail> PayrollHrpayrollBillingDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollBillingHeader> PayrollHrpayrollBillingHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollCareer> PayrollHrpayrollCareer { get; set; }
        public virtual DbSet<PayrollHrpayrollCategory> PayrollHrpayrollCategory { get; set; }
        public virtual DbSet<PayrollHrpayrollChangeEmployeeId> PayrollHrpayrollChangeEmployeeId { get; set; }
        public virtual DbSet<PayrollHrpayrollCompanyInfo> PayrollHrpayrollCompanyInfo { get; set; }
        public virtual DbSet<PayrollHrpayrollCompanyStandard> PayrollHrpayrollCompanyStandard { get; set; }
        public virtual DbSet<PayrollHrpayrollConfirmation> PayrollHrpayrollConfirmation { get; set; }
        public virtual DbSet<PayrollHrpayrollContractType> PayrollHrpayrollContractType { get; set; }
        public virtual DbSet<PayrollHrpayrollContributionDetail> PayrollHrpayrollContributionDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollContributionHeader> PayrollHrpayrollContributionHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollContributionType> PayrollHrpayrollContributionType { get; set; }
        public virtual DbSet<PayrollHrpayrollCostCenter> PayrollHrpayrollCostCenter { get; set; }
        public virtual DbSet<PayrollHrpayrollCostCenterDetails> PayrollHrpayrollCostCenterDetails { get; set; }
        public virtual DbSet<PayrollHrpayrollCourseType> PayrollHrpayrollCourseType { get; set; }
        public virtual DbSet<PayrollHrpayrollDenominationTypes> PayrollHrpayrollDenominationTypes { get; set; }
        public virtual DbSet<PayrollHrpayrollDependantRatio> PayrollHrpayrollDependantRatio { get; set; }
        public virtual DbSet<PayrollHrpayrollDesignation> PayrollHrpayrollDesignation { get; set; }
        public virtual DbSet<PayrollHrpayrollDisciplinaryDetail> PayrollHrpayrollDisciplinaryDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollDisciplinaryHeader> PayrollHrpayrollDisciplinaryHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollDocument> PayrollHrpayrollDocument { get; set; }
        public virtual DbSet<PayrollHrpayrollDocumentation> PayrollHrpayrollDocumentation { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeeActivity> PayrollHrpayrollEmployeeActivity { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeeHold> PayrollHrpayrollEmployeeHold { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeeLeaveHeader> PayrollHrpayrollEmployeeLeaveHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeePfa> PayrollHrpayrollEmployeePfa { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeePfadetails> PayrollHrpayrollEmployeePfadetails { get; set; }
        public virtual DbSet<PayrollHrpayrollEmployeeReferee> PayrollHrpayrollEmployeeReferee { get; set; }
        public virtual DbSet<PayrollHrpayrollExtraLeaveHeader> PayrollHrpayrollExtraLeaveHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollGender> PayrollHrpayrollGender { get; set; }
        public virtual DbSet<PayrollHrpayrollGeoArea> PayrollHrpayrollGeoArea { get; set; }
        public virtual DbSet<PayrollHrpayrollGrade> PayrollHrpayrollGrade { get; set; }
        public virtual DbSet<PayrollHrpayrollGradeType> PayrollHrpayrollGradeType { get; set; }
        public virtual DbSet<PayrollHrpayrollGroupDetail> PayrollHrpayrollGroupDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollGroupHeader> PayrollHrpayrollGroupHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollIllnessType> PayrollHrpayrollIllnessType { get; set; }
        public virtual DbSet<PayrollHrpayrollInstitution> PayrollHrpayrollInstitution { get; set; }
        public virtual DbSet<PayrollHrpayrollJobClassDetail> PayrollHrpayrollJobClassDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollJobClassElement> PayrollHrpayrollJobClassElement { get; set; }
        public virtual DbSet<PayrollHrpayrollJobClassHeader> PayrollHrpayrollJobClassHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollJournalDetail> PayrollHrpayrollJournalDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollJournalHeader> PayrollHrpayrollJournalHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollJournalSetupDetail> PayrollHrpayrollJournalSetupDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollJournalSetupHeader> PayrollHrpayrollJournalSetupHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollLanguage> PayrollHrpayrollLanguage { get; set; }
        public virtual DbSet<PayrollHrpayrollLeaveDetail> PayrollHrpayrollLeaveDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollLeaveHeader> PayrollHrpayrollLeaveHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollLeaveType> PayrollHrpayrollLeaveType { get; set; }
        public virtual DbSet<PayrollHrpayrollLga> PayrollHrpayrollLga { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanDetail> PayrollHrpayrollLoanDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanHeader> PayrollHrpayrollLoanHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanHistory> PayrollHrpayrollLoanHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanInterestType> PayrollHrpayrollLoanInterestType { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanRefundDetail> PayrollHrpayrollLoanRefundDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanRefundHeader> PayrollHrpayrollLoanRefundHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanRefundHistory> PayrollHrpayrollLoanRefundHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollLoanType> PayrollHrpayrollLoanType { get; set; }
        public virtual DbSet<PayrollHrpayrollLocation> PayrollHrpayrollLocation { get; set; }
        public virtual DbSet<PayrollHrpayrollLocationDetails> PayrollHrpayrollLocationDetails { get; set; }
        public virtual DbSet<PayrollHrpayrollMedicalDetail> PayrollHrpayrollMedicalDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollMedicalHeader> PayrollHrpayrollMedicalHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollMovement> PayrollHrpayrollMovement { get; set; }
        public virtual DbSet<PayrollHrpayrollNationality> PayrollHrpayrollNationality { get; set; }
        public virtual DbSet<PayrollHrpayrollNextOfKin> PayrollHrpayrollNextOfKin { get; set; }
        public virtual DbSet<PayrollHrpayrollOffenceType> PayrollHrpayrollOffenceType { get; set; }
        public virtual DbSet<PayrollHrpayrollOperator> PayrollHrpayrollOperator { get; set; }
        public virtual DbSet<PayrollHrpayrollOvertimeDetail> PayrollHrpayrollOvertimeDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollOvertimeHeader> PayrollHrpayrollOvertimeHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollOvertimeType> PayrollHrpayrollOvertimeType { get; set; }
        public virtual DbSet<PayrollHrpayrollPayElementsDetail> PayrollHrpayrollPayElementsDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollPayElementsHeader> PayrollHrpayrollPayElementsHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollPayFile> PayrollHrpayrollPayFile { get; set; }
        public virtual DbSet<PayrollHrpayrollPayFileTempoo> PayrollHrpayrollPayFileTempoo { get; set; }
        public virtual DbSet<PayrollHrpayrollPayTransactHeader> PayrollHrpayrollPayTransactHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollPayType> PayrollHrpayrollPayType { get; set; }
        public virtual DbSet<PayrollHrpayrollPayTypeDetail> PayrollHrpayrollPayTypeDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollPayTypeStatus> PayrollHrpayrollPayTypeStatus { get; set; }
        public virtual DbSet<PayrollHrpayrollPeriod> PayrollHrpayrollPeriod { get; set; }
        public virtual DbSet<PayrollHrpayrollPeriodDetail> PayrollHrpayrollPeriodDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollPfa> PayrollHrpayrollPfa { get; set; }
        public virtual DbSet<PayrollHrpayrollPromotion> PayrollHrpayrollPromotion { get; set; }
        public virtual DbSet<PayrollHrpayrollQualification> PayrollHrpayrollQualification { get; set; }
        public virtual DbSet<PayrollHrpayrollQualificationClass> PayrollHrpayrollQualificationClass { get; set; }
        public virtual DbSet<PayrollHrpayrollQualificationDetail> PayrollHrpayrollQualificationDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollQualificationType> PayrollHrpayrollQualificationType { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableDetail> PayrollHrpayrollRatableDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableDetailHistory> PayrollHrpayrollRatableDetailHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableHeader> PayrollHrpayrollRatableHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableHeaderHistory> PayrollHrpayrollRatableHeaderHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableWeeklyDetail> PayrollHrpayrollRatableWeeklyDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableWeeklyDetailHistory> PayrollHrpayrollRatableWeeklyDetailHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableWeeklyHeader> PayrollHrpayrollRatableWeeklyHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollRatableWeeklyHeaderHistory> PayrollHrpayrollRatableWeeklyHeaderHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollRateTransactions> PayrollHrpayrollRateTransactions { get; set; }
        public virtual DbSet<PayrollHrpayrollRecruitQualification> PayrollHrpayrollRecruitQualification { get; set; }
        public virtual DbSet<PayrollHrpayrollRecruitSetup> PayrollHrpayrollRecruitSetup { get; set; }
        public virtual DbSet<PayrollHrpayrollRecruitment> PayrollHrpayrollRecruitment { get; set; }
        public virtual DbSet<PayrollHrpayrollRelationship> PayrollHrpayrollRelationship { get; set; }
        public virtual DbSet<PayrollHrpayrollReliefType> PayrollHrpayrollReliefType { get; set; }
        public virtual DbSet<PayrollHrpayrollRoster> PayrollHrpayrollRoster { get; set; }
        public virtual DbSet<PayrollHrpayrollRosterUpdate> PayrollHrpayrollRosterUpdate { get; set; }
        public virtual DbSet<PayrollHrpayrollShiftRosterDetail> PayrollHrpayrollShiftRosterDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollShiftRosterHeader> PayrollHrpayrollShiftRosterHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollShiftType> PayrollHrpayrollShiftType { get; set; }
        public virtual DbSet<PayrollHrpayrollStandardRelief> PayrollHrpayrollStandardRelief { get; set; }
        public virtual DbSet<PayrollHrpayrollState> PayrollHrpayrollState { get; set; }
        public virtual DbSet<PayrollHrpayrollStatus> PayrollHrpayrollStatus { get; set; }
        public virtual DbSet<PayrollHrpayrollTaxRules> PayrollHrpayrollTaxRules { get; set; }
        public virtual DbSet<PayrollHrpayrollTaxTable> PayrollHrpayrollTaxTable { get; set; }
        public virtual DbSet<PayrollHrpayrollTaxTableHeader> PayrollHrpayrollTaxTableHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollTaxType> PayrollHrpayrollTaxType { get; set; }
        public virtual DbSet<PayrollHrpayrollTerminal> PayrollHrpayrollTerminal { get; set; }
        public virtual DbSet<PayrollHrpayrollTermination> PayrollHrpayrollTermination { get; set; }
        public virtual DbSet<PayrollHrpayrollTerminationDetail> PayrollHrpayrollTerminationDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollTimeSheetDetail> PayrollHrpayrollTimeSheetDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollTimeSheetHeader> PayrollHrpayrollTimeSheetHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollTitle> PayrollHrpayrollTitle { get; set; }
        public virtual DbSet<PayrollHrpayrollTrainingDetail> PayrollHrpayrollTrainingDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollTrainingHeader> PayrollHrpayrollTrainingHeader { get; set; }
        public virtual DbSet<PayrollHrpayrollTransactHeaderElement> PayrollHrpayrollTransactHeaderElement { get; set; }
        public virtual DbSet<PayrollHrpayrollTransactionElement> PayrollHrpayrollTransactionElement { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFile> PayrollHrpayrollYearPayFile { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileDetail> PayrollHrpayrollYearPayFileDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileDetailTempoo> PayrollHrpayrollYearPayFileDetailTempoo { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileHistory> PayrollHrpayrollYearPayFileHistory { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileTaxDetail> PayrollHrpayrollYearPayFileTaxDetail { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileTaxDetailTempoo> PayrollHrpayrollYearPayFileTaxDetailTempoo { get; set; }
        public virtual DbSet<PayrollHrpayrollYearPayFileTempoo> PayrollHrpayrollYearPayFileTempoo { get; set; }
        public virtual DbSet<PayrollHrpayrollYtddetail> PayrollHrpayrollYtddetail { get; set; }
        public virtual DbSet<PayrollHrpayrollYtdheader> PayrollHrpayrollYtdheader { get; set; }
        public virtual DbSet<PayrollHrpayrollYtdtransaction> PayrollHrpayrollYtdtransaction { get; set; }
        public virtual DbSet<PayrollInstantMessages> PayrollInstantMessages { get; set; }
        public virtual DbSet<PayrollItemBasis> PayrollItemBasis { get; set; }
        public virtual DbSet<PayrollItemTypes> PayrollItemTypes { get; set; }
        public virtual DbSet<PayrollItems> PayrollItems { get; set; }
        public virtual DbSet<PayrollItemsHistory> PayrollItemsHistory { get; set; }
        public virtual DbSet<PayrollItemsMaster> PayrollItemsMaster { get; set; }
        public virtual DbSet<PayrollRegister> PayrollRegister { get; set; }
        public virtual DbSet<PayrollRegisterDetail> PayrollRegisterDetail { get; set; }
        public virtual DbSet<PayrollRegisterDetailHistory> PayrollRegisterDetailHistory { get; set; }
        public virtual DbSet<PayrollRegisterHistory> PayrollRegisterHistory { get; set; }
        public virtual DbSet<PayrollSetup> PayrollSetup { get; set; }
        public virtual DbSet<PayrollStateTax> PayrollStateTax { get; set; }
        public virtual DbSet<PayrollStateTaxTables> PayrollStateTaxTables { get; set; }
        public virtual DbSet<PayrollW2detail> PayrollW2detail { get; set; }
        public virtual DbSet<PayrollW3detail> PayrollW3detail { get; set; }
        public virtual DbSet<PayrollWithholdings> PayrollWithholdings { get; set; }
        public virtual DbSet<PayrollWithholdingsState> PayrollWithholdingsState { get; set; }
        public virtual DbSet<Portal> Portal { get; set; }
        public virtual DbSet<PortalAdvertising> PortalAdvertising { get; set; }
        public virtual DbSet<PortalBannerTypes> PortalBannerTypes { get; set; }
        public virtual DbSet<PortalCategory> PortalCategory { get; set; }
        public virtual DbSet<PortalNews> PortalNews { get; set; }
        public virtual DbSet<PortalResourceType> PortalResourceType { get; set; }
        public virtual DbSet<PortalResources> PortalResources { get; set; }
        public virtual DbSet<PortalSubCategory> PortalSubCategory { get; set; }
        public virtual DbSet<PosCreateDocketTable> PosCreateDocketTable { get; set; }
        public virtual DbSet<PosbalancePay> PosbalancePay { get; set; }
        public virtual DbSet<PoscashUp> PoscashUp { get; set; }
        public virtual DbSet<PoscommissionType> PoscommissionType { get; set; }
        public virtual DbSet<PoscreateWaiters> PoscreateWaiters { get; set; }
        public virtual DbSet<PosdailyCash> PosdailyCash { get; set; }
        public virtual DbSet<PossalesPoints> PossalesPoints { get; set; }
        public virtual DbSet<PossalesPointsTombstone> PossalesPointsTombstone { get; set; }
        public virtual DbSet<PosserviceCharge> PosserviceCharge { get; set; }
        public virtual DbSet<Possetup> Possetup { get; set; }
        public virtual DbSet<PosshiftCartTable> PosshiftCartTable { get; set; }
        public virtual DbSet<PosshiftCartTableHistory> PosshiftCartTableHistory { get; set; }
        public virtual DbSet<PosshiftCartTableTombstone> PosshiftCartTableTombstone { get; set; }
        public virtual DbSet<PosshiftMaster> PosshiftMaster { get; set; }
        public virtual DbSet<PosshiftMasterTombstone> PosshiftMasterTombstone { get; set; }
        public virtual DbSet<PosshiftTransByPaymentType> PosshiftTransByPaymentType { get; set; }
        public virtual DbSet<PosshiftTransByPaymentTypeTombstone> PosshiftTransByPaymentTypeTombstone { get; set; }
        public virtual DbSet<PosshiftTransaction> PosshiftTransaction { get; set; }
        public virtual DbSet<PosshiftType> PosshiftType { get; set; }
        public virtual DbSet<PosshiftTypeTombstone> PosshiftTypeTombstone { get; set; }
        public virtual DbSet<PosshopPreference> PosshopPreference { get; set; }
        public virtual DbSet<PostransactionRef> PostransactionRef { get; set; }
        public virtual DbSet<PowerSuiteBilling> PowerSuiteBilling { get; set; }
        public virtual DbSet<PowerSuiteBooking> PowerSuiteBooking { get; set; }
        public virtual DbSet<PowerSuiteRoomTypeManager> PowerSuiteRoomTypeManager { get; set; }
        public virtual DbSet<PowersuitePayType> PowersuitePayType { get; set; }
        public virtual DbSet<PowersuiteRoomManager> PowersuiteRoomManager { get; set; }
        public virtual DbSet<PowersuiteServices> PowersuiteServices { get; set; }
        public virtual DbSet<ProductionDetailLabour> ProductionDetailLabour { get; set; }
        public virtual DbSet<ProductionDetailMachine> ProductionDetailMachine { get; set; }
        public virtual DbSet<ProductionDetailMaterial> ProductionDetailMaterial { get; set; }
        public virtual DbSet<ProductionDetailOrder> ProductionDetailOrder { get; set; }
        public virtual DbSet<ProductionHeader> ProductionHeader { get; set; }
        public virtual DbSet<ProductionWodetailLabour> ProductionWodetailLabour { get; set; }
        public virtual DbSet<ProductionWodetailMachine> ProductionWodetailMachine { get; set; }
        public virtual DbSet<ProductionWodetailMaterial> ProductionWodetailMaterial { get; set; }
        public virtual DbSet<ProductionWodetailOrder> ProductionWodetailOrder { get; set; }
        public virtual DbSet<ProductionWoheader> ProductionWoheader { get; set; }
        public virtual DbSet<ProjectInvoiceDetail> ProjectInvoiceDetail { get; set; }
        public virtual DbSet<ProjectInvoiceHeader> ProjectInvoiceHeader { get; set; }
        public virtual DbSet<ProjectTypes> ProjectTypes { get; set; }
        public virtual DbSet<Projects> Projects { get; set; }
        public virtual DbSet<ProjectsDetail> ProjectsDetail { get; set; }
        public virtual DbSet<ProjectsDetailHistory> ProjectsDetailHistory { get; set; }
        public virtual DbSet<ProjectsHistory> ProjectsHistory { get; set; }
        public virtual DbSet<PurchaseAddonCost> PurchaseAddonCost { get; set; }
        public virtual DbSet<PurchaseAddonCostDetail> PurchaseAddonCostDetail { get; set; }
        public virtual DbSet<PurchaseAddonCostHeader> PurchaseAddonCostHeader { get; set; }
        public virtual DbSet<PurchaseAddonCostTrackingDetail> PurchaseAddonCostTrackingDetail { get; set; }
        public virtual DbSet<PurchaseContractDetail> PurchaseContractDetail { get; set; }
        public virtual DbSet<PurchaseContractDetailHistory> PurchaseContractDetailHistory { get; set; }
        public virtual DbSet<PurchaseContractHeader> PurchaseContractHeader { get; set; }
        public virtual DbSet<PurchaseContractHeaderHistory> PurchaseContractHeaderHistory { get; set; }
        public virtual DbSet<PurchaseContractLedger> PurchaseContractLedger { get; set; }
        public virtual DbSet<PurchaseContractLedgerHistory> PurchaseContractLedgerHistory { get; set; }
        public virtual DbSet<PurchaseContractList> PurchaseContractList { get; set; }
        public virtual DbSet<PurchaseDetail> PurchaseDetail { get; set; }
        public virtual DbSet<PurchaseDetailHistory> PurchaseDetailHistory { get; set; }
        public virtual DbSet<PurchaseFixedAssetDetail> PurchaseFixedAssetDetail { get; set; }
        public virtual DbSet<PurchaseFixedAssetHeader> PurchaseFixedAssetHeader { get; set; }
        public virtual DbSet<PurchaseHeader> PurchaseHeader { get; set; }
        public virtual DbSet<PurchaseHeaderHistory> PurchaseHeaderHistory { get; set; }
        public virtual DbSet<PurchaseReceiptDetail> PurchaseReceiptDetail { get; set; }
        public virtual DbSet<PurchaseReceiptDetailHistory> PurchaseReceiptDetailHistory { get; set; }
        public virtual DbSet<PurchaseReceiptHeader> PurchaseReceiptHeader { get; set; }
        public virtual DbSet<PurchaseReceiptHeaderHistory> PurchaseReceiptHeaderHistory { get; set; }
        public virtual DbSet<PurchaseTrackingDetail> PurchaseTrackingDetail { get; set; }
        public virtual DbSet<PurchaseTrackingHeader> PurchaseTrackingHeader { get; set; }
        public virtual DbSet<QuoteTrackingDetail> QuoteTrackingDetail { get; set; }
        public virtual DbSet<QuoteTrackingHeader> QuoteTrackingHeader { get; set; }
        public virtual DbSet<QuoteTypes> QuoteTypes { get; set; }
        public virtual DbSet<ReceiptClass> ReceiptClass { get; set; }
        public virtual DbSet<ReceiptMethods> ReceiptMethods { get; set; }
        public virtual DbSet<ReceiptTypes> ReceiptTypes { get; set; }
        public virtual DbSet<ReceiptsDetail> ReceiptsDetail { get; set; }
        public virtual DbSet<ReceiptsDetailBatch> ReceiptsDetailBatch { get; set; }
        public virtual DbSet<ReceiptsDetailHistory> ReceiptsDetailHistory { get; set; }
        public virtual DbSet<ReceiptsHeader> ReceiptsHeader { get; set; }
        public virtual DbSet<ReceiptsHeaderBatch> ReceiptsHeaderBatch { get; set; }
        public virtual DbSet<ReceiptsHeaderHistory> ReceiptsHeaderHistory { get; set; }
        public virtual DbSet<ReportTemplate> ReportTemplate { get; set; }
        public virtual DbSet<RequisitionDetail> RequisitionDetail { get; set; }
        public virtual DbSet<RequisitionHeader> RequisitionHeader { get; set; }
        public virtual DbSet<RequisitionsDetail> RequisitionsDetail { get; set; }
        public virtual DbSet<RequisitionsHeader> RequisitionsHeader { get; set; }
        public virtual DbSet<RequisitionsType> RequisitionsType { get; set; }
        public virtual DbSet<SalesGroup> SalesGroup { get; set; }
        public virtual DbSet<SalesRepresentatives> SalesRepresentatives { get; set; }
        public virtual DbSet<SelectedDepartments> SelectedDepartments { get; set; }
        public virtual DbSet<SelectedDivisions> SelectedDivisions { get; set; }
        public virtual DbSet<ShipmentMethods> ShipmentMethods { get; set; }
        public virtual DbSet<TaxGroupDetail> TaxGroupDetail { get; set; }
        public virtual DbSet<TaxGroups> TaxGroups { get; set; }
        public virtual DbSet<Taxes> Taxes { get; set; }
        public virtual DbSet<TblAuditLogin> TblAuditLogin { get; set; }
        public virtual DbSet<TblAuditTrail> TblAuditTrail { get; set; }
        public virtual DbSet<TblSyncDetail> TblSyncDetail { get; set; }
        public virtual DbSet<TblUsers> TblUsers { get; set; }
        public virtual DbSet<TblUsersOn> TblUsersOn { get; set; }
        public virtual DbSet<TblVersion> TblVersion { get; set; }
        public virtual DbSet<TblVersionHistory> TblVersionHistory { get; set; }
        public virtual DbSet<Terms> Terms { get; set; }
        public virtual DbSet<TimeUnits> TimeUnits { get; set; }
        public virtual DbSet<TransactionComment> TransactionComment { get; set; }
        public virtual DbSet<Translation> Translation { get; set; }
        public virtual DbSet<TruckInformation> TruckInformation { get; set; }
        public virtual DbSet<ValidateCountry> ValidateCountry { get; set; }
        public virtual DbSet<ValidateState> ValidateState { get; set; }
        public virtual DbSet<ValidateZipCode> ValidateZipCode { get; set; }
        public virtual DbSet<VendorAccountStatuses> VendorAccountStatuses { get; set; }
        public virtual DbSet<VendorComments> VendorComments { get; set; }
        public virtual DbSet<VendorContacts> VendorContacts { get; set; }
        public virtual DbSet<VendorFinancials> VendorFinancials { get; set; }
        public virtual DbSet<VendorInformation> VendorInformation { get; set; }
        public virtual DbSet<VendorItemCrossReference> VendorItemCrossReference { get; set; }
        public virtual DbSet<VendorPaymentBatchDetail> VendorPaymentBatchDetail { get; set; }
        public virtual DbSet<VendorPaymentBatchHeader> VendorPaymentBatchHeader { get; set; }
        public virtual DbSet<VendorPriceCrossReference> VendorPriceCrossReference { get; set; }
        public virtual DbSet<VendorTypes> VendorTypes { get; set; }
        public virtual DbSet<VoucherDetail> VoucherDetail { get; set; }
        public virtual DbSet<VoucherHeader> VoucherHeader { get; set; }
        public virtual DbSet<VoucherSharedDetail> VoucherSharedDetail { get; set; }
        public virtual DbSet<VoucherSharedHeader> VoucherSharedHeader { get; set; }
        public virtual DbSet<WarehouseBinTypes> WarehouseBinTypes { get; set; }
        public virtual DbSet<WarehouseBinZones> WarehouseBinZones { get; set; }
        public virtual DbSet<WarehouseBins> WarehouseBins { get; set; }
        public virtual DbSet<WarehouseByEmployees> WarehouseByEmployees { get; set; }
        public virtual DbSet<WarehouseTransitDetail> WarehouseTransitDetail { get; set; }
        public virtual DbSet<WarehouseTransitDetailHistory> WarehouseTransitDetailHistory { get; set; }
        public virtual DbSet<WarehouseTransitHeader> WarehouseTransitHeader { get; set; }
        public virtual DbSet<WarehouseTransitHeaderHistory> WarehouseTransitHeaderHistory { get; set; }
        public virtual DbSet<Warehouses> Warehouses { get; set; }
        public virtual DbSet<WarehousesBilling> WarehousesBilling { get; set; }
        public virtual DbSet<WarehousesContacts> WarehousesContacts { get; set; }
        public virtual DbSet<WarehousesCustomers> WarehousesCustomers { get; set; }
        public virtual DbSet<WebMessage> WebMessage { get; set; }
        public virtual DbSet<WebParameters> WebParameters { get; set; }
        public virtual DbSet<Wipdetail> Wipdetail { get; set; }
        public virtual DbSet<Wipheader> Wipheader { get; set; }
        public virtual DbSet<WiptransactionDetail> WiptransactionDetail { get; set; }
        public virtual DbSet<WorkOrderDetail> WorkOrderDetail { get; set; }
        public virtual DbSet<WorkOrderDetailHistory> WorkOrderDetailHistory { get; set; }
        public virtual DbSet<WorkOrderHeader> WorkOrderHeader { get; set; }
        public virtual DbSet<WorkOrderHeaderHistory> WorkOrderHeaderHistory { get; set; }
        public virtual DbSet<WorkOrderInProgress> WorkOrderInProgress { get; set; }
        public virtual DbSet<WorkOrderInProgressTransaction> WorkOrderInProgressTransaction { get; set; }
        public virtual DbSet<WorkOrderPriority> WorkOrderPriority { get; set; }
        public virtual DbSet<WorkOrderStatus> WorkOrderStatus { get; set; }
        public virtual DbSet<WorkOrderTypes> WorkOrderTypes { get; set; }

        // Unable to generate entity type for table 'dbo.PayrollHRPayrollActivationTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollHeaderTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ProjectListTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.InventoryImportHeaderTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.BankStatementHeaderTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.VendorPaymentTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollRatableTemplate'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollHRPayrollRotation'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.TestSendTable'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ActiveEmployee'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo._Mail_Send_Counter'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.TempAccountPaymentType'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollEmployeesTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.OrderApprovalType'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.MACID'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollEmployeesTemp2'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PayrollHRPayrollQualificationTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.PaymentsDetailTemppss'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.InventoryReceivedTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.BudgetTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.APMemoTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.OrderTrackingDetailTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.OrderTrackingHeaderTemp'. Please see the warning messages.
        // Unable to generate entity type for table 'dbo.ARMemoTemp'. Please see the warning messages.

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
//            if (!optionsBuilder.IsConfigured)
//            {
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. See http://go.microsoft.com/fwlink/?LinkId=723263 for guidance on storing connection strings.
//                optionsBuilder.UseSqlServer("Server=.;Database=EnterpriseBase;Trusted_Connection=True;");
//            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity<AccessPermissionPage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DefaultPageId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DefaultPageId)
                    .HasColumnName("DefaultPageID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultPageDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<AccessPermissions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_AccessPermissions")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Adreports).HasColumnName("ADReports");

                entity.Property(e => e.Adsecurity)
                    .HasColumnName("ADSecurity")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Adsetup)
                    .HasColumnName("ADSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Adview)
                    .HasColumnName("ADView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Apadd)
                    .HasColumnName("APAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Aparight).HasColumnName("APARight");

                entity.Property(e => e.Apchecks)
                    .HasColumnName("APChecks")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Apdelete)
                    .HasColumnName("APDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Apedit)
                    .HasColumnName("APEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveAdjustment).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveApchedks)
                    .HasColumnName("ApproveAPChedks")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveContract).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveCustomer).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveEmployees).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveItems).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveLowMargins).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveOrders).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovePayment).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovePayroll).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovePurchase).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveReceipt).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveReturns).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveRma)
                    .HasColumnName("ApproveRMA")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveTransfer).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApproveVendor).HasDefaultValueSql("((1))");

                entity.Property(e => e.Apreports)
                    .HasColumnName("APReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Apsetup)
                    .HasColumnName("APSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Apview)
                    .HasColumnName("APView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Aradd)
                    .HasColumnName("ARAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Araright).HasColumnName("ARARight");

                entity.Property(e => e.Ardelete)
                    .HasColumnName("ARDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Aredit)
                    .HasColumnName("AREdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Ariadd)
                    .HasColumnName("ARIAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Aridelete)
                    .HasColumnName("ARIDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Ariedit)
                    .HasColumnName("ARIEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Aripost)
                    .HasColumnName("ARIPost")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Ariview).HasColumnName("ARIView");

                entity.Property(e => e.Arreports)
                    .HasColumnName("ARReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Arsetup)
                    .HasColumnName("ARSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Arview)
                    .HasColumnName("ARView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditDelete).HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditReports).HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditSetup).HasDefaultValueSql("((1))");

                entity.Property(e => e.AuditView).HasDefaultValueSql("((1))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cbaadd)
                    .HasColumnName("CBAAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbadelete)
                    .HasColumnName("CBADelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbaedit)
                    .HasColumnName("CBAEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbaright).HasColumnName("CBARight");

                entity.Property(e => e.CbauditRight).HasColumnName("CBAuditRight");

                entity.Property(e => e.Cbaview)
                    .HasColumnName("CBAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbcadd)
                    .HasColumnName("CBCAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbcdelete)
                    .HasColumnName("CBCDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbcedit)
                    .HasColumnName("CBCEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbcview)
                    .HasColumnName("CBCView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpadd)
                    .HasColumnName("CBPAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpadview)
                    .HasColumnName("CBPADView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpapview)
                    .HasColumnName("CBPAPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpdelete)
                    .HasColumnName("CBPDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpedit)
                    .HasColumnName("CBPEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbppview)
                    .HasColumnName("CBPPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbprview)
                    .HasColumnName("CBPRView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbpview)
                    .HasColumnName("CBPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbradd)
                    .HasColumnName("CBRAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbrcadd)
                    .HasColumnName("CBRCAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbrcdelete)
                    .HasColumnName("CBRCDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbrcedit)
                    .HasColumnName("CBRCEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbrcview)
                    .HasColumnName("CBRCView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbrdelete)
                    .HasColumnName("CBRDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbredit)
                    .HasColumnName("CBREdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbreports).HasColumnName("CBReports");

                entity.Property(e => e.Cbrview)
                    .HasColumnName("CBRView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtadd)
                    .HasColumnName("CBTAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtapview)
                    .HasColumnName("CBTAPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtdelete)
                    .HasColumnName("CBTDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtedit)
                    .HasColumnName("CBTEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtpview)
                    .HasColumnName("CBTPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Cbtview)
                    .HasColumnName("CBTView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeDelete).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeReports).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeSetup).HasDefaultValueSql("((1))");

                entity.Property(e => e.ChallangeView).HasDefaultValueSql("((1))");

                entity.Property(e => e.DefaultPageToDisplay).HasMaxLength(120);

                entity.Property(e => e.Emadd)
                    .HasColumnName("EMAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emdelete)
                    .HasColumnName("EMDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emedit)
                    .HasColumnName("EMEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emreports)
                    .HasColumnName("EMReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emsetup)
                    .HasColumnName("EMSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Emview)
                    .HasColumnName("EMView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Faadd)
                    .HasColumnName("FAAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fadelete)
                    .HasColumnName("FADelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Faedit)
                    .HasColumnName("FAEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Fareports).HasColumnName("FAReports");

                entity.Property(e => e.Faright).HasColumnName("FARight");

                entity.Property(e => e.Faview)
                    .HasColumnName("FAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gladd)
                    .HasColumnName("GLAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glaright).HasColumnName("GLARight");

                entity.Property(e => e.Glbadd)
                    .HasColumnName("GLBAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glbdelete)
                    .HasColumnName("GLBDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glbedit)
                    .HasColumnName("GLBEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glbview)
                    .HasColumnName("GLBView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gldelete)
                    .HasColumnName("GLDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gledit)
                    .HasColumnName("GLEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glfadd)
                    .HasColumnName("GLFAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glfdelete)
                    .HasColumnName("GLFDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glfedit)
                    .HasColumnName("GLFEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glfinancials)
                    .HasColumnName("GLFinancials")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glfview)
                    .HasColumnName("GLFView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljadd)
                    .HasColumnName("GLJAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljapview)
                    .HasColumnName("GLJAPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljdelete)
                    .HasColumnName("GLJDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljedit)
                    .HasColumnName("GLJEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljpview)
                    .HasColumnName("GLJPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gljview)
                    .HasColumnName("GLJView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllaadd)
                    .HasColumnName("GLLAAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glladelete)
                    .HasColumnName("GLLADelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllaedit)
                    .HasColumnName("GLLAEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllaview)
                    .HasColumnName("GLLAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllpadd)
                    .HasColumnName("GLLPAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllpdelete)
                    .HasColumnName("GLLPDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllpedit)
                    .HasColumnName("GLLPEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Gllpview)
                    .HasColumnName("GLLPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GlmonthEnd)
                    .HasColumnName("GLMonthEnd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glreports)
                    .HasColumnName("GLReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glsetup)
                    .HasColumnName("GLSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Glview)
                    .HasColumnName("GLView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GlyearEnd)
                    .HasColumnName("GLYearEnd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayAdsetup)
                    .HasColumnName("HRPayADSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpAcctAdd)
                    .HasColumnName("HRPayEmpAcctAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpAcctDelete)
                    .HasColumnName("HRPayEmpAcctDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpAcctEdit)
                    .HasColumnName("HRPayEmpAcctEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpAcctView)
                    .HasColumnName("HRPayEmpAcctView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpAdd)
                    .HasColumnName("HRPayEmpAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpDelete)
                    .HasColumnName("HRPayEmpDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpEdit)
                    .HasColumnName("HRPayEmpEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayEmpView)
                    .HasColumnName("HRPayEmpView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayProcessView)
                    .HasColumnName("HRPayProcessView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayReportView)
                    .HasColumnName("HRPayReportView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayTransAdd)
                    .HasColumnName("HRPayTransAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayTransDelete)
                    .HasColumnName("HRPayTransDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayTransEdit)
                    .HasColumnName("HRPayTransEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.HrpayTransView)
                    .HasColumnName("HRPayTransView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Inaright).HasColumnName("INARight");

                entity.Property(e => e.InvAadd)
                    .HasColumnName("InvAAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.InvAdelete)
                    .HasColumnName("InvADelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvAedit)
                    .HasColumnName("InvAEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvAview)
                    .HasColumnName("InvAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvCadd)
                    .HasColumnName("InvCAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvCdelete)
                    .HasColumnName("InvCDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvCedit)
                    .HasColumnName("InvCEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvCview)
                    .HasColumnName("InvCView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvDelete).HasDefaultValueSql("((1))");

                entity.Property(e => e.InvEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.InvFadd)
                    .HasColumnName("InvFAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvFdelete)
                    .HasColumnName("InvFDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvFedit)
                    .HasColumnName("InvFEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvFview)
                    .HasColumnName("InvFView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIadd)
                    .HasColumnName("InvIAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIaview)
                    .HasColumnName("InvIAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIdelete)
                    .HasColumnName("InvIDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIedit)
                    .HasColumnName("InvIEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIpview)
                    .HasColumnName("InvIPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvIview)
                    .HasColumnName("InvIView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRadd)
                    .HasColumnName("InvRAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRaview)
                    .HasColumnName("InvRAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRdelete)
                    .HasColumnName("InvRDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRedit)
                    .HasColumnName("InvREdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRpview)
                    .HasColumnName("InvRPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvRview)
                    .HasColumnName("InvRView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTadd)
                    .HasColumnName("InvTAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTaview)
                    .HasColumnName("InvTAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTdelete)
                    .HasColumnName("InvTDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTedit)
                    .HasColumnName("InvTEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTpview)
                    .HasColumnName("InvTPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvTview)
                    .HasColumnName("InvTView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.InvView).HasDefaultValueSql("((1))");

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.IsUser).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MachineName).HasMaxLength(50);

                entity.Property(e => e.Mtapview)
                    .HasColumnName("MTAPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Mtarview)
                    .HasColumnName("MTARView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Mtcrmview)
                    .HasColumnName("MTCRMView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtfixedAssetView)
                    .HasColumnName("MTFixedAssetView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtfundView)
                    .HasColumnName("MTFundView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Mtglview)
                    .HasColumnName("MTGLView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtinventoryView)
                    .HasColumnName("MTInventoryView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Mtmrpview)
                    .HasColumnName("MTMRPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtpayrollView)
                    .HasColumnName("MTPayrollView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtprojectView)
                    .HasColumnName("MTProjectView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtreportsView)
                    .HasColumnName("MTReportsView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.MtrequisitionsView).HasColumnName("MTRequisitionsView");

                entity.Property(e => e.MtsystemView)
                    .HasColumnName("MTSystemView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oaright).HasColumnName("OARight");

                entity.Property(e => e.Oeadd)
                    .HasColumnName("OEAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oebview)
                    .HasColumnName("OEBView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oedelete)
                    .HasColumnName("OEDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oeedit)
                    .HasColumnName("OEEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oehview)
                    .HasColumnName("OEHView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oeiview)
                    .HasColumnName("OEIView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oemview).HasColumnName("OEMView");

                entity.Property(e => e.Oepview)
                    .HasColumnName("OEPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oereports)
                    .HasColumnName("OEReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oesetup)
                    .HasColumnName("OESetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Oeview)
                    .HasColumnName("OEView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Paright).HasColumnName("PARight");

                entity.Property(e => e.Pjreports).HasColumnName("PJReports");

                entity.Property(e => e.Poadd)
                    .HasColumnName("POAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Podelete)
                    .HasColumnName("PODelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Poedit)
                    .HasColumnName("POEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Poreports)
                    .HasColumnName("POReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Posetup)
                    .HasColumnName("POSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Poview)
                    .HasColumnName("POView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pradd)
                    .HasColumnName("PRAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Praright).HasColumnName("PRARight");

                entity.Property(e => e.Prchecks)
                    .HasColumnName("PRChecks")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Prdelete)
                    .HasColumnName("PRDelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Predit)
                    .HasColumnName("PREdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdDelete).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdView).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdWaview)
                    .HasColumnName("ProdWAView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdWcview)
                    .HasColumnName("ProdWCView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProdWiview)
                    .HasColumnName("ProdWIView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjApprove).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjDelete).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjView).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjectAright).HasColumnName("ProjectARight");

                entity.Property(e => e.Prreports)
                    .HasColumnName("PRReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Prsetup)
                    .HasColumnName("PRSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Prview)
                    .HasColumnName("PRView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Pyaright).HasColumnName("PYARight");

                entity.Property(e => e.RestrictSecurityIp).HasColumnName("RestrictSecurityIP");

                entity.Property(e => e.Rqadd).HasColumnName("RQAdd");

                entity.Property(e => e.Rqapproval).HasColumnName("RQApproval");

                entity.Property(e => e.Rqaright).HasColumnName("RQARight");

                entity.Property(e => e.Rqdelete).HasColumnName("RQDelete");

                entity.Property(e => e.Rqedit).HasColumnName("RQEdit");

                entity.Property(e => e.Rqreports).HasColumnName("RQReports");

                entity.Property(e => e.Rqview).HasColumnName("RQView");

                entity.Property(e => e.Rtapview)
                    .HasColumnName("RTAPView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rtarview)
                    .HasColumnName("RTARView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Rtcrmview)
                    .HasColumnName("RTCRMView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RtfinancialView)
                    .HasColumnName("RTFinancialView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RtfixedAssetView).HasColumnName("RTFixedAssetView");

                entity.Property(e => e.RtfundView).HasColumnName("RTFundView");

                entity.Property(e => e.Rtglview)
                    .HasColumnName("RTGLView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RtinventoryView)
                    .HasColumnName("RTInventoryView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RtpayrollView)
                    .HasColumnName("RTPayrollView")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.RtprojectView).HasColumnName("RTProjectView");

                entity.Property(e => e.RtsystemView).HasColumnName("RTSystemView");

                entity.Property(e => e.WebParamAdd).HasDefaultValueSql("((1))");

                entity.Property(e => e.WebParamEdit).HasDefaultValueSql("((1))");

                entity.Property(e => e.WebParamView).HasDefaultValueSql("((1))");

                entity.Property(e => e.Whadjust)
                    .HasColumnName("WHAdjust")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whpack)
                    .HasColumnName("WHPack")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whpick)
                    .HasColumnName("WHPick")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whprint)
                    .HasColumnName("WHPrint")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whreceive)
                    .HasColumnName("WHReceive")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whsetup)
                    .HasColumnName("WHSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whship)
                    .HasColumnName("WHShip")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Whtransfer)
                    .HasColumnName("WHTransfer")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Woadd)
                    .HasColumnName("WOAdd")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Wodelete)
                    .HasColumnName("WODelete")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Woedit)
                    .HasColumnName("WOEdit")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Woforecast)
                    .HasColumnName("WOForecast")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Woreports)
                    .HasColumnName("WOReports")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Wosetup)
                    .HasColumnName("WOSetup")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Woview)
                    .HasColumnName("WOView")
                    .HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<AircraftDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.AircraftId, e.AircraftDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.AircraftId)
                    .HasColumnName("AircraftID")
                    .HasMaxLength(36);

                entity.Property(e => e.AircraftDetailId)
                    .HasColumnName("AircraftDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AircraftCarbinType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<AircraftFlightDays>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.FlightDayId })
                    .HasName("PK_AircraftFlightDay");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.FlightDayId)
                    .HasColumnName("FlightDayID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FlightDayDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<AircraftFlightSchedule>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.AircraftId, e.FlightDayId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.AircraftId)
                    .HasColumnName("AircraftID")
                    .HasMaxLength(36);

                entity.Property(e => e.FlightDayId)
                    .HasColumnName("FlightDayID")
                    .HasMaxLength(36);

                entity.Property(e => e.Arrival).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Departure).HasMaxLength(36);

                entity.Property(e => e.Eta)
                    .HasColumnName("ETA")
                    .HasMaxLength(10);

                entity.Property(e => e.Etd)
                    .HasColumnName("ETD")
                    .HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<AircraftHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.AircraftId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.AircraftId)
                    .HasColumnName("AircraftID")
                    .HasMaxLength(36);

                entity.Property(e => e.AircraftName).HasMaxLength(200);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ApagedAllocation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionId });

                entity.ToTable("APAgedAllocation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionId)
                    .HasColumnName("TransactionID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AllocationDate).HasColumnType("datetime");

                entity.Property(e => e.AllocationDocument).HasMaxLength(36);

                entity.Property(e => e.AllocationDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SourceDocument).HasMaxLength(36);

                entity.Property(e => e.SourceDocumentDate).HasColumnType("datetime");

                entity.Property(e => e.SourceDocumentDueDate).HasColumnType("datetime");

                entity.Property(e => e.SourceDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<ApapportionmentBase>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ApportionmentBase })
                    .HasName("pk_APApportionmentBase")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("APApportionmentBase");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApportionmentBase).HasMaxLength(1);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ApmemoBatchDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BatchNumber, e.BatchLineNumber });

                entity.ToTable("APMemoBatchDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchNumber).HasMaxLength(36);

                entity.Property(e => e.BatchLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlvendorAccount)
                    .HasColumnName("GLVendorAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorName).HasMaxLength(50);
            });

            modelBuilder.Entity<ApmemoBatchHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BatchNumber })
                    .HasName("pk_APMemoBatchHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("APMemoBatchHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'APMemo')");
            });

            modelBuilder.Entity<AptransactionTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionTypeId })
                    .HasName("pk_APTransactionTypes")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("APTransactionTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransactionDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<AragedAllocation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionId });

                entity.ToTable("ARAgedAllocation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionId)
                    .HasColumnName("TransactionID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AllocationDate).HasColumnType("datetime");

                entity.Property(e => e.AllocationDocument).HasMaxLength(36);

                entity.Property(e => e.AllocationDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SourceDocument).HasMaxLength(36);

                entity.Property(e => e.SourceDocumentDate).HasColumnType("datetime");

                entity.Property(e => e.SourceDocumentDueDate).HasColumnType("datetime");

                entity.Property(e => e.SourceDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ArmemoBatchDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BatchNumber, e.BatchLineNumber });

                entity.ToTable("ARMemoBatchDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchNumber).HasMaxLength(36);

                entity.Property(e => e.BatchLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcustomerAccount)
                    .HasColumnName("GLCustomerAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionAmount).HasColumnType("money");
            });

            modelBuilder.Entity<ArmemoBatchHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BatchNumber })
                    .HasName("pk_ARMemoBatchHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ARMemoBatchHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'ARMemo')");
            });

            modelBuilder.Entity<ArtransactionTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionTypeId })
                    .HasName("pk_ARTransactionTypes")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("ARTransactionTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransactionDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<AuditLogin>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AuditId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AuditId)
                    .HasColumnName("AuditID")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.LoginDateTime).HasColumnType("datetime");

                entity.Property(e => e.MachineName).HasMaxLength(50);
            });

            modelBuilder.Entity<AuditLoginHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AuditId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AuditId)
                    .HasColumnName("AuditID")
                    .HasColumnType("numeric(24, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.LoginDateTime).HasColumnType("datetime");

                entity.Property(e => e.MachineName).HasMaxLength(50);
            });

            modelBuilder.Entity<AuditTablesDescription>(entity =>
            {
                entity.HasKey(e => e.TableName);

                entity.Property(e => e.TableName)
                    .HasMaxLength(128)
                    .ValueGeneratedNever();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(128);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransactionLineNumberField).HasMaxLength(128);

                entity.Property(e => e.TransactionNumberField).HasMaxLength(128);
            });

            modelBuilder.Entity<AuditTrail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AuditId })
                    .HasName("pk_AuditTrail")
                    .ForSqlServerIsClustered(false);

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AuditId })
                    .HasName("AuditTrailIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AuditId)
                    .HasColumnName("AuditID")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(50);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryTime).HasColumnType("datetime");

                entity.Property(e => e.FieldChanged).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewValue).HasMaxLength(80);

                entity.Property(e => e.OldValue).HasMaxLength(80);

                entity.Property(e => e.TableAffected).HasMaxLength(50);

                entity.Property(e => e.TransactionLineNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionNumber).HasMaxLength(50);
            });

            modelBuilder.Entity<AuditTrailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AuditId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AuditId)
                    .HasColumnName("AuditID")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(50);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.EntryTime).HasColumnType("datetime");

                entity.Property(e => e.FieldChanged).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewValue).HasMaxLength(80);

                entity.Property(e => e.OldValue).HasMaxLength(80);

                entity.Property(e => e.TableAffected).HasMaxLength(50);

                entity.Property(e => e.TransactionLineNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionNumber).HasMaxLength(50);
            });

            modelBuilder.Entity<BankAccounts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Balance)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.BankAccountNumber).HasMaxLength(30);

                entity.Property(e => e.BankAccountTypeId)
                    .IsRequired()
                    .HasColumnName("BankAccountTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Bank')");

                entity.Property(e => e.BankAddress1).HasMaxLength(50);

                entity.Property(e => e.BankAddress2).HasMaxLength(50);

                entity.Property(e => e.BankCity).HasMaxLength(50);

                entity.Property(e => e.BankContactName).HasMaxLength(50);

                entity.Property(e => e.BankCountry).HasMaxLength(50);

                entity.Property(e => e.BankEmail).HasMaxLength(50);

                entity.Property(e => e.BankFax).HasMaxLength(30);

                entity.Property(e => e.BankName).HasMaxLength(50);

                entity.Property(e => e.BankPhone).HasMaxLength(30);

                entity.Property(e => e.BankState).HasMaxLength(50);

                entity.Property(e => e.BankWebsite).HasMaxLength(50);

                entity.Property(e => e.BankZip).HasMaxLength(10);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChequeDate).HasColumnType("datetime");

                entity.Property(e => e.ChequeNo).HasMaxLength(50);

                entity.Property(e => e.CorrespondentBankId)
                    .HasColumnName("CorrespondentBankID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.FirstDesign)
                    .HasColumnName("First_Design")
                    .HasMaxLength(50);

                entity.Property(e => e.FirstSign)
                    .HasColumnName("First_Sign")
                    .HasMaxLength(50);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.RoutingCode).HasMaxLength(20);

                entity.Property(e => e.SecondDesign)
                    .HasColumnName("Second_Design")
                    .HasMaxLength(50);

                entity.Property(e => e.SecondSign)
                    .HasColumnName("Second_Sign")
                    .HasMaxLength(50);

                entity.Property(e => e.SwiftCode).HasMaxLength(50);

                entity.Property(e => e.UnpostedDeposits)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");
            });

            modelBuilder.Entity<BankAccountsContacts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.ContactId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactAddress1).HasMaxLength(50);

                entity.Property(e => e.ContactAddress2).HasMaxLength(50);

                entity.Property(e => e.ContactAddress3).HasMaxLength(50);

                entity.Property(e => e.ContactCellular).HasMaxLength(30);

                entity.Property(e => e.ContactCity).HasMaxLength(50);

                entity.Property(e => e.ContactDescription).HasMaxLength(50);

                entity.Property(e => e.ContactEmail).HasMaxLength(60);

                entity.Property(e => e.ContactFax).HasMaxLength(30);

                entity.Property(e => e.ContactFirstName).HasMaxLength(20);

                entity.Property(e => e.ContactLastName).HasMaxLength(20);

                entity.Property(e => e.ContactLogin).HasMaxLength(60);

                entity.Property(e => e.ContactNotes).HasMaxLength(250);

                entity.Property(e => e.ContactPager).HasMaxLength(30);

                entity.Property(e => e.ContactPassword).HasMaxLength(20);

                entity.Property(e => e.ContactPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordExpiresDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordOld).HasMaxLength(15);

                entity.Property(e => e.ContactPhone).HasMaxLength(30);

                entity.Property(e => e.ContactRegion).HasMaxLength(50);

                entity.Property(e => e.ContactState).HasMaxLength(50);

                entity.Property(e => e.ContactTypeId)
                    .HasColumnName("ContactTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactWebPage).HasMaxLength(80);

                entity.Property(e => e.ContactZip).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankAccountsType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankAccountTypeId })
                    .HasName("PK_BankAccountType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankAccountTypeId)
                    .HasColumnName("BankAccountTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankAccountTypeDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextNumberValue)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.Prefix).HasMaxLength(20);
            });

            modelBuilder.Entity<BankReceiptDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId, e.BankTransactionDetailId })
                    .HasName("pk_BankReceiptDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionDetailId)
                    .HasColumnName("BankTransactionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Deposit')");
            });

            modelBuilder.Entity<BankReceiptHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId })
                    .HasName("pk_BankReceiptHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayeeName).HasMaxLength(50);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Deposit')");
            });

            modelBuilder.Entity<BankReconciliation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId })
                    .HasName("pk_BankReconciliation")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAdjustment).HasColumnType("money");

                entity.Property(e => e.BankRecEndDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecEndingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecIntrest).HasColumnType("money");

                entity.Property(e => e.BankRecNotes).HasMaxLength(255);

                entity.Property(e => e.BankRecOtherCharges).HasColumnType("money");

                entity.Property(e => e.BankRecServiceCharge).HasColumnType("money");

                entity.Property(e => e.BankRecStartDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.GladjustmentAccount)
                    .HasColumnName("GLAdjustmentAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlinterestAccount)
                    .HasColumnName("GLInterestAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlotherChargesAccount)
                    .HasColumnName("GLOtherChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlserviceChargeAccount)
                    .HasColumnName("GLServiceChargeAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankTransactionId, e.BankRecType, e.BankRecLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecType).HasMaxLength(50);

                entity.Property(e => e.BankRecLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BankRecAmount).HasColumnType("money");

                entity.Property(e => e.BankRecClearedDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDescription).HasMaxLength(50);

                entity.Property(e => e.BankRecDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.BankRecMemo).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationDetailCredits>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankTransactionId, e.BankRecType, e.BankRecLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecType).HasMaxLength(50);

                entity.Property(e => e.BankRecLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BankRecAmount).HasColumnType("money");

                entity.Property(e => e.BankRecClearedDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDescription).HasMaxLength(50);

                entity.Property(e => e.BankRecDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.BankRecMemo).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationDetailCredits1>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankRecId, e.BankRecLineNumber })
                    .HasName("PK_BankReconciliationDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecId)
                    .HasColumnName("BankRecID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAmount).HasColumnType("money");

                entity.Property(e => e.BankRecClearedDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDescription).HasMaxLength(280);

                entity.Property(e => e.BankRecDocumentNumber).HasMaxLength(50);

                entity.Property(e => e.BankRecMemo).HasMaxLength(255);

                entity.Property(e => e.BankRecType)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'SC')");

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationDetailDebits>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankTransactionId, e.BankRecType, e.BankRecLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecType).HasMaxLength(50);

                entity.Property(e => e.BankRecLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BankRecAmount).HasColumnType("money");

                entity.Property(e => e.BankRecClearedDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDescription).HasMaxLength(50);

                entity.Property(e => e.BankRecDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.BankRecMemo).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationDetailDebits1>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankRecId, e.BankRecLineNumber })
                    .HasName("PK_BankReconciliationDetailDebit1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecId)
                    .HasColumnName("BankRecID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAmount).HasColumnType("money");

                entity.Property(e => e.BankRecClearedDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDescription).HasMaxLength(280);

                entity.Property(e => e.BankRecDocumentNumber).HasMaxLength(50);

                entity.Property(e => e.BankRecMemo).HasMaxLength(255);

                entity.Property(e => e.BankRecType)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'IC')");

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankReconciliationHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankRecId })
                    .HasName("PK_BankReconciliationHeader_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecId)
                    .HasColumnName("BankRecID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAdjustment).HasColumnType("money");

                entity.Property(e => e.BankRecEndDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecEndingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecIntrest).HasColumnType("money");

                entity.Property(e => e.BankRecNotes).HasMaxLength(255);

                entity.Property(e => e.BankRecOtherCharges).HasColumnType("money");

                entity.Property(e => e.BankRecServiceCharge).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.GladjustmentAccount)
                    .HasColumnName("GLAdjustmentAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlinterestAccount)
                    .HasColumnName("GLInterestAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlotherChargesAccount)
                    .HasColumnName("GLOtherChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlserviceChargeAccount)
                    .HasColumnName("GLServiceChargeAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.TotalCredit).HasColumnType("money");

                entity.Property(e => e.TotalDebit).HasColumnType("money");

                entity.Property(e => e.TotalOustandingCredit).HasColumnType("money");

                entity.Property(e => e.TotalOustandingDebit).HasColumnType("money");

                entity.Property(e => e.TotalReconciledCredit).HasColumnType("money");

                entity.Property(e => e.TotalReconciledDebit).HasColumnType("money");

                entity.Property(e => e.TotalUnReconciledCredit).HasColumnType("money");

                entity.Property(e => e.TotalUnReconciledDebit).HasColumnType("money");
            });

            modelBuilder.Entity<BankReconciliationSummary>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankRecId })
                    .HasName("pk_BankReconciliationSummary")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecId)
                    .HasColumnName("BankRecID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAdjustment).HasColumnType("money");

                entity.Property(e => e.BankRecBookBalance).HasColumnType("money");

                entity.Property(e => e.BankRecCreditOs)
                    .HasColumnName("BankRecCreditOS")
                    .HasColumnType("money");

                entity.Property(e => e.BankRecCreditTotal).HasColumnType("money");

                entity.Property(e => e.BankRecCutoffDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDebitOs)
                    .HasColumnName("BankRecDebitOS")
                    .HasColumnType("money");

                entity.Property(e => e.BankRecDebitTotal).HasColumnType("money");

                entity.Property(e => e.BankRecDifference).HasColumnType("money");

                entity.Property(e => e.BankRecEndingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecEndingBookBalance).HasColumnType("money");

                entity.Property(e => e.BankRecIntrest).HasColumnType("money");

                entity.Property(e => e.BankRecOtherCharges).HasColumnType("money");

                entity.Property(e => e.BankRecServiceCharge).HasColumnType("money");

                entity.Property(e => e.BankRecStartingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecStartingBookBalance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.GladjustmentAccount)
                    .HasColumnName("GLAdjustmentAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlinterestAccount)
                    .HasColumnName("GLInterestAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlotherChargesAccount)
                    .HasColumnName("GLOtherChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlserviceChargeAccount)
                    .HasColumnName("GLServiceChargeAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);
            });

            modelBuilder.Entity<BankReconciliationSummaryTemp>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankRecId })
                    .HasName("pk_BankReconciliationSummaryTemp")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecId)
                    .HasColumnName("BankRecID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankRecAdjustment).HasColumnType("money");

                entity.Property(e => e.BankRecBookBalance).HasColumnType("money");

                entity.Property(e => e.BankRecCreditOs)
                    .HasColumnName("BankRecCreditOS")
                    .HasColumnType("money");

                entity.Property(e => e.BankRecCreditTotal).HasColumnType("money");

                entity.Property(e => e.BankRecCutoffDate).HasColumnType("datetime");

                entity.Property(e => e.BankRecDebitOs)
                    .HasColumnName("BankRecDebitOS")
                    .HasColumnType("money");

                entity.Property(e => e.BankRecDebitTotal).HasColumnType("money");

                entity.Property(e => e.BankRecDifference).HasColumnType("money");

                entity.Property(e => e.BankRecEndingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecEndingBookBalance).HasColumnType("money");

                entity.Property(e => e.BankRecIntrest).HasColumnType("money");

                entity.Property(e => e.BankRecOtherCharges).HasColumnType("money");

                entity.Property(e => e.BankRecServiceCharge).HasColumnType("money");

                entity.Property(e => e.BankRecStartingBalance).HasColumnType("money");

                entity.Property(e => e.BankRecStartingBookBalance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.GladjustmentAccount)
                    .HasColumnName("GLAdjustmentAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlinterestAccount)
                    .HasColumnName("GLInterestAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlotherChargesAccount)
                    .HasColumnName("GLOtherChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlserviceChargeAccount)
                    .HasColumnName("GLServiceChargeAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);
            });

            modelBuilder.Entity<BankStatement>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankStatementDate, e.BankStatementId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementDate).HasColumnType("datetime");

                entity.Property(e => e.BankStatementId)
                    .HasColumnName("BankStatementID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntityTypeId)
                    .HasColumnName("EntityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ModifiedBy).HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(50);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ReconciledBy).HasMaxLength(36);

                entity.Property(e => e.ReconciledDate).HasColumnType("datetime");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankStatementHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankStatementDate });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FullyProcessedBy).HasMaxLength(36);

                entity.Property(e => e.FullyProcessedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs).HasColumnName("LockTS");
            });
            //FOR API TOKEN
            modelBuilder.Entity<Apitoken>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("pk_APIToken")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("APIToken");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeePassword)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.Token).HasMaxLength(36);
            });

            modelBuilder.Entity<BankStatementImport>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankStatementDate, e.BankStatementId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementDate).HasColumnType("datetime");

                entity.Property(e => e.BankStatementId)
                    .HasColumnName("BankStatementID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntityTypeId)
                    .HasColumnName("EntityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ModifiedBy).HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(50);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ReconciledBy).HasMaxLength(36);

                entity.Property(e => e.ReconciledDate).HasColumnType("datetime");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankStatementOld>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankStatementId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementId)
                    .HasColumnName("BankStatementID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.Description)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntityTypeId)
                    .HasColumnName("EntityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastModifiedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ModifiedBy).HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(50);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ReconciledBy).HasMaxLength(36);

                entity.Property(e => e.ReconciledDate).HasColumnType("datetime");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankStatementTransactionType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankStatementTransactionTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankStatementTransactionTypeId)
                    .HasColumnName("BankStatementTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankTransactionTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionTypeId })
                    .HasName("pk_BankTransactionTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionTypeId)
                    .HasColumnName("BankTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionTypeDesc).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<BankTransactions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId })
                    .HasName("pk_BankTransactions")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(225);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionSource).HasMaxLength(50);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankTransactionsBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionSource).HasMaxLength(50);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankTransactionsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionSource).HasMaxLength(50);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<BankTransfer>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId })
                    .HasName("pk_BankTransfer")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdfrom)
                    .HasColumnName("BankIDFrom")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdto)
                    .HasColumnName("BankIDTo")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.ExchangeAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ToCurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.ToCurrencyId)
                    .HasColumnName("ToCurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Transfer')");
            });

            modelBuilder.Entity<BankTransferDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId, e.BankTransactionDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionDetailId)
                    .HasColumnName("BankTransactionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdto)
                    .HasColumnName("BankIDTo")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExchangeAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToCurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.ToCurrencyId)
                    .HasColumnName("ToCurrencyID")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<BankTransferDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId, e.BankTransactionDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionDetailId)
                    .HasColumnName("BankTransactionDetailID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdto)
                    .HasColumnName("BankIDTo")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExchangeAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToCurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.ToCurrencyId)
                    .HasColumnName("ToCurrencyID")
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<BankTransferHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdfrom)
                    .HasColumnName("BankIDFrom")
                    .HasMaxLength(36);

                entity.Property(e => e.BankIdto)
                    .HasColumnName("BankIDTo")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.ExchangeAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ToCurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.ToCurrencyId)
                    .HasColumnName("ToCurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Transfer')");
            });

            modelBuilder.Entity<Boqdetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Boqnumber, e.BoqlineNumber });

                entity.ToTable("BOQDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Boqnumber)
                    .HasColumnName("BOQNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BoqlineNumber)
                    .HasColumnName("BOQLineNumber")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemDeliveredCost).HasColumnType("money");

                entity.Property(e => e.ItemDeliveredCostValue).HasColumnType("money");

                entity.Property(e => e.ItemFixedCost).HasColumnType("money");

                entity.Property(e => e.ItemFixedCostValue).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemMarketCost).HasColumnType("money");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<Boqheader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Boqnumber })
                    .HasName("pk_BOQHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("BOQHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Boqnumber)
                    .HasColumnName("BOQNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Boqdate)
                    .HasColumnName("BOQDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Subtotal).HasColumnType("money");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<CashbookRequisitionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Id, e.AutoNumber })
                    .HasName("PK_CashbookRequisitionDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateOfTransaction).HasColumnType("datetime");

                entity.Property(e => e.Description).HasMaxLength(225);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CashbookRequisitionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Id });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateOfTransaction).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CommentTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CommentType })
                    .HasName("pk_CommentTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CommentType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Companies>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AgeInvoicesBy).HasMaxLength(1);

                entity.Property(e => e.AgePurchaseOrdersBy).HasMaxLength(1);

                entity.Property(e => e.AllowTransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.AlternateCurrencyId)
                    .HasColumnName("AlternateCurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.AuditTrail).HasDefaultValueSql("(1)");

                entity.Property(e => e.BankAccount).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CompanyAddress1).HasMaxLength(50);

                entity.Property(e => e.CompanyAddress2).HasMaxLength(50);

                entity.Property(e => e.CompanyAddress3).HasMaxLength(50);

                entity.Property(e => e.CompanyCity).HasMaxLength(50);

                entity.Property(e => e.CompanyCountry).HasMaxLength(50);

                entity.Property(e => e.CompanyEmail).HasMaxLength(60);

                entity.Property(e => e.CompanyFax).HasMaxLength(30);

                entity.Property(e => e.CompanyLogoFilename).HasMaxLength(50);

                entity.Property(e => e.CompanyLogoUrl).HasMaxLength(120);

                entity.Property(e => e.CompanyName).HasMaxLength(50);

                entity.Property(e => e.CompanyNotes).HasMaxLength(255);

                entity.Property(e => e.CompanyPhone).HasMaxLength(30);

                entity.Property(e => e.CompanyReportsDirectoryUrl)
                    .HasColumnName("CompanyReportsDirectoryURL")
                    .HasMaxLength(120);

                entity.Property(e => e.CompanyShoppingCartUrl)
                    .HasColumnName("CompanyShoppingCartURL")
                    .HasMaxLength(120);

                entity.Property(e => e.CompanyState).HasMaxLength(50);

                entity.Property(e => e.CompanySupportDirectoryUrl)
                    .HasColumnName("CompanySupportDirectoryURL")
                    .HasMaxLength(120);

                entity.Property(e => e.CompanyWebAddress).HasMaxLength(80);

                entity.Property(e => e.CompanyWebCrmdirectoryUrl)
                    .HasColumnName("CompanyWebCRMDirectoryURL")
                    .HasMaxLength(120);

                entity.Property(e => e.CompanyZip).HasMaxLength(10);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CurrentPeriod).HasColumnType("datetime");

                entity.Property(e => e.DefaultGlpostingDate)
                    .HasColumnName("DefaultGLPostingDate")
                    .HasMaxLength(1);

                entity.Property(e => e.DefaultGlpurchaseGltracking)
                    .HasColumnName("DefaultGLPurchaseGLTracking")
                    .HasMaxLength(1);

                entity.Property(e => e.DefaultInventoryCostingMethod).HasMaxLength(1);

                entity.Property(e => e.DefaultPurchaseTaxGroup).HasMaxLength(20);

                entity.Property(e => e.DefaultSalesGltracking)
                    .HasColumnName("DefaultSalesGLTracking")
                    .HasMaxLength(1);

                entity.Property(e => e.DefaultSalesTaxGroup).HasMaxLength(20);

                entity.Property(e => e.DividendAccount).HasMaxLength(36);

                entity.Property(e => e.DividendPayableAccount).HasMaxLength(36);

                entity.Property(e => e.EditAptransactions)
                    .HasColumnName("EditAPTransactions")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EditArtransactions)
                    .HasColumnName("EditARTransactions")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EditBankTransactions).HasDefaultValueSql("(0)");

                entity.Property(e => e.EditGltranssactions)
                    .HasColumnName("EditGLTranssactions")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.EnforceProjectId).HasColumnName("EnforceProjectID");

                entity.Property(e => e.FedTaxId)
                    .HasColumnName("FedTaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.FiscalEndDate).HasColumnType("datetime");

                entity.Property(e => e.FiscalStartDate).HasColumnType("datetime");

                entity.Property(e => e.Gaapcompliant)
                    .HasColumnName("GAAPCompliant")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.Glapaccount)
                    .HasColumnName("GLAPAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapcashAccount)
                    .HasColumnName("GLAPCashAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapdiscountAccount)
                    .HasColumnName("GLAPDiscountAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapfreightAccount)
                    .HasColumnName("GLAPFreightAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaphandlingAccount)
                    .HasColumnName("GLAPHandlingAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapinventoryAccount)
                    .HasColumnName("GLAPInventoryAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapmiscAccount)
                    .HasColumnName("GLAPMiscAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapprePaidAccount)
                    .HasColumnName("GLAPPrePaidAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlapwriteOffAccount)
                    .HasColumnName("GLAPWriteOffAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaraccount)
                    .HasColumnName("GLARAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarcashAccount)
                    .HasColumnName("GLARCashAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Glarcogsaccount)
                    .HasColumnName("GLARCOGSAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlardiscountAccount)
                    .HasColumnName("GLARDiscountAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarfreightAccount)
                    .HasColumnName("GLARFreightAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarfreightProfitLossAccount)
                    .HasColumnName("GLARFreightProfitLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarhandlingAccount)
                    .HasColumnName("GLARHandlingAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarinventoryAccount)
                    .HasColumnName("GLARInventoryAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarmiscAccount)
                    .HasColumnName("GLARMiscAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarreturnAccount)
                    .HasColumnName("GLARReturnAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarsalesAccount)
                    .HasColumnName("GLARSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlarwriteOffAccount)
                    .HasColumnName("GLARWriteOffAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankBankMisDepositAccount)
                    .HasColumnName("GLBankBankMisDepositAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankInterestEarnedAccount)
                    .HasColumnName("GLBankInterestEarnedAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankMiscWithdrawlAccount)
                    .HasColumnName("GLBankMiscWithdrawlAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankOtherChargesAccount)
                    .HasColumnName("GLBankOtherChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankServiceChargesAccount)
                    .HasColumnName("GLBankServiceChargesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcurrencyGainLossAccount)
                    .HasColumnName("GLCurrencyGainLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAccumDepreciationAccount)
                    .HasColumnName("GLFixedAccumDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetAccount)
                    .HasColumnName("GLFixedAssetAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDepreciationAccount)
                    .HasColumnName("GLFixedDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDisposalAccount)
                    .HasColumnName("GLFixedDisposalAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlprofitLossAccount)
                    .HasColumnName("GLProfitLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlrealizedCurrencyProfitLossAccount)
                    .HasColumnName("GLRealizedCurrencyProfitLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlretainedEarningsAccount)
                    .HasColumnName("GLRetainedEarningsAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlunrealizedCurrencyGainLossAccount)
                    .HasColumnName("GLUnrealizedCurrencyGainLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlunrealizedCurrencyProfitLossAccount)
                    .HasColumnName("GLUnrealizedCurrencyProfitLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HardClose).HasDefaultValueSql("(1)");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MinimumSurchargeThreshold).HasColumnType("money");

                entity.Property(e => e.Period10Date).HasColumnType("datetime");

                entity.Property(e => e.Period11Date).HasColumnType("datetime");

                entity.Property(e => e.Period12Date).HasColumnType("datetime");

                entity.Property(e => e.Period13Date).HasColumnType("datetime");

                entity.Property(e => e.Period14Date).HasColumnType("datetime");

                entity.Property(e => e.Period1Date).HasColumnType("datetime");

                entity.Property(e => e.Period2Date).HasColumnType("datetime");

                entity.Property(e => e.Period3Date).HasColumnType("datetime");

                entity.Property(e => e.Period4Date).HasColumnType("datetime");

                entity.Property(e => e.Period5Date).HasColumnType("datetime");

                entity.Property(e => e.Period6Date).HasColumnType("datetime");

                entity.Property(e => e.Period7Date).HasColumnType("datetime");

                entity.Property(e => e.Period8Date).HasColumnType("datetime");

                entity.Property(e => e.Period9Date).HasColumnType("datetime");

                entity.Property(e => e.PeriodPosting).HasDefaultValueSql("(1)");

                entity.Property(e => e.PrintUpc).HasColumnName("PrintUPC");

                entity.Property(e => e.RevaluationReserveAccount).HasMaxLength(36);

                entity.Property(e => e.ShippingMethod).HasMaxLength(36);

                entity.Property(e => e.StateTaxId)
                    .HasColumnName("StateTaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.SurplusAssetRevaluationAccount).HasMaxLength(36);

                entity.Property(e => e.SystemDates).HasDefaultValueSql("(1)");

                entity.Property(e => e.Terms).HasMaxLength(20);

                entity.Property(e => e.VatotherRegistrationNumber)
                    .HasColumnName("VATOtherRegistrationNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.VatpurchaseTaxId)
                    .HasColumnName("VATPurchaseTaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.VatregistrationNumber)
                    .HasColumnName("VATRegistrationNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.VatsalesTaxId)
                    .HasColumnName("VATSalesTaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesAuditing>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApproveApchedks).HasColumnName("ApproveAPChedks");

                entity.Property(e => e.ApproveRma).HasColumnName("ApproveRMA");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChallangeExpenseAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeExpenseLower).HasColumnType("money");

                entity.Property(e => e.ChallangeExpenseThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangeInvAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeInvAdjAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeInvAdjLower).HasColumnType("money");

                entity.Property(e => e.ChallangeInvAdjThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangeInvLower).HasColumnType("money");

                entity.Property(e => e.ChallangeInvThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangeLedgerAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeLedgerLower).HasColumnType("money");

                entity.Property(e => e.ChallangeLedgerThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangeOtherAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeOtherLower).HasColumnType("money");

                entity.Property(e => e.ChallangeOtherThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangePaymentsAbove).HasColumnType("money");

                entity.Property(e => e.ChallangePaymentsLower).HasColumnType("money");

                entity.Property(e => e.ChallangePaymentsThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangePayrollAbove).HasColumnType("money");

                entity.Property(e => e.ChallangePayrollLower).HasColumnType("money");

                entity.Property(e => e.ChallangePayrollThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ChallangeReceiptsAbove).HasColumnType("money");

                entity.Property(e => e.ChallangeReceiptsLower).HasColumnType("money");

                entity.Property(e => e.ChallangeReceiptsThreshold)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesChallanges>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ChallangeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ChallangeId)
                    .HasColumnName("ChallangeID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChallangeAmount).HasColumnType("money");

                entity.Property(e => e.ChallangeApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ChallangeApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.ChallangeDocument).HasMaxLength(36);

                entity.Property(e => e.ChallangeDocumentDate).HasColumnType("datetime");

                entity.Property(e => e.ChallangeDocumentType).HasMaxLength(36);

                entity.Property(e => e.ChallangeNotes).HasMaxLength(999);

                entity.Property(e => e.ChallangeReason).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesDisplayLang>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DisplayLang });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisplayLang).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LangDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesNextNumbers>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.NextNumberName })
                    .HasName("pk_CompaniesNextNumbers")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextNumberName).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextNumberPrefix).HasMaxLength(10);

                entity.Property(e => e.NextNumberSeparator).HasMaxLength(1);

                entity.Property(e => e.NextNumberValue).HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesSystemWideMessage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SystemMessage).HasMaxLength(120);

                entity.Property(e => e.SystemMessageAt).HasColumnType("datetime");

                entity.Property(e => e.SystemMessageBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CompaniesTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("PKDEL_Companies_Tombstone_CompanyIDDivisionIDDepartmentID");

                entity.ToTable("Companies_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<CompaniesWorkFlowTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkFlowTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkFlowTypeId)
                    .HasColumnName("WorkFlowTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkFlowTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<CompaniesWorkflow>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActivateWorkFlowAp).HasColumnName("ActivateWorkFlowAP");

                entity.Property(e => e.ActivateWorkFlowAr).HasColumnName("ActivateWorkFlowAR");

                entity.Property(e => e.ActivateWorkFlowCrm).HasColumnName("ActivateWorkFlowCRM");

                entity.Property(e => e.ActivateWorkFlowEcart).HasColumnName("ActivateWorkFlowECart");

                entity.Property(e => e.ActivateWorkFlowEm).HasColumnName("ActivateWorkFlowEM");

                entity.Property(e => e.ActivateWorkFlowGl).HasColumnName("ActivateWorkFlowGL");

                entity.Property(e => e.ActivateWorkFlowIn).HasColumnName("ActivateWorkFlowIN");

                entity.Property(e => e.ActivateWorkFlowOe).HasColumnName("ActivateWorkFlowOE");

                entity.Property(e => e.ActivateWorkFlowPo).HasColumnName("ActivateWorkFlowPO");

                entity.Property(e => e.ActivateWorkFlowPr).HasColumnName("ActivateWorkFlowPR");

                entity.Property(e => e.ActivateWorkFlowWo).HasColumnName("ActivateWorkFlowWO");

                entity.Property(e => e.ActivateWorkflowWh).HasColumnName("ActivateWorkflowWH");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkFlowNotes).HasMaxLength(255);
            });

            modelBuilder.Entity<CompaniesWorkflowByEmployees>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkFlowTypeId, e.WorkFlowResponsibleEmployee });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkFlowTypeId)
                    .HasColumnName("WorkFlowTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkFlowResponsibleEmployee).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkFlowDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<ContactIndustry>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContactIndustryId })
                    .HasName("pk_ContactIndustry")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactIndustryId)
                    .HasColumnName("ContactIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactIndustryDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContactRegions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContactRegionId })
                    .HasName("pk_ContactRegions")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactRegionId)
                    .HasColumnName("ContactRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactRegionDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContactSource>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContactSourceId })
                    .HasName("pk_ContactSource")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactSourceId)
                    .HasColumnName("ContactSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactSourceDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContactType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContactType1 })
                    .HasName("pk_ContactType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactType1)
                    .HasColumnName("ContactType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContractTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContractNumber, e.CommentNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContractNumber).HasMaxLength(36);

                entity.Property(e => e.CommentNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate).HasColumnType("datetime");

                entity.Property(e => e.CommentDetails).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContractTrackingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContractDescription).HasMaxLength(80);

                entity.Property(e => e.ContractLongDescription).HasMaxLength(255);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.SpecialNeeds).HasMaxLength(255);
            });

            modelBuilder.Entity<ContractTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContractTypeId })
                    .HasName("pk_ContractTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContractTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ContractsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.OrderLineNumber })
                    .HasName("pk_ContractsDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderLineNumber)
                    .HasColumnType("numeric(16, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BackOrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.DownloadCount).HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivingNumber).HasMaxLength(50);

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ContractsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber })
                    .HasName("pk_ContractsHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("(0)");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ContractEndDate).HasColumnType("datetime");

                entity.Property(e => e.ContractLastRecurrDate).HasColumnType("datetime");

                entity.Property(e => e.ContractStartDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Monthly')");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("(0)");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("(0)");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(410000)");

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(20);

                entity.Property(e => e.Invoiced).HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("(0)");

                entity.Property(e => e.OrderCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate()+(5000))");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Contract')");

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("(0)");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.Posted).HasDefaultValueSql("(0)");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.Printed).HasDefaultValueSql("(0)");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PurchaseOrderId)
                    .HasColumnName("PurchaseOrderID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("(0)");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxableSubTotal).HasColumnType("money");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Contract')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<CreditCardTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CreditCardTypeId })
                    .HasName("pk_CreditCardTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreditCardDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CurrencyTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CurrencyId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");

                entity.Property(e => e.CurrencyRateLastUpdate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.CurrencyType).HasMaxLength(50);

                entity.Property(e => e.CurrenycySymbol).HasMaxLength(1);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MajorUnits).HasMaxLength(36);

                entity.Property(e => e.MinorUnits).HasMaxLength(36);
            });

            modelBuilder.Entity<CurrencyTypesHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CurrencyId, e.CurrencyIddateTime });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CurrencyIddateTime)
                    .HasColumnName("CurrencyIDDateTime")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("(1)");
            });

            modelBuilder.Entity<CustomerAccountStatuses>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AccountStatus })
                    .HasName("pk_CustomerAccountStatuses")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountStatus).HasMaxLength(36);

                entity.Property(e => e.AccountStatusDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerBillingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BillingId, e.ItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BillingId)
                    .HasColumnName("BillingID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerBillingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BillingId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillingId)
                    .HasColumnName("BillingID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.BillingDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerBillsGeneratedHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BillNumber, e.BillDate });

                entity.HasIndex(e => e.CompanyId)
                    .HasName("IX_CustomerBillsGeneratedHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillNumber).HasMaxLength(36);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BilledBy).HasMaxLength(36);

                entity.Property(e => e.BilledDate).HasColumnType("datetime");

                entity.Property(e => e.BillingType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LastBilledDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<CustomerComments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.CommentLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CommentLineId)
                    .HasColumnName("CommentLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate).HasColumnType("datetime");

                entity.Property(e => e.CommentType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerContactLog>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ContactId, e.ContactLogId })
                    .HasName("pk_CustomerContactLog")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactLogId)
                    .HasColumnName("ContactLogID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactCallEndTime).HasColumnType("datetime");

                entity.Property(e => e.ContactCallStartTime).HasColumnType("datetime");

                entity.Property(e => e.ContactDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ContactDesctiption).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerContacts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ContactId })
                    .HasName("pk_CustomerContacts")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactAddress1).HasMaxLength(50);

                entity.Property(e => e.ContactAddress2).HasMaxLength(50);

                entity.Property(e => e.ContactAddress3).HasMaxLength(50);

                entity.Property(e => e.ContactCallingRestrictions).HasMaxLength(120);

                entity.Property(e => e.ContactCellular).HasMaxLength(30);

                entity.Property(e => e.ContactCity).HasMaxLength(50);

                entity.Property(e => e.ContactDepartment).HasMaxLength(20);

                entity.Property(e => e.ContactDescription).HasMaxLength(50);

                entity.Property(e => e.ContactEmail).HasMaxLength(60);

                entity.Property(e => e.ContactFax).HasMaxLength(30);

                entity.Property(e => e.ContactFirstName).HasMaxLength(20);

                entity.Property(e => e.ContactIndustry).HasMaxLength(50);

                entity.Property(e => e.ContactLastName).HasMaxLength(20);

                entity.Property(e => e.ContactLogin).HasMaxLength(60);

                entity.Property(e => e.ContactNotes).HasMaxLength(250);

                entity.Property(e => e.ContactPager).HasMaxLength(30);

                entity.Property(e => e.ContactPassword).HasMaxLength(20);

                entity.Property(e => e.ContactPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordOld).HasMaxLength(15);

                entity.Property(e => e.ContactPhone).HasMaxLength(30);

                entity.Property(e => e.ContactPhone2).HasMaxLength(30);

                entity.Property(e => e.ContactPhone3).HasMaxLength(30);

                entity.Property(e => e.ContactRegion).HasMaxLength(50);

                entity.Property(e => e.ContactSalutation).HasMaxLength(10);

                entity.Property(e => e.ContactSource).HasMaxLength(20);

                entity.Property(e => e.ContactState).HasMaxLength(50);

                entity.Property(e => e.ContactTitle).HasMaxLength(20);

                entity.Property(e => e.ContactType).HasMaxLength(36);

                entity.Property(e => e.ContactWebPage).HasMaxLength(80);

                entity.Property(e => e.ContactZip).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerCreditReferences>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ReferenceId })
                    .HasName("pk_CustomerCreditReferences")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ReferenceId)
                    .HasColumnName("ReferenceID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReferenceComments).HasMaxLength(250);

                entity.Property(e => e.ReferenceCurrentBalance).HasColumnType("money");

                entity.Property(e => e.ReferenceDate).HasColumnType("datetime");

                entity.Property(e => e.ReferenceFactor).HasMaxLength(10);

                entity.Property(e => e.ReferenceFutures).HasMaxLength(30);

                entity.Property(e => e.ReferenceHighCredit).HasColumnType("money");

                entity.Property(e => e.ReferenceLastSale).HasColumnType("datetime");

                entity.Property(e => e.ReferenceName).HasMaxLength(30);

                entity.Property(e => e.ReferencePastDue).HasColumnType("money");

                entity.Property(e => e.ReferenceSoldSince).HasColumnType("datetime");
            });

            modelBuilder.Entity<CustomerFinancials>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId })
                    .HasName("pk_CustomerFinancials")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.AdvertisingDollars).HasColumnType("money");

                entity.Property(e => e.AvailibleCredit).HasColumnType("money");

                entity.Property(e => e.AverageDaytoPay).HasDefaultValueSql("((-1))");

                entity.Property(e => e.BookedOrders).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreditMemos).HasColumnType("money");

                entity.Property(e => e.CreditMemosLastYear).HasColumnType("money");

                entity.Property(e => e.CreditMemosLifetime).HasColumnType("money");

                entity.Property(e => e.CreditMemosYtd)
                    .HasColumnName("CreditMemosYTD")
                    .HasColumnType("money");

                entity.Property(e => e.CurrentArbalance)
                    .HasColumnName("CurrentARBalance")
                    .HasColumnType("money");

                entity.Property(e => e.HighestBalance).HasColumnType("money");

                entity.Property(e => e.HighestCredit).HasColumnType("money");

                entity.Property(e => e.InvoicesLastYear).HasColumnType("money");

                entity.Property(e => e.InvoicesLifetime).HasColumnType("money");

                entity.Property(e => e.InvoicesYtd)
                    .HasColumnName("InvoicesYTD")
                    .HasColumnType("money");

                entity.Property(e => e.LastCreditMemoDate).HasColumnType("datetime");

                entity.Property(e => e.LastPaymentAmount).HasColumnType("money");

                entity.Property(e => e.LastPaymentDate).HasColumnType("datetime");

                entity.Property(e => e.LastRmadate)
                    .HasColumnName("LastRMADate")
                    .HasColumnType("datetime");

                entity.Property(e => e.LastSalesDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Over120).HasColumnType("money");

                entity.Property(e => e.Over150).HasColumnType("money");

                entity.Property(e => e.Over180).HasColumnType("money");

                entity.Property(e => e.Over30).HasColumnType("money");

                entity.Property(e => e.Over60).HasColumnType("money");

                entity.Property(e => e.Over90).HasColumnType("money");

                entity.Property(e => e.PaymentsLastYear).HasColumnType("money");

                entity.Property(e => e.PaymentsLifetime).HasColumnType("money");

                entity.Property(e => e.PaymentsYtd)
                    .HasColumnName("PaymentsYTD")
                    .HasColumnType("money");

                entity.Property(e => e.Rmas)
                    .HasColumnName("RMAs")
                    .HasColumnType("money");

                entity.Property(e => e.RmasLastYear)
                    .HasColumnName("RMAsLastYear")
                    .HasColumnType("money");

                entity.Property(e => e.RmasLifetime)
                    .HasColumnName("RMAsLifetime")
                    .HasColumnType("money");

                entity.Property(e => e.RmasYtd)
                    .HasColumnName("RMAsYTD")
                    .HasColumnType("money");

                entity.Property(e => e.SalesLastYear).HasColumnType("money");

                entity.Property(e => e.SalesLifetime).HasColumnType("money");

                entity.Property(e => e.SalesYtd)
                    .HasColumnName("SalesYTD")
                    .HasColumnType("money");

                entity.Property(e => e.TotalAr)
                    .HasColumnName("TotalAR")
                    .HasColumnType("money");

                entity.Property(e => e.Under30).HasColumnType("money");

                entity.Property(e => e.WriteOffsLastYear).HasColumnType("money");

                entity.Property(e => e.WriteOffsLifetime).HasColumnType("money");

                entity.Property(e => e.WriteOffsYtd)
                    .HasColumnName("WriteOffsYTD")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<CustomerInformation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountStatus)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Open')");

                entity.Property(e => e.AdvertisingDiscount).HasDefaultValueSql("(0)");

                entity.Property(e => e.AdvertisingDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.AdvertisingGlaccount)
                    .HasColumnName("AdvertisingGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ApplyAdvertising).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApplyManualAdvert).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApplyNewStore).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApplyRebate).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApplyTrade).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApplyWarehouse).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Attention).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ConvertedFromVendor).HasDefaultValueSql("(0)");

                entity.Property(e => e.CreditComments).HasMaxLength(250);

                entity.Property(e => e.CreditLimit).HasColumnType("money");

                entity.Property(e => e.CreditRating).HasMaxLength(30);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerAddress1).HasMaxLength(50);

                entity.Property(e => e.CustomerAddress2).HasMaxLength(50);

                entity.Property(e => e.CustomerAddress3).HasMaxLength(50);

                entity.Property(e => e.CustomerCity).HasMaxLength(50);

                entity.Property(e => e.CustomerCountry).HasMaxLength(50);

                entity.Property(e => e.CustomerEmail).HasMaxLength(60);

                entity.Property(e => e.CustomerFax).HasMaxLength(50);

                entity.Property(e => e.CustomerFirstName).HasMaxLength(50);

                entity.Property(e => e.CustomerIndustryId)
                    .HasColumnName("CustomerIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLastName).HasMaxLength(50);

                entity.Property(e => e.CustomerLogin).HasMaxLength(60);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.CustomerOtherName).HasMaxLength(36);

                entity.Property(e => e.CustomerPassword).HasMaxLength(20);

                entity.Property(e => e.CustomerPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerPasswordOld).HasMaxLength(15);

                entity.Property(e => e.CustomerPhone).HasMaxLength(50);

                entity.Property(e => e.CustomerRegionId)
                    .HasColumnName("CustomerRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerSalutation).HasMaxLength(10);

                entity.Property(e => e.CustomerShipForId)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.CustomerShipToId)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.CustomerSince).HasColumnType("datetime");

                entity.Property(e => e.CustomerSourceId)
                    .HasColumnName("CustomerSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerSpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.CustomerState).HasMaxLength(50);

                entity.Property(e => e.CustomerTypeId)
                    .HasColumnName("CustomerTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerWebPage).HasMaxLength(80);

                entity.Property(e => e.CustomerZip).HasMaxLength(10);

                entity.Property(e => e.EdicontactAddressLine)
                    .HasColumnName("EDIContactAddressLine")
                    .HasMaxLength(50);

                entity.Property(e => e.EdicontactAgentFax)
                    .HasColumnName("EDIContactAgentFax")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactAgentPhone)
                    .HasColumnName("EDIContactAgentPhone")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactName)
                    .HasColumnName("EDIContactName")
                    .HasMaxLength(50);

                entity.Property(e => e.Ediid)
                    .HasColumnName("EDIID")
                    .HasMaxLength(12);

                entity.Property(e => e.Ediinvoices).HasColumnName("EDIInvoices");

                entity.Property(e => e.EdiorderStatus).HasColumnName("EDIOrderStatus");

                entity.Property(e => e.Edipayments).HasColumnName("EDIPayments");

                entity.Property(e => e.EdipurchaseOrders).HasColumnName("EDIPurchaseOrders");

                entity.Property(e => e.Ediqualifier)
                    .HasColumnName("EDIQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EdishippingNotices).HasColumnName("EDIShippingNotices");

                entity.Property(e => e.EditestId)
                    .HasColumnName("EDITestID")
                    .HasMaxLength(12);

                entity.Property(e => e.EditestQualifier)
                    .HasColumnName("EDITestQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.FirstContacted).HasColumnType("datetime");

                entity.Property(e => e.FreightPayment).HasMaxLength(50);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(410000)");

                entity.Property(e => e.LastFollowUp).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManualAdvertising).HasDefaultValueSql("(0)");

                entity.Property(e => e.ManualAdvertisingGlaccount)
                    .HasColumnName("ManualAdvertisingGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ManualAdvertisingNotes).HasMaxLength(50);

                entity.Property(e => e.NewStoreDiscount).HasDefaultValueSql("(0)");

                entity.Property(e => e.NewStoreDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.NewStoreGlaccount)
                    .HasColumnName("NewStoreGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.NextFollowUp).HasColumnType("datetime");

                entity.Property(e => e.PaymentDay).HasMaxLength(10);

                entity.Property(e => e.PriceMatrix)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PriceMatrixCurrent)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PrimaryInterest).HasMaxLength(80);

                entity.Property(e => e.RebateAmount).HasDefaultValueSql("(0)");

                entity.Property(e => e.RebateAmountNotes).HasMaxLength(50);

                entity.Property(e => e.RebateGlaccount)
                    .HasColumnName("RebateGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferalUrl)
                    .HasColumnName("ReferalURL")
                    .HasMaxLength(60);

                entity.Property(e => e.ReferedBy).HasMaxLength(15);

                entity.Property(e => e.ReferedDate).HasColumnType("datetime");

                entity.Property(e => e.RoutingInfo1).HasMaxLength(100);

                entity.Property(e => e.RoutingInfo2).HasMaxLength(100);

                entity.Property(e => e.RoutingInfo3).HasMaxLength(100);

                entity.Property(e => e.RoutingInfoCurrent).HasColumnType("datetime");

                entity.Property(e => e.RoutingNotes).HasMaxLength(200);

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.SpecialShippingInstructions).HasMaxLength(250);

                entity.Property(e => e.SpecialTerms).HasMaxLength(50);

                entity.Property(e => e.StatementCycleCode).HasMaxLength(10);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxIdno)
                    .HasColumnName("TaxIDNo")
                    .HasMaxLength(20);

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.TermsStart)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("(N'Order Date')");

                entity.Property(e => e.TradeDiscount).HasDefaultValueSql("(0)");

                entity.Property(e => e.TradeDiscountGlaccount)
                    .HasColumnName("TradeDiscountGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.TradeDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.VatTaxOtherNumber).HasMaxLength(36);

                entity.Property(e => e.VattaxIdnumber)
                    .HasColumnName("VATTaxIDNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseAllowance).HasDefaultValueSql("(0)");

                entity.Property(e => e.WarehouseAllowanceNotes).HasMaxLength(50);

                entity.Property(e => e.WarehouseGlaccount)
                    .HasColumnName("WarehouseGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<CustomerInformation2>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountStatus).HasMaxLength(36);

                entity.Property(e => e.AdvertisingDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.AdvertisingGlaccount)
                    .HasColumnName("AdvertisingGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Attention).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreditComments).HasMaxLength(250);

                entity.Property(e => e.CreditLimit).HasColumnType("money");

                entity.Property(e => e.CreditRating).HasMaxLength(30);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerAddress1).HasMaxLength(50);

                entity.Property(e => e.CustomerAddress2).HasMaxLength(50);

                entity.Property(e => e.CustomerAddress3).HasMaxLength(50);

                entity.Property(e => e.CustomerCity).HasMaxLength(50);

                entity.Property(e => e.CustomerCountry).HasMaxLength(50);

                entity.Property(e => e.CustomerEmail).HasMaxLength(60);

                entity.Property(e => e.CustomerFax).HasMaxLength(50);

                entity.Property(e => e.CustomerFirstName).HasMaxLength(50);

                entity.Property(e => e.CustomerIndustryId)
                    .HasColumnName("CustomerIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLastName).HasMaxLength(50);

                entity.Property(e => e.CustomerLogin).HasMaxLength(60);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.CustomerPassword).HasMaxLength(20);

                entity.Property(e => e.CustomerPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerPasswordOld).HasMaxLength(15);

                entity.Property(e => e.CustomerPhone).HasMaxLength(50);

                entity.Property(e => e.CustomerRegionId)
                    .HasColumnName("CustomerRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerSalutation).HasMaxLength(10);

                entity.Property(e => e.CustomerShipForId).HasMaxLength(36);

                entity.Property(e => e.CustomerShipToId).HasMaxLength(36);

                entity.Property(e => e.CustomerSince).HasColumnType("datetime");

                entity.Property(e => e.CustomerSourceId)
                    .HasColumnName("CustomerSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerSpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.CustomerState).HasMaxLength(50);

                entity.Property(e => e.CustomerTypeId)
                    .HasColumnName("CustomerTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerWebPage).HasMaxLength(80);

                entity.Property(e => e.CustomerZip).HasMaxLength(10);

                entity.Property(e => e.EdicontactAddressLine)
                    .HasColumnName("EDIContactAddressLine")
                    .HasMaxLength(50);

                entity.Property(e => e.EdicontactAgentFax)
                    .HasColumnName("EDIContactAgentFax")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactAgentPhone)
                    .HasColumnName("EDIContactAgentPhone")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactName)
                    .HasColumnName("EDIContactName")
                    .HasMaxLength(50);

                entity.Property(e => e.Ediid)
                    .HasColumnName("EDIID")
                    .HasMaxLength(12);

                entity.Property(e => e.Ediinvoices).HasColumnName("EDIInvoices");

                entity.Property(e => e.EdiorderStatus).HasColumnName("EDIOrderStatus");

                entity.Property(e => e.Edipayments).HasColumnName("EDIPayments");

                entity.Property(e => e.EdipurchaseOrders).HasColumnName("EDIPurchaseOrders");

                entity.Property(e => e.Ediqualifier)
                    .HasColumnName("EDIQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EdishippingNotices).HasColumnName("EDIShippingNotices");

                entity.Property(e => e.EditestId)
                    .HasColumnName("EDITestID")
                    .HasMaxLength(12);

                entity.Property(e => e.EditestQualifier)
                    .HasColumnName("EDITestQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.FirstContacted).HasColumnType("datetime");

                entity.Property(e => e.FreightPayment).HasMaxLength(50);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LastFollowUp).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManualAdvertisingGlaccount)
                    .HasColumnName("ManualAdvertisingGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ManualAdvertisingNotes).HasMaxLength(50);

                entity.Property(e => e.NewStoreDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.NewStoreGlaccount)
                    .HasColumnName("NewStoreGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.NextFollowUp).HasColumnType("datetime");

                entity.Property(e => e.PaymentDay).HasMaxLength(10);

                entity.Property(e => e.PriceMatrix).HasMaxLength(36);

                entity.Property(e => e.PriceMatrixCurrent).HasColumnType("datetime");

                entity.Property(e => e.PrimaryInterest).HasMaxLength(80);

                entity.Property(e => e.RebateAmountNotes).HasMaxLength(50);

                entity.Property(e => e.RebateGlaccount)
                    .HasColumnName("RebateGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferalUrl)
                    .HasColumnName("ReferalURL")
                    .HasMaxLength(60);

                entity.Property(e => e.ReferedBy).HasMaxLength(15);

                entity.Property(e => e.ReferedDate).HasColumnType("datetime");

                entity.Property(e => e.RoutingInfo1).HasMaxLength(100);

                entity.Property(e => e.RoutingInfo2).HasMaxLength(100);

                entity.Property(e => e.RoutingInfo3).HasMaxLength(100);

                entity.Property(e => e.RoutingInfoCurrent).HasColumnType("datetime");

                entity.Property(e => e.RoutingNotes).HasMaxLength(200);

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.SpecialShippingInstructions).HasMaxLength(250);

                entity.Property(e => e.SpecialTerms).HasMaxLength(50);

                entity.Property(e => e.StatementCycleCode).HasMaxLength(10);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxIdno)
                    .HasColumnName("TaxIDNo")
                    .HasMaxLength(20);

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36);

                entity.Property(e => e.TermsStart).HasMaxLength(10);

                entity.Property(e => e.TradeDiscountGlaccount)
                    .HasColumnName("TradeDiscountGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.TradeDiscountNotes).HasMaxLength(50);

                entity.Property(e => e.VatTaxOtherNumber).HasMaxLength(36);

                entity.Property(e => e.VattaxIdnumber)
                    .HasColumnName("VATTaxIDNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseAllowanceNotes).HasMaxLength(50);

                entity.Property(e => e.WarehouseGlaccount)
                    .HasColumnName("WarehouseGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerItemCrossReference>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.CustomerItemId })
                    .HasName("pk_CustomerItemCrossReference")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerItemId)
                    .HasColumnName("CustomerItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerLoyaltyCardTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerLoyaltyCardTypeId })
                    .HasName("pk_CustomerLoyaltyCardLoyaltyCardTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyCardTypeId)
                    .HasColumnName("CustomerLoyaltyCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyCardTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerLoyaltyCards>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoyaltyCardId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LoyaltyCardId)
                    .HasColumnName("LoyaltyCardID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActivationDate).HasColumnType("datetime");

                entity.Property(e => e.Active).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyCardTypeId)
                    .HasColumnName("CustomerLoyaltyCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ValidFrom).HasColumnType("datetime");

                entity.Property(e => e.ValidTo).HasColumnType("datetime");
            });

            modelBuilder.Entity<CustomerLoyaltyPointDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerLoyaltyPointId, e.CustomerLoyaltyPointDetailId })
                    .HasName("PK_CustomerLoyaltyPointDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyPointId)
                    .HasColumnName("CustomerLoyaltyPointID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyPointDetailId)
                    .HasColumnName("CustomerLoyaltyPointDetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerLoyaltyPointHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerLoyaltyPointId })
                    .HasName("PK_CustomerLoyaltyPointHeader_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyPointId)
                    .HasColumnName("CustomerLoyaltyPointID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerLoyaltyCardTypeId)
                    .HasColumnName("CustomerLoyaltyCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReviewDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<CustomerPaymentsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerPaymentId, e.CustomerPaymentDetailId })
                    .HasName("pk_CustomerPaymentsDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerPaymentId)
                    .HasColumnName("CustomerPaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerPaymentDetailId)
                    .HasColumnName("CustomerPaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionType).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<CustomerPaymentsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerPaymentId })
                    .HasName("pk_CustomerPaymentsHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerPaymentId)
                    .HasColumnName("CustomerPaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.CustomerPaymentClassId)
                    .HasColumnName("CustomerPaymentClassID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Customer')");

                entity.Property(e => e.CustomerPaymentTypeId)
                    .HasColumnName("CustomerPaymentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Payment')");

                entity.Property(e => e.Deposited).HasDefaultValueSql("((0))");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Nsf).HasColumnName("NSF");

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(10);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<CustomerPriceCrossReference>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ItemPricingCode })
                    .HasName("pk_CustomerPriceCrossReference")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ItemPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Shipping)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<CustomerReferences>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReferenceId, e.CustomerId })
                    .HasName("PK_References");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferenceId)
                    .HasColumnName("ReferenceID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdditionalLastName).HasMaxLength(50);

                entity.Property(e => e.AddressLine1).HasMaxLength(80);

                entity.Property(e => e.AddressLine2).HasMaxLength(80);

                entity.Property(e => e.AddressLine3).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.City).HasMaxLength(80);

                entity.Property(e => e.CompanyName).HasMaxLength(80);

                entity.Property(e => e.Country).HasMaxLength(80);

                entity.Property(e => e.DescribeProject).HasMaxLength(999);

                entity.Property(e => e.DescriptSolution).HasMaxLength(999);

                entity.Property(e => e.Email).HasMaxLength(80);

                entity.Property(e => e.FirstName).HasMaxLength(50);

                entity.Property(e => e.LastName).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MiddleName).HasMaxLength(50);

                entity.Property(e => e.NumberOfEmployees).HasMaxLength(50);

                entity.Property(e => e.NumberOfUsers).HasMaxLength(50);

                entity.Property(e => e.PerferedLanguage).HasMaxLength(80);

                entity.Property(e => e.PhoneArea).HasMaxLength(10);

                entity.Property(e => e.PhoneCountry).HasMaxLength(4);

                entity.Property(e => e.PhoneExt).HasMaxLength(10);

                entity.Property(e => e.PhoneNumber).HasMaxLength(10);

                entity.Property(e => e.ProjectName).HasMaxLength(80);

                entity.Property(e => e.Salutation).HasMaxLength(10);

                entity.Property(e => e.State).HasMaxLength(40);

                entity.Property(e => e.Title).HasMaxLength(50);

                entity.Property(e => e.Zip).HasMaxLength(10);
            });

            modelBuilder.Entity<CustomerSatisfaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ItemId, e.SurveyDate });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SurveyDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FreeForm).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QuestionEight).HasMaxLength(255);

                entity.Property(e => e.QuestionEleven).HasMaxLength(255);

                entity.Property(e => e.QuestionFifteen).HasMaxLength(255);

                entity.Property(e => e.QuestionFive).HasMaxLength(255);

                entity.Property(e => e.QuestionFour).HasMaxLength(255);

                entity.Property(e => e.QuestionFourteen).HasMaxLength(255);

                entity.Property(e => e.QuestionNine).HasMaxLength(255);

                entity.Property(e => e.QuestionOne).HasMaxLength(255);

                entity.Property(e => e.QuestionSeven).HasMaxLength(255);

                entity.Property(e => e.QuestionSix).HasMaxLength(255);

                entity.Property(e => e.QuestionTen).HasMaxLength(255);

                entity.Property(e => e.QuestionThirteen).HasMaxLength(255);

                entity.Property(e => e.QuestionThree).HasMaxLength(255);

                entity.Property(e => e.QuestionTwelve).HasMaxLength(255);

                entity.Property(e => e.QuestionTwo).HasMaxLength(255);
            });

            modelBuilder.Entity<CustomerShipForLocations>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ShipToId, e.ShipForId })
                    .HasName("pk_CustomerShipForLocations")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ShipForAddress1).HasMaxLength(50);

                entity.Property(e => e.ShipForAddress2).HasMaxLength(50);

                entity.Property(e => e.ShipForAddress3).HasMaxLength(50);

                entity.Property(e => e.ShipForAttention).HasMaxLength(50);

                entity.Property(e => e.ShipForCity).HasMaxLength(50);

                entity.Property(e => e.ShipForEmail).HasMaxLength(60);

                entity.Property(e => e.ShipForName).HasMaxLength(50);

                entity.Property(e => e.ShipForNotes).HasMaxLength(255);

                entity.Property(e => e.ShipForState).HasMaxLength(50);

                entity.Property(e => e.ShipForWebPage).HasMaxLength(80);

                entity.Property(e => e.ShipForZip).HasMaxLength(10);

                entity.Property(e => e.ShipForeCountry).HasMaxLength(50);
            });

            modelBuilder.Entity<CustomerShipToLocations>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.ShipToId })
                    .HasName("pk_CustomerShipToLocations")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ShipToAddress1).HasMaxLength(50);

                entity.Property(e => e.ShipToAddress2).HasMaxLength(50);

                entity.Property(e => e.ShipToAddress3).HasMaxLength(50);

                entity.Property(e => e.ShipToAttention).HasMaxLength(50);

                entity.Property(e => e.ShipToCity).HasMaxLength(50);

                entity.Property(e => e.ShipToCountry).HasMaxLength(50);

                entity.Property(e => e.ShipToEmail).HasMaxLength(60);

                entity.Property(e => e.ShipToName).HasMaxLength(50);

                entity.Property(e => e.ShipToNotes).HasMaxLength(255);

                entity.Property(e => e.ShipToState).HasMaxLength(50);

                entity.Property(e => e.ShipToWebPage).HasMaxLength(80);

                entity.Property(e => e.ShipToZip).HasMaxLength(10);
            });

            modelBuilder.Entity<CustomerTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerTypeId })
                    .HasName("pk_CustomerTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerTypeId)
                    .HasColumnName("CustomerTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillingType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CoscontrolAccount)
                    .HasColumnName("COSControlAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeGainOrLossAccount).HasMaxLength(36);

                entity.Property(e => e.CustomerTypeDescription).HasMaxLength(50);

                entity.Property(e => e.DebtorsControlAccount).HasMaxLength(36);

                entity.Property(e => e.DiscountsAccount).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SalesControlAccount).HasMaxLength(36);
            });

            modelBuilder.Entity<CustomerTypesDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerTypeId, e.ItemTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerTypeId)
                    .HasColumnName("CustomerTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemTypeId)
                    .HasColumnName("ItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Customreports>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReportId });

                entity.ToTable("customreports");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReportId)
                    .HasColumnName("ReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReportName).HasMaxLength(36);
            });

            modelBuilder.Entity<Departments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("pk_Departments")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.DepartmentAddress1).HasMaxLength(50);

                entity.Property(e => e.DepartmentAddress2).HasMaxLength(50);

                entity.Property(e => e.DepartmentCity).HasMaxLength(50);

                entity.Property(e => e.DepartmentCountry).HasMaxLength(50);

                entity.Property(e => e.DepartmentDescription).HasMaxLength(50);

                entity.Property(e => e.DepartmentEmail).HasMaxLength(60);

                entity.Property(e => e.DepartmentFax).HasMaxLength(30);

                entity.Property(e => e.DepartmentName).HasMaxLength(50);

                entity.Property(e => e.DepartmentNotes).HasMaxLength(255);

                entity.Property(e => e.DepartmentPhone).HasMaxLength(30);

                entity.Property(e => e.DepartmentState).HasMaxLength(50);

                entity.Property(e => e.DepartmentWebAddress).HasMaxLength(80);

                entity.Property(e => e.DepartmentZip).HasMaxLength(10);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<DepartmentsTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("PKDEL_Departments_Tombstone_CompanyIDDivisionIDDepartmentID");

                entity.ToTable("Departments_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<DisbursementDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DisbursementId, e.DisbursementDetailId })
                    .HasName("pk_DisbursementDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisbursementId)
                    .HasColumnName("DisbursementID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisbursementDetailId)
                    .HasColumnName("DisbursementDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<DisbursementHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DisbursementId })
                    .HasName("pk_DisbursementHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisbursementId)
                    .HasColumnName("DisbursementID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedForDisbursement).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedForDisbursementDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckPrinted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.Credit).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DisbursementClassId)
                    .HasColumnName("DisbursementClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisbursementDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DisbursementStatus).HasMaxLength(10);

                entity.Property(e => e.DisbursementTypeId)
                    .HasColumnName("DisbursementTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Check')");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((110000))");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.SelectedForDisbursement).HasDefaultValueSql("((0))");

                entity.Property(e => e.SelectedForDisbursementDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.UnAppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<Discounts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DiscountId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountId)
                    .HasColumnName("DiscountID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DiscountDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Divisions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("pk_Divisions")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.DivisionAddress1).HasMaxLength(50);

                entity.Property(e => e.DivisionAddress2).HasMaxLength(50);

                entity.Property(e => e.DivisionCity).HasMaxLength(50);

                entity.Property(e => e.DivisionCountry).HasMaxLength(50);

                entity.Property(e => e.DivisionDescription).HasMaxLength(50);

                entity.Property(e => e.DivisionEmail).HasMaxLength(60);

                entity.Property(e => e.DivisionFax).HasMaxLength(30);

                entity.Property(e => e.DivisionName).HasMaxLength(50);

                entity.Property(e => e.DivisionNotes).HasMaxLength(255);

                entity.Property(e => e.DivisionPhone).HasMaxLength(30);

                entity.Property(e => e.DivisionState).HasMaxLength(50);

                entity.Property(e => e.DivisionWebAddress).HasMaxLength(80);

                entity.Property(e => e.DivisionZip).HasMaxLength(10);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<DivisionsTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("PKDEL_Divisions_Tombstone_CompanyIDDivisionIDDepartmentID");

                entity.ToTable("Divisions_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<Ediaddresses>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReferenceId, e.ReferenceAddressShipTo });

                entity.ToTable("EDIAddresses");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferenceId)
                    .HasColumnName("ReferenceID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferenceAddressShipTo).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReferenceAddressShipFor).HasMaxLength(36);

                entity.Property(e => e.ShipAddress1).HasMaxLength(50);

                entity.Property(e => e.ShipAddress2).HasMaxLength(50);

                entity.Property(e => e.ShipAddress3).HasMaxLength(50);

                entity.Property(e => e.ShipAttention).HasMaxLength(50);

                entity.Property(e => e.ShipCity).HasMaxLength(50);

                entity.Property(e => e.ShipCountry).HasMaxLength(50);

                entity.Property(e => e.ShipEmail).HasMaxLength(60);

                entity.Property(e => e.ShipFax).HasMaxLength(36);

                entity.Property(e => e.ShipName).HasMaxLength(50);

                entity.Property(e => e.ShipNotes).HasMaxLength(255);

                entity.Property(e => e.ShipPhone).HasMaxLength(36);

                entity.Property(e => e.ShipState).HasMaxLength(50);

                entity.Property(e => e.ShipWebPage).HasMaxLength(80);

                entity.Property(e => e.ShipZip).HasMaxLength(10);
            });

            modelBuilder.Entity<Edidirection>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DirectionTypeId })
                    .HasName("pk_EDIDirection")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIDirection");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DirectionTypeId)
                    .HasColumnName("DirectionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DirectionTypeDescription).HasMaxLength(15);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<EdidocumentTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EdidocumentTypeId })
                    .HasName("pk_EDIDocumentTypes")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIDocumentTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EdidocumentDescription)
                    .HasColumnName("EDIDocumentDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<EdiexceptionTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExceptionTypeId })
                    .HasName("pk_EDIExceptionTypes")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIExceptionTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExceptionTypeId)
                    .HasColumnName("ExceptionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExceptionTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Ediexceptions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExceptionId })
                    .HasName("pk_EDIExceptions")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIExceptions");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExceptionId)
                    .HasColumnName("ExceptionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DirectionId)
                    .HasColumnName("DirectionID")
                    .HasMaxLength(1);

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExactErrorMessage).HasMaxLength(50);

                entity.Property(e => e.ExceptionTypeId)
                    .HasColumnName("ExceptionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<EdiinvoiceDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.InvoiceLineNumber })
                    .HasName("pk_EDIInvoiceDetail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIInvoiceDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.InvoiceLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice).HasColumnType("money");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<EdiinvoiceHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber })
                    .HasName("pk_EDIInvoiceHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIInvoiceHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising).HasColumnType("money");

                entity.Property(e => e.AmountPaid).HasColumnType("money");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BilledDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost).HasColumnType("money");

                entity.Property(e => e.Commission).HasColumnType("money");

                entity.Property(e => e.CommissionableSales).HasColumnType("money");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(15);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerShipForId)
                    .HasColumnName("CustomerShipForID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerShipToId)
                    .HasColumnName("CustomerShipToID")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(15);

                entity.Property(e => e.Freight).HasColumnType("money");

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling).HasColumnType("money");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceCancelDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceDueDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceShipDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceTypeId)
                    .HasColumnName("InvoiceTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PickedDate).HasColumnType("datetime");

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.PrintedDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.ShipDate).HasColumnType("datetime");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(15);

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Subtotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxableSubTotal).HasColumnType("money");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<Ediitems>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.ReferenceId });

                entity.ToTable("EDIItems");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReferenceId)
                    .HasColumnName("ReferenceID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.Epccode)
                    .HasColumnName("EPCCode")
                    .HasMaxLength(12);

                entity.Property(e => e.Height).HasMaxLength(10);

                entity.Property(e => e.ItemCategory).HasMaxLength(36);

                entity.Property(e => e.ItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemFamily).HasMaxLength(36);

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36);

                entity.Property(e => e.Length).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Nrfcolor)
                    .HasColumnName("NRFColor")
                    .HasMaxLength(10);

                entity.Property(e => e.Nrfstyle)
                    .HasColumnName("NRFStyle")
                    .HasMaxLength(10);

                entity.Property(e => e.ReferenceDescription).HasMaxLength(80);

                entity.Property(e => e.Rfidcode)
                    .HasColumnName("RFIDCode")
                    .HasMaxLength(80);

                entity.Property(e => e.Uombasis)
                    .HasColumnName("UOMBasis")
                    .HasMaxLength(36);

                entity.Property(e => e.Upccode)
                    .HasColumnName("UPCCode")
                    .HasMaxLength(12);

                entity.Property(e => e.Width).HasMaxLength(10);
            });

            modelBuilder.Entity<EdiorderDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.OrderLineNumber })
                    .HasName("pk_EDIOrderDetail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIOrderDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice).HasColumnType("money");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<EdiorderHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber })
                    .HasName("pk_EDIOrderHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIOrderHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising).HasColumnType("money");

                entity.Property(e => e.AmountPaid).HasColumnType("money");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BilledDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost).HasColumnType("money");

                entity.Property(e => e.Commission).HasColumnType("money");

                entity.Property(e => e.CommissionableSales).HasColumnType("money");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(15);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerShipForId)
                    .HasColumnName("CustomerShipForID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerShipToId)
                    .HasColumnName("CustomerShipToID")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Freight).HasColumnType("money");

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling).HasColumnType("money");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceDate).HasColumnType("datetime");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(20);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.OrderCancelDate).HasColumnType("datetime");

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.OrderDueDate).HasColumnType("datetime");

                entity.Property(e => e.OrderShipDate).HasColumnType("datetime");

                entity.Property(e => e.OrderTypeId)
                    .HasColumnName("OrderTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PickedDate).HasColumnType("datetime");

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.PrintedDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.ShipDate).HasColumnType("datetime");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Subtotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxableSubTotal).HasColumnType("money");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<EdipaymentsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId, e.PaymentDetailId })
                    .HasName("EDIPaymentsDetail_key");

                entity.ToTable("EDIPaymentsDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDetailId)
                    .HasColumnName("PaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountTaken).HasColumnType("money");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.WriteOffAmount).HasColumnType("money");
            });

            modelBuilder.Entity<EdipaymentsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId })
                    .HasName("EDIPaymentsHeader_key");

                entity.ToTable("EDIPaymentsHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.ApprovedForPaymentDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentStatus).HasMaxLength(10);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.SelectedForPaymentDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<EdipurchaseDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_EDIPurchaseDetail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIPurchaseDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice).HasColumnType("money");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<EdipurchaseHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("pk_EDIPurchaseHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIPurchaseHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising).HasColumnType("money");

                entity.Property(e => e.AmountPaid).HasColumnType("money");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(15);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.Freight).HasColumnType("money");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling).HasColumnType("money");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderedBy).HasMaxLength(15);

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.PrintedDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseCancelDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseDateRequested).HasColumnType("datetime");

                entity.Property(e => e.PurchaseDueDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseShipDate).HasColumnType("datetime");

                entity.Property(e => e.PurchaseTypeId)
                    .HasColumnName("PurchaseTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate).HasColumnType("datetime");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Subtotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxableSubTotal).HasColumnType("money");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<EdireceiptsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId, e.ReceiptDetailId })
                    .HasName("pk_EDIReceiptsDetail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIReceiptsDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptDetailId)
                    .HasColumnName("ReceiptDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountTaken).HasColumnType("money");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WriteOffAmount).HasColumnType("money");
            });

            modelBuilder.Entity<EdireceiptsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId })
                    .HasName("pk_EDIReceiptsHeader")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("EDIReceiptsHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.EdidirectionTypeId)
                    .HasColumnName("EDIDirectionTypeID")
                    .HasMaxLength(1);

                entity.Property(e => e.EdidocumentTypeId)
                    .HasColumnName("EDIDocumentTypeID")
                    .HasMaxLength(3);

                entity.Property(e => e.Ediopen).HasColumnName("EDIOpen");

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Nsf).HasColumnName("NSF");

                entity.Property(e => e.ReceiptClassId)
                    .HasColumnName("ReceiptClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeId)
                    .HasColumnName("ReceiptTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(10);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");
            });

            modelBuilder.Entity<Edisetup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Ediid });

                entity.ToTable("EDISetup");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ediid)
                    .HasColumnName("EDIID")
                    .HasMaxLength(10);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Ediactive).HasColumnName("EDIActive");

                entity.Property(e => e.EdiinboundAsn).HasColumnName("EDIInboundASN");

                entity.Property(e => e.EdiinboundFinancial).HasColumnName("EDIInboundFinancial");

                entity.Property(e => e.EdiinboundInventory).HasColumnName("EDIInboundInventory");

                entity.Property(e => e.EdiinboundInvoices).HasColumnName("EDIInboundInvoices");

                entity.Property(e => e.EdiinboundOrderStatus).HasColumnName("EDIInboundOrderStatus");

                entity.Property(e => e.EdiinboundOrders).HasColumnName("EDIInboundOrders");

                entity.Property(e => e.EdiinboundUpc).HasColumnName("EDIInboundUPC");

                entity.Property(e => e.EdioutboundAsn).HasColumnName("EDIOutboundASN");

                entity.Property(e => e.EdioutboundFinancial).HasColumnName("EDIOutboundFinancial");

                entity.Property(e => e.EdioutboundInventory).HasColumnName("EDIOutboundInventory");

                entity.Property(e => e.EdioutboundInvoices).HasColumnName("EDIOutboundInvoices");

                entity.Property(e => e.EdioutboundOrderStatus).HasColumnName("EDIOutboundOrderStatus");

                entity.Property(e => e.EdioutboundOrders).HasColumnName("EDIOutboundOrders");

                entity.Property(e => e.EdioutboundUpc).HasColumnName("EDIOutboundUPC");

                entity.Property(e => e.Ediqualifier)
                    .HasColumnName("EDIQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EditestId)
                    .HasColumnName("EDITestID")
                    .HasMaxLength(10);

                entity.Property(e => e.EditestQualifier)
                    .HasColumnName("EDITestQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Edistatements>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankTransactionId });

                entity.ToTable("EDIStatements");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BeginningBalance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DebitCredit).HasMaxLength(1);

                entity.Property(e => e.EndingBalance).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.RelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAccount).HasMaxLength(36);

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionCodeA).HasMaxLength(1);

                entity.Property(e => e.TransactionCodeB).HasMaxLength(1);

                entity.Property(e => e.TransactionCodeC).HasMaxLength(1);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDescription).HasMaxLength(120);

                entity.Property(e => e.TransactionReference).HasMaxLength(120);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<EdistatementsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankId, e.BankTransactionId });

                entity.ToTable("EDIStatementsHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BeginningBalance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DebitCredit).HasMaxLength(1);

                entity.Property(e => e.EndingBalance).HasColumnType("money");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.RelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAccount).HasMaxLength(36);

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionCodeA).HasMaxLength(1);

                entity.Property(e => e.TransactionCodeB).HasMaxLength(1);

                entity.Property(e => e.TransactionCodeC).HasMaxLength(1);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDescription).HasMaxLength(120);

                entity.Property(e => e.TransactionReference).HasMaxLength(120);

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<ErrorLog>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ErrorId })
                    .HasName("PK_ErrorLogHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ErrorId)
                    .HasColumnName("ErrorID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CallTime).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Error).HasMaxLength(200);

                entity.Property(e => e.ErrorDate).HasColumnType("datetime");

                entity.Property(e => e.ErrorMessage).HasMaxLength(255);

                entity.Property(e => e.ErrorTime).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ModuleName).HasMaxLength(50);

                entity.Property(e => e.ProcedureName).HasMaxLength(50);

                entity.Property(e => e.ScreenName).HasMaxLength(50);
            });

            modelBuilder.Entity<ErrorLogDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ErrorDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ErrorDetailId)
                    .HasColumnName("ErrorDetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ErrorId).HasColumnName("ErrorID");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ParameterName).HasMaxLength(50);

                entity.Property(e => e.ParameterValue).HasMaxLength(50);
            });

            modelBuilder.Entity<ExpenseReportDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportId, e.ExpenseReporDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportId)
                    .HasColumnName("ExpenseReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReporDetailId)
                    .HasColumnName("ExpenseReporDetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportDetailAmount)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExpenseReportDetailDescription).HasMaxLength(255);

                entity.Property(e => e.ExpenseReportDetailMemo1).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo2).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo3).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo4).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo5).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailTotal).HasColumnType("money");

                entity.Property(e => e.ExpenseReportDetailUnits)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExpenseReportItemId)
                    .HasColumnName("ExpenseReportItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReceiptId)
                    .HasColumnName("ExpenseReportReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportId)
                    .HasColumnName("ExpenseReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReporDetailId)
                    .HasColumnName("ExpenseReporDetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ExpenseReportDetailAmount)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExpenseReportDetailDescription).HasMaxLength(255);

                entity.Property(e => e.ExpenseReportDetailMemo1).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo2).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo3).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo4).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailMemo5).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportDetailTotal).HasColumnType("money");

                entity.Property(e => e.ExpenseReportDetailUnits)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ExpenseReportItemId)
                    .HasColumnName("ExpenseReportItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReceiptId)
                    .HasColumnName("ExpenseReportReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportId)
                    .HasColumnName("ExpenseReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportAdvances).HasColumnType("money");

                entity.Property(e => e.ExpenseReportApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportDescription).HasMaxLength(255);

                entity.Property(e => e.ExpenseReportDueEmployee).HasColumnType("money");

                entity.Property(e => e.ExpenseReportForEmployee).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportMemo1).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo10).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo2).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo3).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo4).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo5).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo6).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo7).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo8).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo9).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportPaidDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportPaymentId)
                    .HasColumnName("ExpenseReportPaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReason).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportTotal).HasColumnType("money");

                entity.Property(e => e.ExpenseReportType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportId)
                    .HasColumnName("ExpenseReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportAdvances).HasColumnType("money");

                entity.Property(e => e.ExpenseReportApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportDescription).HasMaxLength(255);

                entity.Property(e => e.ExpenseReportDueEmployee).HasColumnType("money");

                entity.Property(e => e.ExpenseReportForEmployee).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportMemo1).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo10).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo2).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo3).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo4).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo5).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo6).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo7).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo8).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportMemo9).HasMaxLength(50);

                entity.Property(e => e.ExpenseReportPaidDate).HasColumnType("datetime");

                entity.Property(e => e.ExpenseReportPaymentId)
                    .HasColumnName("ExpenseReportPaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReason).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportTotal).HasColumnType("money");

                entity.Property(e => e.ExpenseReportType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportItems>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportItemId)
                    .HasColumnName("ExpenseReportItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportItemDescription).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportMilageRate).HasColumnType("money");

                entity.Property(e => e.ExpsneseReportGlaccount)
                    .HasColumnName("ExpsneseReportGLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportReasons>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportReason });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReason).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportReasonDescription).HasMaxLength(120);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpenseReportTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ExpenseReportType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ExpenseReportType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ExpenseReportTypeDescription).HasMaxLength(120);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpensesSharingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber, e.ForDivisionId, e.ForDepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ForDivisionId)
                    .HasColumnName("ForDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ForDepartmentId)
                    .HasColumnName("ForDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ExpensesSharingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountName)
                    .HasColumnName("GLAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<FixedAssetDepreciationMethods>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetDepreciationMethodId })
                    .HasName("constrain_11")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetDepreciationMethodId)
                    .HasColumnName("AssetDepreciationMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DepreciationFormula).HasMaxLength(250);

                entity.Property(e => e.DepreciationMethodDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<FixedAssetDisposals>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId })
                    .HasName("PK_FixedAssetDisposals_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccumulatedDepreciation).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetActualDisposalAmount).HasColumnType("money");

                entity.Property(e => e.AssetAcutalDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetBookValue).HasColumnType("money");

                entity.Property(e => e.AssetDepreciationMethodId)
                    .HasColumnName("AssetDepreciationMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetDescription).HasMaxLength(50);

                entity.Property(e => e.AssetInServiceDate).HasColumnType("datetime");

                entity.Property(e => e.AssetLocation).HasMaxLength(50);

                entity.Property(e => e.AssetName).HasMaxLength(50);

                entity.Property(e => e.AssetOriginalCost).HasColumnType("money");

                entity.Property(e => e.AssetPlanedDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetSalesPrice).HasColumnType("money");

                entity.Property(e => e.AssetSalvageValue).HasColumnType("money");

                entity.Property(e => e.AssetSerialNumber).HasMaxLength(50);

                entity.Property(e => e.AssetStatusId)
                    .HasColumnName("AssetStatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTypeId)
                    .HasColumnName("AssetTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetUsedBy).HasMaxLength(50);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DepreciationPeriod)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("(N'M')");

                entity.Property(e => e.Disposed).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlfixedAccumDepreciationAccount)
                    .HasColumnName("GLFixedAccumDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetAccount)
                    .HasColumnName("GLFixedAssetAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDepreciationAccount)
                    .HasColumnName("GLFixedDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDisposalAccount)
                    .HasColumnName("GLFixedDisposalAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LastDepreciationAmount).HasColumnType("money");

                entity.Property(e => e.LastDepreciationDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProfitLoss).HasColumnName("Profit_Loss");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<FixedAssetLocation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetLocationId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetLocationId)
                    .HasColumnName("AssetLocationID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetLocationDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<FixedAssetStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetStatusId })
                    .HasName("pk_FixedAssetStatus")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetStatusId)
                    .HasColumnName("AssetStatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetStatusDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<FixedAssetTransactions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId, e.TransactionTypeId, e.AssetTransactionDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTransactionDetailId)
                    .HasColumnName("AssetTransactionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(200);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<FixedAssetType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetTypeId })
                    .HasName("pk_FixedAssetType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTypeId)
                    .HasColumnName("AssetTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTypeDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlfixedAccumDepreciationAccount)
                    .HasColumnName("GLFixedAccumDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetAccount)
                    .HasColumnName("GLFixedAssetAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDepreciationAccount)
                    .HasColumnName("GLFixedDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDisposalAccount)
                    .HasColumnName("GLFixedDisposalAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<FixedAssets>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId })
                    .HasName("pk_FixedAssets")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccumulatedDepreciation).HasColumnType("money");

                entity.Property(e => e.AcquisitionMode).HasMaxLength(36);

                entity.Property(e => e.ActiveYn)
                    .HasColumnName("ActiveYN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetActualDisposalAmount).HasColumnType("money");

                entity.Property(e => e.AssetAcutalDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetBookValue).HasColumnType("money");

                entity.Property(e => e.AssetDepreciationMethodId)
                    .HasColumnName("AssetDepreciationMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetDescription).HasMaxLength(50);

                entity.Property(e => e.AssetInServiceDate).HasColumnType("datetime");

                entity.Property(e => e.AssetLocation).HasMaxLength(50);

                entity.Property(e => e.AssetName).HasMaxLength(50);

                entity.Property(e => e.AssetOriginalCost).HasColumnType("money");

                entity.Property(e => e.AssetPlanedDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetSalesPrice).HasColumnType("money");

                entity.Property(e => e.AssetSalvageValue).HasColumnType("money");

                entity.Property(e => e.AssetSerialNumber).HasMaxLength(50);

                entity.Property(e => e.AssetStatusId)
                    .HasColumnName("AssetStatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTypeId)
                    .HasColumnName("AssetTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetUsedBy).HasMaxLength(50);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BookOpeningBalanceToGl).HasColumnName("BookOpeningBalanceToGL");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DepreciationPeriod)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("(N'Y')");

                entity.Property(e => e.Disposed).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAccumDepreciationAccount)
                    .HasColumnName("GLFixedAccumDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetAccount)
                    .HasColumnName("GLFixedAssetAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDepreciationAccount)
                    .HasColumnName("GLFixedDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDisposalAccount)
                    .HasColumnName("GLFixedDisposalAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlopeningBalanceContra)
                    .HasColumnName("GLOpeningBalanceContra")
                    .HasMaxLength(36);

                entity.Property(e => e.GlrevaluationDeficitAccount)
                    .HasColumnName("GLRevaluationDeficitAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlrevaluationSurplusAccount)
                    .HasColumnName("GLRevaluationSurplusAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LastDepreciationAmount).HasColumnType("money");

                entity.Property(e => e.LastDepreciationDate).HasColumnType("datetime");

                entity.Property(e => e.LastRevaluationDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MasterAssetId)
                    .HasColumnName("MasterAssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(36);

                entity.Property(e => e.OpeningBalanceDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProfitLoss).HasColumnName("Profit_Loss");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<FixedAssetsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId })
                    .HasName("PK_FixedAssetsHistory_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccumulatedDepreciation).HasColumnType("money");

                entity.Property(e => e.AcquisitionMode).HasMaxLength(36);

                entity.Property(e => e.ActiveYn)
                    .HasColumnName("ActiveYN")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetActualDisposalAmount).HasColumnType("money");

                entity.Property(e => e.AssetAcutalDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetBookValue).HasColumnType("money");

                entity.Property(e => e.AssetDepreciationMethodId)
                    .HasColumnName("AssetDepreciationMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetDescription).HasMaxLength(50);

                entity.Property(e => e.AssetInServiceDate).HasColumnType("datetime");

                entity.Property(e => e.AssetLocation).HasMaxLength(50);

                entity.Property(e => e.AssetName).HasMaxLength(50);

                entity.Property(e => e.AssetOriginalCost).HasColumnType("money");

                entity.Property(e => e.AssetPlanedDisposalDate).HasColumnType("datetime");

                entity.Property(e => e.AssetSalesPrice).HasColumnType("money");

                entity.Property(e => e.AssetSalvageValue).HasColumnType("money");

                entity.Property(e => e.AssetSerialNumber).HasMaxLength(50);

                entity.Property(e => e.AssetStatusId)
                    .HasColumnName("AssetStatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetTypeId)
                    .HasColumnName("AssetTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetUsedBy).HasMaxLength(50);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BookOpeningBalanceToGl).HasColumnName("BookOpeningBalanceToGL");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DepreciationPeriod)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("(N'Y')");

                entity.Property(e => e.Disposed).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAccumDepreciationAccount)
                    .HasColumnName("GLFixedAccumDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetAccount)
                    .HasColumnName("GLFixedAssetAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDepreciationAccount)
                    .HasColumnName("GLFixedDepreciationAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedDisposalAccount)
                    .HasColumnName("GLFixedDisposalAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlopeningBalanceContra)
                    .HasColumnName("GLOpeningBalanceContra")
                    .HasMaxLength(36);

                entity.Property(e => e.GlrevaluationDeficitAccount)
                    .HasColumnName("GLRevaluationDeficitAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlrevaluationSurplusAccount)
                    .HasColumnName("GLRevaluationSurplusAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LastDepreciationAmount).HasColumnType("money");

                entity.Property(e => e.LastDepreciationDate).HasColumnType("datetime");

                entity.Property(e => e.LastRevaluationDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MasterAssetId)
                    .HasColumnName("MasterAssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.Narratives).HasMaxLength(36);

                entity.Property(e => e.OpeningBalanceDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProfitLoss).HasColumnName("Profit_Loss");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<FixedAssetsImpairment>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId, e.TransactionDate })
                    .HasName("PK_FixedAssetsImpairment_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlfixedAssetProfitOrLossAccount)
                    .HasColumnName("GLFixedAssetProfitOrLossAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfixedRevaluationableAccount)
                    .HasColumnName("GLFixedRevaluationableAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(36);
            });

            modelBuilder.Entity<FixedAssetsInsurance>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssetId, e.VendorId })
                    .HasName("PK_FixedAssetInsurance");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.InsuranceType).HasMaxLength(36);

                entity.Property(e => e.InsuredNote).HasMaxLength(80);

                entity.Property(e => e.InsuredReference).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OtherReference).HasMaxLength(36);

                entity.Property(e => e.PolicyEndDate).HasColumnType("datetime");

                entity.Property(e => e.PolicyStartDate).HasColumnType("datetime");

                entity.Property(e => e.RenewalDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HelpMessageBoard>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MessageHeadingId, e.MessageTopicId, e.MessageTitleId })
                    .HasName("PK_HelpMessageBoard_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageHeadingId)
                    .HasColumnName("MessageHeadingID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageTopicId)
                    .HasColumnName("MessageTopicID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageTitleId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MessageDate).HasColumnType("datetime");

                entity.Property(e => e.MessageEmail).HasMaxLength(80);

                entity.Property(e => e.MessageName).HasMaxLength(80);

                entity.Property(e => e.MessageParentTitleId).HasMaxLength(36);

                entity.Property(e => e.MessagePictureUrl)
                    .HasColumnName("MessagePictureURL")
                    .HasMaxLength(120);

                entity.Property(e => e.MessageText).HasMaxLength(999);

                entity.Property(e => e.MessageTitle).HasMaxLength(80);

                entity.Property(e => e.ProductId)
                    .HasColumnName("ProductID")
                    .HasMaxLength(36);

                entity.Property(e => e.Valid).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<HelpMessageHeading>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MessageHeadingId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageHeadingId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MessageHeadingDate).HasColumnType("datetime");

                entity.Property(e => e.MessageHeadingDescription).HasMaxLength(255);

                entity.Property(e => e.MessageHeadingPictureUrl)
                    .HasColumnName("MessageHeadingPictureURL")
                    .HasMaxLength(120);

                entity.Property(e => e.MessageHeadingTitle).HasMaxLength(80);
            });

            modelBuilder.Entity<HelpMessageTopic>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MessageHeadingId, e.MessageTopicId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageHeadingId)
                    .HasColumnName("MessageHeadingID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageTopicId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MessageTopicDate).HasColumnType("datetime");

                entity.Property(e => e.MessageTopicDescription).HasMaxLength(255);

                entity.Property(e => e.MessageTopicPictureUrl)
                    .HasColumnName("MessageTopicPictureURL")
                    .HasMaxLength(120);

                entity.Property(e => e.MessageTopicTitle)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<HelpMessageTopicSubscribe>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MessageHeadingId, e.MessageTopicId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageHeadingId)
                    .HasColumnName("MessageHeadingID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageTopicId)
                    .HasColumnName("MessageTopicID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpNewTopicsSubscribe>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MessageHeadingId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageHeadingId).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpNewsBoard>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.NewsId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.NewsId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewsDate).HasColumnType("datetime");

                entity.Property(e => e.NewsMessage).HasMaxLength(255);

                entity.Property(e => e.NewsProductId)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.NewsTitle)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<HelpPriority>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Priority });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PriorityDescription).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpProblemReport>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CaseId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CaseId).ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProblemApproved).HasDefaultValueSql("(0)");

                entity.Property(e => e.ProblemApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ProblemAssigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.ProblemAssignedTo).HasMaxLength(36);

                entity.Property(e => e.ProblemDate).HasColumnType("datetime");

                entity.Property(e => e.ProblemExactErrorMessage).HasMaxLength(255);

                entity.Property(e => e.ProblemFix).HasMaxLength(999);

                entity.Property(e => e.ProblemFixDate).HasColumnType("datetime");

                entity.Property(e => e.ProblemKeywords).HasMaxLength(80);

                entity.Property(e => e.ProblemLongDescription).HasMaxLength(255);

                entity.Property(e => e.ProblemManager)
                    .HasMaxLength(36)
                    .IsUnicode(false);

                entity.Property(e => e.ProblemNotesPrivate).HasMaxLength(255);

                entity.Property(e => e.ProblemRequestMethod).HasMaxLength(36);

                entity.Property(e => e.ProblemScreenShotUrl)
                    .HasColumnName("ProblemScreenShotURL")
                    .HasMaxLength(120);

                entity.Property(e => e.ProblemShortDescription).HasMaxLength(80);

                entity.Property(e => e.ProblemStatus).HasMaxLength(36);

                entity.Property(e => e.ProblemStepsToReproduce).HasMaxLength(999);

                entity.Property(e => e.ProblemType).HasMaxLength(36);

                entity.Property(e => e.ProblemVersion).HasMaxLength(36);

                entity.Property(e => e.ProductId).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpProblemReportDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CaseId, e.CaseIddetail });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CaseId).HasColumnName("CaseID");

                entity.Property(e => e.CaseIddetail)
                    .HasColumnName("CaseIDDetail")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Created).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Message).HasMaxLength(999);

                entity.Property(e => e.ScreenShotUrl)
                    .HasColumnName("ScreenShotURL")
                    .HasMaxLength(120);

                entity.Property(e => e.Subject).HasMaxLength(80);
            });

            modelBuilder.Entity<HelpProblemType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProblemType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProblemType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProblemTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<HelpReleaseDates>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProductName, e.CurrentVersion });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProductName).HasMaxLength(36);

                entity.Property(e => e.CurrentVersion).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextVersion).HasMaxLength(80);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ReleaseDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<HelpRequestMethod>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequestMethod });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestMethod).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RequestMethodDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<HelpResourceType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ResourceType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ResourceType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ResourceTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<HelpResources>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ResourceId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ResourceId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ResourceDescription).HasMaxLength(120);

                entity.Property(e => e.ResourceLink).HasMaxLength(80);

                entity.Property(e => e.ResourceProductId).HasMaxLength(36);

                entity.Property(e => e.ResourceType).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpSeverity>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Severity });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Severity).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SeverityDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<HelpStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.StatusId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.StatusDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<HelpSupportRequest>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CaseId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CaseId).ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactId).HasMaxLength(36);

                entity.Property(e => e.CustomerId).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProductId).HasMaxLength(36);

                entity.Property(e => e.SuportNotesPrivate).HasMaxLength(255);

                entity.Property(e => e.SupportApproved).HasDefaultValueSql("(0)");

                entity.Property(e => e.SupportApprovedBy).HasMaxLength(26);

                entity.Property(e => e.SupportAssigned).HasDefaultValueSql("(0)");

                entity.Property(e => e.SupportAssignedTo).HasMaxLength(36);

                entity.Property(e => e.SupportDate).HasColumnType("datetime");

                entity.Property(e => e.SupportDescription).HasMaxLength(999);

                entity.Property(e => e.SupportKeywords).HasMaxLength(120);

                entity.Property(e => e.SupportManager).HasMaxLength(36);

                entity.Property(e => e.SupportQuestion).HasMaxLength(255);

                entity.Property(e => e.SupportRequestMethod).HasMaxLength(36);

                entity.Property(e => e.SupportResolution).HasMaxLength(999);

                entity.Property(e => e.SupportResolutionDate).HasColumnType("datetime");

                entity.Property(e => e.SupportScreenShotUrl)
                    .HasColumnName("SupportScreenShotURL")
                    .HasMaxLength(120);

                entity.Property(e => e.SupportStatus).HasMaxLength(36);

                entity.Property(e => e.SupportType).HasMaxLength(36);

                entity.Property(e => e.SupportVersion).HasMaxLength(36);
            });

            modelBuilder.Entity<HelpSupportRequestDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CaseId, e.CaseIddetail });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CaseId).HasColumnName("CaseID");

                entity.Property(e => e.CaseIddetail)
                    .HasColumnName("CaseIDDetail")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Created).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Message).HasMaxLength(999);

                entity.Property(e => e.ScreenShotUrl)
                    .HasColumnName("ScreenShotURL")
                    .HasMaxLength(120);

                entity.Property(e => e.Subject).HasMaxLength(80);
            });

            modelBuilder.Entity<HelpSupportRequestType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.SupportRequestType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.SupportRequestType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SupportRequestTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<ImportExportUtility>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TableId });

                entity.ToTable("Import_Export_Utility");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TableId)
                    .HasColumnName("TableID")
                    .HasMaxLength(100);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TableDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<InventoryAdjustmentSerialNumberDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.ItemId, e.SerialNumber })
                    .HasName("PK_InventoryAdjustmentSerialNumberDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryAdjustmentTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentTypeId })
                    .HasName("pk_InventoryAdjustmentTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryAdjustments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId })
                    .HasName("pk_InventoryAdjustments")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AdjustmentNotes).HasMaxLength(255);

                entity.Property(e => e.AdjustmentPostToGl).HasColumnName("AdjustmentPostToGL");

                entity.Property(e => e.AdjustmentReason).HasMaxLength(50);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<InventoryAdjustmentsBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentDate).HasColumnType("datetime");

                entity.Property(e => e.AdjustmentNotes).HasMaxLength(255);

                entity.Property(e => e.AdjustmentPostToGl).HasColumnName("AdjustmentPostToGL");

                entity.Property(e => e.AdjustmentReason).HasMaxLength(50);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<InventoryAdjustmentsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId, e.AdjustmentLineId })
                    .HasName("pk_InventoryAdjustmentsDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentLineId)
                    .HasColumnName("AdjustmentLineID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AdjustmentDescription).HasMaxLength(255);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cost).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GladjustmentPostingAccount)
                    .HasColumnName("GLAdjustmentPostingAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InventoryAdjustmentsDetailBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId, e.AdjustmentLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentLineId)
                    .HasColumnName("AdjustmentLineID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AdjustmentDescription).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cost).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GladjustmentPostingAccount)
                    .HasColumnName("GLAdjustmentPostingAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(131000)");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InventoryAdjustmentsDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId, e.AdjustmentLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentLineId)
                    .HasColumnName("AdjustmentLineID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AdjustmentDescription).HasMaxLength(255);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cost).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GladjustmentPostingAccount)
                    .HasColumnName("GLAdjustmentPostingAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InventoryAdjustmentsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AdjustmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentId)
                    .HasColumnName("AdjustmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentDate).HasColumnType("datetime");

                entity.Property(e => e.AdjustmentNotes).HasMaxLength(255);

                entity.Property(e => e.AdjustmentPostToGl).HasColumnName("AdjustmentPostToGL");

                entity.Property(e => e.AdjustmentReason).HasMaxLength(50);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<InventoryAssemblies>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.ItemId })
                    .HasName("pk_InventoryAssemblies")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprivedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.LaborCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NumberOfItemsInAssembly).HasDefaultValueSql("((1))");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InventoryAssembliesAlternate>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.ItemId, e.AlternateItemId })
                    .HasName("pk_InventoryAssembliesAlternate")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.AlternateItemId)
                    .HasColumnName("AlternateItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprivedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LaborCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InventoryAssembliesInstructions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApproveBy).HasMaxLength(36);

                entity.Property(e => e.ApproveDate).HasColumnType("datetime");

                entity.Property(e => e.AssemblyBuildInstructions).HasMaxLength(999);

                entity.Property(e => e.AssemblyDiagramUrl)
                    .HasColumnName("AssemblyDiagramURL")
                    .HasMaxLength(120);

                entity.Property(e => e.AssemblyLastUpdated).HasColumnType("datetime");

                entity.Property(e => e.AssemblyLastUpdatedBy).HasMaxLength(36);

                entity.Property(e => e.AssemblyOtherUrl)
                    .HasColumnName("AssemblyOtherURL")
                    .HasMaxLength(120);

                entity.Property(e => e.AssemblyPictureUrl)
                    .HasColumnName("AssemblyPictureURL")
                    .HasMaxLength(120);

                entity.Property(e => e.AssemblySchematicUrl)
                    .HasColumnName("AssemblySchematicURL")
                    .HasMaxLength(120);

                entity.Property(e => e.AssemblyTimeToBuildUnit).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryAttributes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AttributeId })
                    .HasName("pk_InventoryAttributes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AttributeId)
                    .HasColumnName("AttributeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AttributeDescription).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryByWarehouse>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.WarehouseId, e.WarehouseBinId })
                    .HasName("pk_InventoryByWarehouse")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CycleCode).HasMaxLength(10);

                entity.Property(e => e.LastCountDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastEditDocument).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QtyCommitted).HasDefaultValueSql("((0))");

                entity.Property(e => e.QtyOnBackorder).HasDefaultValueSql("((0))");

                entity.Property(e => e.QtyOnHand).HasDefaultValueSql("((0))");

                entity.Property(e => e.QtyOnOrder).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<InventoryByWarehouseTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.WarehouseId, e.WarehouseBinId })
                    .HasName("PKDEL_InventoryByWarehouse_Tombstone_CompanyIDDivisionIDDepartmentIDItemIDWarehouseIDWarehouseBinID");

                entity.ToTable("InventoryByWarehouse_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InventoryCart>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultBin).HasMaxLength(36);

                entity.Property(e => e.DefaultPricingCode).HasMaxLength(36);

                entity.Property(e => e.DefaultWarehouse).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MinimumOrderAmount).HasColumnType("money");

                entity.Property(e => e.ShowRma).HasColumnName("ShowRMA");
            });

            modelBuilder.Entity<InventoryCategories>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemCategoryId, e.ItemFamilyId })
                    .HasName("pk_InventoryCategories")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CategoryDescription).HasMaxLength(50);

                entity.Property(e => e.CategoryLongDescription).HasMaxLength(80);

                entity.Property(e => e.CategoryName).HasMaxLength(50);

                entity.Property(e => e.CategoryPictureUrl)
                    .HasColumnName("CategoryPictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ServiceCharge).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryCategoriesDisplayLang>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemCategoryId, e.ItemFamilyId, e.DisplayLang });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisplayLang).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CategoryDescription).HasMaxLength(50);

                entity.Property(e => e.CategoryLongDescription).HasMaxLength(80);

                entity.Property(e => e.CategoryName).HasMaxLength(50);

                entity.Property(e => e.CategoryPictureUrl)
                    .HasColumnName("CategoryPictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryCategoriesTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemCategoryId, e.ItemFamilyId })
                    .HasName("PKDEL_InventoryCategories_Tombstone_CompanyIDDivisionIDDepartmentIDItemCategoryIDItemFamilyID");

                entity.ToTable("InventoryCategories_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InventoryCrossSelling>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CrossSellItemId)
                    .HasColumnName("CrossSellItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.CrossSellItemPromotion).HasMaxLength(120);

                entity.Property(e => e.CrossSellItemPromotionEnds).HasColumnType("datetime");

                entity.Property(e => e.CrossSellItemReason).HasMaxLength(120);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryCustomerPricingCode>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Msrp)
                    .HasColumnName("MSRP")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<InventoryFamilies>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemFamilyId })
                    .HasName("pk_InventoryFamilies")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CoscontrolAccount)
                    .HasColumnName("COSControlAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.FamilyDescription).HasMaxLength(50);

                entity.Property(e => e.FamilyLongDescription).HasMaxLength(80);

                entity.Property(e => e.FamilyName).HasMaxLength(50);

                entity.Property(e => e.FamilyPictureUrl)
                    .HasColumnName("FamilyPictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SalesControlAccount).HasMaxLength(36);

                entity.Property(e => e.StockControlAccount).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryFamiliesDisplayLang>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemFamilyId, e.DisplayLang });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisplayLang).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FamilyDescription).HasMaxLength(50);

                entity.Property(e => e.FamilyLongDescription).HasMaxLength(80);

                entity.Property(e => e.FamilyName).HasMaxLength(50);

                entity.Property(e => e.FamilyPictureUrl)
                    .HasColumnName("FamilyPictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryFamiliesTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemFamilyId })
                    .HasName("PKDEL_InventoryFamilies_Tombstone_CompanyIDDivisionIDDepartmentIDItemFamilyID");

                entity.ToTable("InventoryFamilies_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InventoryIssuedSerialNumberDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.ItemId, e.SerialNumber })
                    .HasName("PK_InventoryIssueSerialNumberDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryItemTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemTypeId })
                    .HasName("pk_InventoryItemTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemTypeId)
                    .HasColumnName("ItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ItemTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryItems>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId })
                    .HasName("pk_InventoryItems")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.AllowInventoryTrans).HasDefaultValueSql("((1))");

                entity.Property(e => e.AllowPurchaseTrans).HasDefaultValueSql("((1))");

                entity.Property(e => e.AllowSalesTrans).HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Average)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AverageCost).HasColumnType("money");

                entity.Property(e => e.AverageValue).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BuildTimeUnit).HasMaxLength(10);

                entity.Property(e => e.CalculatedCoverUnits).HasMaxLength(10);

                entity.Property(e => e.CommissionPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionType).HasDefaultValueSql("((0))");

                entity.Property(e => e.Commissionable).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DownloadLocation).HasMaxLength(120);

                entity.Property(e => e.DownloadPassword).HasMaxLength(20);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Expected)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ExpectedCost).HasColumnType("money");

                entity.Property(e => e.ExpectedValue).HasColumnType("money");

                entity.Property(e => e.Fifo)
                    .HasColumnName("FIFO")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Fifocost)
                    .HasColumnName("FIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.Fifovalue)
                    .HasColumnName("FIFOValue")
                    .HasColumnType("money");

                entity.Property(e => e.GlitemCogsaccount)
                    .HasColumnName("GLItemCOGSAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlitemFreightAccount)
                    .HasColumnName("GLItemFreightAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlitemHandlingAccount)
                    .HasColumnName("GLItemHandlingAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlitemInventoryAccount)
                    .HasColumnName("GLItemInventoryAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlitemSalesAccount)
                    .HasColumnName("GLItemSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.IsActive).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsSerialLotItem).HasDefaultValueSql("((0))");

                entity.Property(e => e.IsWarrantyItem).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemAssembly).HasMaxLength(36);

                entity.Property(e => e.ItemCareInstructions).HasMaxLength(80);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemColor).HasMaxLength(50);

                entity.Property(e => e.ItemDefaultWarehouse).HasMaxLength(36);

                entity.Property(e => e.ItemDefaultWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.ItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemDimentions).HasMaxLength(10);

                entity.Property(e => e.ItemDimentionsCmm).HasMaxLength(50);

                entity.Property(e => e.ItemEpccode)
                    .HasColumnName("ItemEPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemFamilyId)
                    .HasColumnName("ItemFamilyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemLocationX).HasMaxLength(10);

                entity.Property(e => e.ItemLocationY).HasMaxLength(10);

                entity.Property(e => e.ItemLocationZ).HasMaxLength(10);

                entity.Property(e => e.ItemLongDescription).HasMaxLength(255);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemNrfcolor)
                    .HasColumnName("ItemNRFColor")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemNrfstyle)
                    .HasColumnName("ItemNRFStyle")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.ItemRfid)
                    .HasColumnName("ItemRFID")
                    .HasMaxLength(80);

                entity.Property(e => e.ItemShipWeight).HasDefaultValueSql("((1))");

                entity.Property(e => e.ItemSize).HasMaxLength(50);

                entity.Property(e => e.ItemSizeCmm).HasMaxLength(50);

                entity.Property(e => e.ItemStyle).HasMaxLength(50);

                entity.Property(e => e.ItemTypeId)
                    .HasColumnName("ItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((1))");

                entity.Property(e => e.ItemWeightMetric).HasDefaultValueSql("((1))");

                entity.Property(e => e.Landed).HasColumnType("money");

                entity.Property(e => e.LandedCost).HasColumnType("money");

                entity.Property(e => e.LandedValue).HasColumnType("money");

                entity.Property(e => e.LargePictureUrl)
                    .HasColumnName("LargePictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LeadTime).HasMaxLength(50);

                entity.Property(e => e.LeadTimeUnit).HasMaxLength(10);

                entity.Property(e => e.Lifo)
                    .HasColumnName("LIFO")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Lifocost)
                    .HasColumnName("LIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.Lifovalue)
                    .HasColumnName("LIFOValue")
                    .HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Other)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OtherCost).HasColumnType("money");

                entity.Property(e => e.OtherValue).HasColumnType("money");

                entity.Property(e => e.PackId)
                    .HasColumnName("PackID")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.PricingMethods).HasMaxLength(36);

                entity.Property(e => e.PurchaseDescription).HasMaxLength(50);

                entity.Property(e => e.SalesDescription).HasMaxLength(50);

                entity.Property(e => e.SalesForecastUnit).HasMaxLength(10);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.UseageRateUnit).HasMaxLength(10);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<InventoryItemsDisplayLang>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.DisplayLang })
                    .HasName("PK_InventoryItemDisplayLang");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.DisplayLang).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IsActive).HasDefaultValueSql("(1)");

                entity.Property(e => e.ItemCareInstructions).HasMaxLength(250);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemColor).HasMaxLength(50);

                entity.Property(e => e.ItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemLongDescription).HasMaxLength(255);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemStyle).HasMaxLength(50);

                entity.Property(e => e.LargePictureUrl)
                    .HasColumnName("LargePictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PurchaseDescription).HasMaxLength(50);

                entity.Property(e => e.SalesDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<InventoryItemsTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId })
                    .HasName("PKDEL_InventoryItems_Tombstone_CompanyIDDivisionIDDepartmentIDItemID");

                entity.ToTable("InventoryItems_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InventoryLedger>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransDate, e.ItemId, e.TransNumber, e.IllineNumber, e.TransactionType, e.WarehouseId, e.WarehouseBinId });

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransDate })
                    .HasName("InventoryLedgerIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransDate).HasColumnType("datetime");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransNumber).HasMaxLength(36);

                entity.Property(e => e.IllineNumber)
                    .HasColumnName("ILLineNumber")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TransactionType).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountName).HasMaxLength(50);

                entity.Property(e => e.AverageCost).HasColumnType("money");

                entity.Property(e => e.BalanceQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BatchNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostPerUnit).HasColumnType("money");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.ExpectedCost).HasColumnType("money");

                entity.Property(e => e.Fifocost)
                    .HasColumnName("FIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.Lifocost)
                    .HasColumnName("LIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.OtherCost).HasColumnType("money");

                entity.Property(e => e.ReferenceNumber).HasMaxLength(36);

                entity.Property(e => e.StandardCost).HasColumnType("money");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.TotalCost).HasColumnType("money");
            });

            modelBuilder.Entity<InventoryLedgerHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransDate, e.ItemId, e.TransNumber, e.IllineNumber, e.TransactionType, e.WarehouseId, e.WarehouseBinId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransDate).HasColumnType("datetime");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransNumber).HasMaxLength(36);

                entity.Property(e => e.IllineNumber)
                    .HasColumnName("ILLineNumber")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.TransactionType).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountName).HasMaxLength(50);

                entity.Property(e => e.AverageCost).HasColumnType("money");

                entity.Property(e => e.BalanceQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BatchNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostPerUnit).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.ExpectedCost).HasColumnType("money");

                entity.Property(e => e.Fifocost)
                    .HasColumnName("FIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.Lifocost)
                    .HasColumnName("LIFOCost")
                    .HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.OtherCost).HasColumnType("money");

                entity.Property(e => e.ReferenceNumber).HasMaxLength(36);

                entity.Property(e => e.StandardCost).HasColumnType("money");

                entity.Property(e => e.TotalCost).HasColumnType("money");
            });

            modelBuilder.Entity<InventoryNoticifations>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.CustomerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotificationType).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryPricingCode>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.ItemPricingCode })
                    .HasName("pk_InventoryPricingCode")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Msrp)
                    .HasColumnName("MSRP")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Price)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SaleEndDate).HasColumnType("datetime");

                entity.Property(e => e.SaleStartDate).HasColumnType("datetime");

                entity.Property(e => e.SalesPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<InventoryPricingMethods>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PricingMethodId })
                    .HasName("pk_InventoryPricingMethods")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PricingMethodId)
                    .HasColumnName("PricingMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PricingMethodDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<InventoryReceivedDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InventoryReceivedId, e.InventoryReceivedDetailId })
                    .HasName("pk_InventoryReceivedDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryReceivedId)
                    .HasColumnName("InventoryReceivedID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryReceivedDetailId)
                    .HasColumnName("InventoryReceivedDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostMethod).HasMaxLength(1);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryTransferId)
                    .HasColumnName("InventoryTransferID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemValue).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ponumber)
                    .HasColumnName("PONumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestedQty).HasDefaultValueSql("((1))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseBinId)
                    .HasColumnName("ToWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseId)
                    .HasColumnName("ToWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryReceivedHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InventoryReceivedId })
                    .HasName("pk_InventoryReceivedHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryReceivedId)
                    .HasColumnName("InventoryReceivedID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Received')");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DeliveryNote).HasMaxLength(36);

                entity.Property(e => e.DriversName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.FromCompanyId)
                    .HasColumnName("FromCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.FromDepartmentId)
                    .HasColumnName("FromDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.FromDivisionId)
                    .HasColumnName("FromDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.FromWarehouseBinId)
                    .HasColumnName("FromWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.FromWarehouseId)
                    .HasColumnName("FromWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryIssueTransferId)
                    .HasColumnName("InventoryIssueTransferID")
                    .HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(225);

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.Sbcnumber)
                    .HasColumnName("SBCNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SiteNumber).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VehicleRegistration).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseCustomerId)
                    .HasColumnName("WarehouseCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryReceivedSerialNumberDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.ItemId, e.SerialNumber })
                    .HasName("PK_InventoryReceivedSerialNumberDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryRelations>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.RelatedItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedItemId)
                    .HasColumnName("RelatedItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RelatedItemReason).HasMaxLength(120);
            });

            modelBuilder.Entity<InventoryRequisitionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Id, e.ItemId, e.AutoNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateOfTransaction).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryRequisitionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Id });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Id)
                    .HasColumnName("ID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateOfTransaction).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryReviews>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.ReviewId })
                    .HasName("PK_InventoryItemReviews");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReviewId)
                    .HasColumnName("ReviewID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Review).HasMaxLength(999);

                entity.Property(e => e.ReviewBy).HasMaxLength(36);

                entity.Property(e => e.ReviewDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InventorySerialNumbers>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.SerialNumber, e.PurchaseOrderNumber, e.PurchaseOrderLineNumber, e.WarehouseId, e.WarehouseBinId })
                    .HasName("pk_InventorySerialNumbers")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateReceived).HasColumnType("datetime");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.LotExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumberComment).HasMaxLength(80);
            });

            modelBuilder.Entity<InventorySerialNumbersDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.PurchaseNumber, e.SerialNumber, e.WarehouseId, e.WarehouseBinId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateSold).HasColumnType("datetime");

                entity.Property(e => e.DocumentType).HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.IsSold).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ReverseDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumberComment).HasMaxLength(80);
            });

            modelBuilder.Entity<InventorySerialNumbersHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.PurchaseNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateReceived)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.LotExpirationDate).HasColumnType("datetime");

                entity.Property(e => e.LotManufacturedDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SerialNumberComment).HasMaxLength(80);

                entity.Property(e => e.WarehouseBinId)
                    .IsRequired()
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.WarehouseId)
                    .IsRequired()
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('')");
            });

            modelBuilder.Entity<InventorySubstitutions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("PK_ItemSubstitutions");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SubstituteItemId)
                    .HasColumnName("SubstituteItemID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryTransferDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InventoryTransferId, e.InventoryTransferDetailId })
                    .HasName("pk_InventoryTransferDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryTransferId)
                    .HasColumnName("InventoryTransferID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryTransferDetailId)
                    .HasColumnName("InventoryTransferDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostMethod).HasMaxLength(1);

                entity.Property(e => e.DateReceived).HasMaxLength(50);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemValue).HasColumnType("money");

                entity.Property(e => e.LoadingTicket).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestedQty).HasDefaultValueSql("((1))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToCompanyId)
                    .HasColumnName("ToCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToDepartmentId)
                    .HasColumnName("ToDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToDivisionId)
                    .HasColumnName("ToDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseBinId)
                    .HasColumnName("ToWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseId)
                    .HasColumnName("ToWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.TruckNumber).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryTransferHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InventoryTransferId })
                    .HasName("pk_InventoryTransferHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InventoryTransferId)
                    .HasColumnName("InventoryTransferID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Transfer')");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LoadingOfficer).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(225);

                entity.Property(e => e.Rate).HasColumnType("money");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ToCompanyId)
                    .HasColumnName("ToCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToDepartmentId)
                    .HasColumnName("ToDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToDivisionId)
                    .HasColumnName("ToDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryUnitOfMeasure>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.UnitOfMeasureId })
                    .HasName("pk_InventoryUnitOfMeasure")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.UnitOfMeasureId)
                    .HasColumnName("UnitOfMeasureID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.UnitOfMeasureDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<InventoryWarrantyDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.InvoiceNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarrantyEndDate).HasColumnType("datetime");

                entity.Property(e => e.WarrantyStartDate).HasColumnType("datetime");

                entity.Property(e => e.WarrantyStatus).HasMaxLength(36);
            });

            modelBuilder.Entity<InventoryWishList>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ItemId, e.CustomerId })
                    .HasName("PK_InventoryWishList_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WishDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<InvoiceDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.InvoiceLineNumber });

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.InvoiceLineNumber })
                    .HasName("InvoiceDetailIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.InvoiceLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BackOrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BudgetId)
                    .HasColumnName("BudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice).HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((1))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceDetailBatches>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BillNumber, e.BillDate, e.BillLineNumber, e.InvoiceLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillNumber).HasMaxLength(36);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillLineNumber).HasMaxLength(36);

                entity.Property(e => e.InvoiceLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BackOrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BudgetId)
                    .HasColumnName("BudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.InvoiceLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.InvoiceLineNumber)
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BackOrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BudgetId)
                    .HasColumnName("BudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice).HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(12);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber })
                    .HasName("pk_InvoiceHeader")
                    .ForSqlServerIsClustered(false);

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber })
                    .HasName("InvoiceHeaderIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionPaid).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionSelectToPay).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountGroupId1)
                    .HasColumnName("DiscountGroupID1")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId2)
                    .HasColumnName("DiscountGroupID2")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId3)
                    .HasColumnName("DiscountGroupID3")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId4)
                    .HasColumnName("DiscountGroupID4")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId5)
                    .HasColumnName("DiscountGroupID5")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PosreceiptAmount).HasColumnName("POSReceiptAmount");

                entity.Property(e => e.PosreceiptNumber)
                    .HasColumnName("POSReceiptNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Invoice')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceHeaderBatches>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BillNumber, e.BillDate, e.BillLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillNumber).HasMaxLength(36);

                entity.Property(e => e.BillDate).HasColumnType("datetime");

                entity.Property(e => e.BillLineNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionPaid).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionSelectToPay).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Invoice')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionPaid).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionSelectToPay).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountGroupId1)
                    .HasColumnName("DiscountGroupID1")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId2)
                    .HasColumnName("DiscountGroupID2")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId3)
                    .HasColumnName("DiscountGroupID3")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId4)
                    .HasColumnName("DiscountGroupID4")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountGroupId5)
                    .HasColumnName("DiscountGroupID5")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Invoice')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<InvoiceSerialNumberDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.ItemId, e.SerialNumber })
                    .HasName("PK_InvoiceSerialNumberDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedDate).HasColumnType("datetime");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReverseDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<InvoiceTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.CommentNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.CommentNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CommentDate)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.CommentDetails)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<InvoiceTrackingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.InvoiceDescription).HasMaxLength(80);

                entity.Property(e => e.InvoiceLongDescription).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentExpectedBy).HasColumnType("datetime");

                entity.Property(e => e.PaymentProblemReason).HasMaxLength(255);
            });

            modelBuilder.Entity<JournalDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail })
                    .HasName("pk_JournalDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<JournalDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<JournalHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber })
                    .HasName("pk_JournalHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<JournalHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LeadComments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CommentNumber })
                    .HasName("pk_LeadComments")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CommentNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CommentType).HasMaxLength(15);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LeadContacts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeadId, e.ContactId })
                    .HasName("pk_LeadContacts")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(50);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactAddress1).HasMaxLength(50);

                entity.Property(e => e.ContactAddress2).HasMaxLength(50);

                entity.Property(e => e.ContactAddress3).HasMaxLength(50);

                entity.Property(e => e.ContactCallingRestrictions).HasMaxLength(120);

                entity.Property(e => e.ContactCellular).HasMaxLength(30);

                entity.Property(e => e.ContactCity).HasMaxLength(50);

                entity.Property(e => e.ContactCountry).HasMaxLength(50);

                entity.Property(e => e.ContactDepartment).HasMaxLength(20);

                entity.Property(e => e.ContactDescription).HasMaxLength(50);

                entity.Property(e => e.ContactEmail).HasMaxLength(60);

                entity.Property(e => e.ContactFax).HasMaxLength(30);

                entity.Property(e => e.ContactFirstName).HasMaxLength(20);

                entity.Property(e => e.ContactIndustry).HasMaxLength(50);

                entity.Property(e => e.ContactLastName).HasMaxLength(20);

                entity.Property(e => e.ContactLogin).HasMaxLength(60);

                entity.Property(e => e.ContactNotes).HasMaxLength(250);

                entity.Property(e => e.ContactPager).HasMaxLength(30);

                entity.Property(e => e.ContactPassword).HasMaxLength(20);

                entity.Property(e => e.ContactPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordOld).HasMaxLength(15);

                entity.Property(e => e.ContactPhone).HasMaxLength(30);

                entity.Property(e => e.ContactPhone2).HasMaxLength(30);

                entity.Property(e => e.ContactPhone3).HasMaxLength(30);

                entity.Property(e => e.ContactRegion).HasMaxLength(50);

                entity.Property(e => e.ContactSalutation).HasMaxLength(20);

                entity.Property(e => e.ContactSource).HasMaxLength(20);

                entity.Property(e => e.ContactState).HasMaxLength(50);

                entity.Property(e => e.ContactTitle).HasMaxLength(20);

                entity.Property(e => e.ContactWebPage).HasMaxLength(80);

                entity.Property(e => e.ContactZip).HasMaxLength(20);

                entity.Property(e => e.LeadType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LeadInformation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeadId })
                    .HasName("pk_LeadInformation")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(50);

                entity.Property(e => e.Attention).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ConvertedToCustomer).HasDefaultValueSql("(0)");

                entity.Property(e => e.ConvertedToCustomerBy).HasMaxLength(36);

                entity.Property(e => e.ConvertedToCustomerDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.FirstContacted).HasColumnType("datetime");

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(11);

                entity.Property(e => e.LastFollowUp).HasColumnType("datetime");

                entity.Property(e => e.LastVisit).HasColumnType("datetime");

                entity.Property(e => e.LeadAddress1).HasMaxLength(50);

                entity.Property(e => e.LeadAddress2).HasMaxLength(50);

                entity.Property(e => e.LeadAddress3).HasMaxLength(50);

                entity.Property(e => e.LeadCity).HasMaxLength(50);

                entity.Property(e => e.LeadCompany).HasMaxLength(50);

                entity.Property(e => e.LeadCountry).HasMaxLength(50);

                entity.Property(e => e.LeadEmail).HasMaxLength(60);

                entity.Property(e => e.LeadFax).HasMaxLength(30);

                entity.Property(e => e.LeadFirstName).HasMaxLength(50);

                entity.Property(e => e.LeadIndustryId)
                    .HasColumnName("LeadIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadLastName).HasMaxLength(50);

                entity.Property(e => e.LeadLogin).HasMaxLength(60);

                entity.Property(e => e.LeadMemo1).HasMaxLength(50);

                entity.Property(e => e.LeadMemo2).HasMaxLength(50);

                entity.Property(e => e.LeadMemo3).HasMaxLength(50);

                entity.Property(e => e.LeadMemo4).HasMaxLength(50);

                entity.Property(e => e.LeadMemo5).HasMaxLength(50);

                entity.Property(e => e.LeadMemo6).HasMaxLength(50);

                entity.Property(e => e.LeadMemo7).HasMaxLength(50);

                entity.Property(e => e.LeadMemo8).HasMaxLength(50);

                entity.Property(e => e.LeadMemo9).HasMaxLength(50);

                entity.Property(e => e.LeadPassword).HasMaxLength(20);

                entity.Property(e => e.LeadPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.LeadPasswordOld).HasMaxLength(15);

                entity.Property(e => e.LeadPhone).HasMaxLength(30);

                entity.Property(e => e.LeadRegionId)
                    .HasColumnName("LeadRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadSalutation).HasMaxLength(10);

                entity.Property(e => e.LeadSourceId)
                    .HasColumnName("LeadSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadState).HasMaxLength(50);

                entity.Property(e => e.LeadTypeId)
                    .HasColumnName("LeadTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadWebPage).HasMaxLength(80);

                entity.Property(e => e.LeadZip).HasMaxLength(20);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextFollowUp).HasColumnType("datetime");

                entity.Property(e => e.PrimaryInterest).HasMaxLength(50);

                entity.Property(e => e.ReferalUrl)
                    .HasColumnName("ReferalURL")
                    .HasMaxLength(60);

                entity.Property(e => e.ReferedBy).HasMaxLength(15);

                entity.Property(e => e.ReferedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LeadInformationDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeadId, e.ProjectId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.AllocationDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LeadName).HasMaxLength(150);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewCustomerId)
                    .HasColumnName("NewCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.OldFileNumber).HasMaxLength(36);

                entity.Property(e => e.PermanentRevokedBy).HasMaxLength(36);

                entity.Property(e => e.PermanentRevokedPostedDate).HasColumnType("datetime");

                entity.Property(e => e.PlotType).HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.RefundBy).HasMaxLength(36);

                entity.Property(e => e.RefundDate).HasColumnType("datetime");

                entity.Property(e => e.RefundPostedDate).HasColumnType("datetime");

                entity.Property(e => e.RefundRef).HasMaxLength(50);

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(50);

                entity.Property(e => e.RevocationDate).HasColumnType("datetime");

                entity.Property(e => e.RevokedBy).HasMaxLength(36);

                entity.Property(e => e.SubscriptionDate).HasColumnType("datetime");

                entity.Property(e => e.TransferPostedby).HasMaxLength(36);

                entity.Property(e => e.TransferedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LeadSatisfaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeadId, e.ItemId, e.SurveyDate });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.SurveyDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FreeForm).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QuestionEight).HasMaxLength(255);

                entity.Property(e => e.QuestionEleven).HasMaxLength(255);

                entity.Property(e => e.QuestionFifteen).HasMaxLength(255);

                entity.Property(e => e.QuestionFive).HasMaxLength(255);

                entity.Property(e => e.QuestionFour).HasMaxLength(255);

                entity.Property(e => e.QuestionFourteen).HasMaxLength(255);

                entity.Property(e => e.QuestionNine).HasMaxLength(255);

                entity.Property(e => e.QuestionOne).HasMaxLength(255);

                entity.Property(e => e.QuestionSeven).HasMaxLength(255);

                entity.Property(e => e.QuestionSix).HasMaxLength(255);

                entity.Property(e => e.QuestionTen).HasMaxLength(255);

                entity.Property(e => e.QuestionThirteen).HasMaxLength(255);

                entity.Property(e => e.QuestionThree).HasMaxLength(255);

                entity.Property(e => e.QuestionTwelve).HasMaxLength(255);

                entity.Property(e => e.QuestionTwo).HasMaxLength(255);
            });

            modelBuilder.Entity<LeadType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeadTypeId })
                    .HasName("pk_LeadType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeadTypeId)
                    .HasColumnName("LeadTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LeadTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerAccountTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountType })
                    .HasName("pk_LedgerAccountTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountType)
                    .HasColumnName("GLAccountType")
                    .HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountTypeDescription)
                    .HasColumnName("GLAccountTypeDescription")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerAccrualDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LedgerAccrualId, e.LedgerAccrualDetailId })
                    .HasName("pk_LedgerAccrualDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerAccrualId)
                    .HasColumnName("LedgerAccrualID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerAccrualDetailId)
                    .HasColumnName("LedgerAccrualDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<LedgerAccrualHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LedgerAccrualId })
                    .HasName("pk_LedgerAccrualHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerAccrualId)
                    .HasColumnName("LedgerAccrualID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VoidBy).HasMaxLength(36);

                entity.Property(e => e.VoidDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerAnalysis>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlanalysisType })
                    .HasName("PK_LedgerBalanceAnalysis");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType)
                    .HasColumnName("GLAnalysisType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EstimatedAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisTypeDescription)
                    .HasColumnName("GLAnalysisTypeDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerAnalysis2>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlanalysisType })
                    .HasName("PK_LedgerBalanceAnalysis2");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType)
                    .HasColumnName("GLAnalysisType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EstimatedAmount).HasColumnType("money");

                entity.Property(e => e.GlanalysisTypeDescription)
                    .HasColumnName("GLAnalysisTypeDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerBalanceGroupDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbalanceGroup, e.GlbalanceType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbalanceGroup)
                    .HasColumnName("GLBalanceGroup")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerBalanceGroupHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbalanceGroup });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbalanceGroup)
                    .HasColumnName("GLBalanceGroup")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlbalanceGroupDescription)
                    .HasColumnName("GLBalanceGroupDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerBalanceType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbalanceType })
                    .HasName("pk_LedgerBalanceType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlbalanceTypeDescription)
                    .HasColumnName("GLBalanceTypeDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NoteNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerCashFlowType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CashFlowType })
                    .HasName("pk_LedgerCashFlowType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CashFlowType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashFlowTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SortOrder).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerCashFlowTypeItem>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CashFlowType, e.CashFlowItem })
                    .HasName("pk_LedgerCashFlowTypeDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CashFlowType).HasMaxLength(36);

                entity.Property(e => e.CashFlowItem).HasMaxLength(36);

                entity.Property(e => e.BalanceType).HasDefaultValueSql("((1))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashFlowItemDescription).HasMaxLength(50);

                entity.Property(e => e.IsDirectCashFlow).HasDefaultValueSql("((1))");

                entity.Property(e => e.IsInDirectCashFlow).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SortOrder).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerChartOfAccounts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber })
                    .HasName("pk_LedgerChartOfAccounts")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashFlowItem).HasMaxLength(36);

                entity.Property(e => e.CashFlowType).HasMaxLength(36);

                entity.Property(e => e.ControlAccount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlaccountBalance)
                    .HasColumnName("GLAccountBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountBeginningBalance)
                    .HasColumnName("GLAccountBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountDescription)
                    .HasColumnName("GLAccountDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GlaccountName)
                    .HasColumnName("GLAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.GlaccountType)
                    .HasColumnName("GLAccountType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountUse)
                    .HasColumnName("GLAccountUse")
                    .HasMaxLength(26);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetBeginningBalance)
                    .HasColumnName("GLBudgetBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetPeriod1)
                    .HasColumnName("GLBudgetPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod10)
                    .HasColumnName("GLBudgetPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod11)
                    .HasColumnName("GLBudgetPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod12)
                    .HasColumnName("GLBudgetPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod13)
                    .HasColumnName("GLBudgetPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod14)
                    .HasColumnName("GLBudgetPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod2)
                    .HasColumnName("GLBudgetPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod3)
                    .HasColumnName("GLBudgetPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod4)
                    .HasColumnName("GLBudgetPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod5)
                    .HasColumnName("GLBudgetPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod6)
                    .HasColumnName("GLBudgetPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod7)
                    .HasColumnName("GLBudgetPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod8)
                    .HasColumnName("GLBudgetPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod9)
                    .HasColumnName("GLBudgetPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearBeginningBalance)
                    .HasColumnName("GLCurrentYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod1)
                    .HasColumnName("GLCurrentYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod10)
                    .HasColumnName("GLCurrentYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod11)
                    .HasColumnName("GLCurrentYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod12)
                    .HasColumnName("GLCurrentYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod13)
                    .HasColumnName("GLCurrentYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod14)
                    .HasColumnName("GLCurrentYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod2)
                    .HasColumnName("GLCurrentYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod3)
                    .HasColumnName("GLCurrentYearPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod4)
                    .HasColumnName("GLCurrentYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod5)
                    .HasColumnName("GLCurrentYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod6)
                    .HasColumnName("GLCurrentYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod7)
                    .HasColumnName("GLCurrentYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod8)
                    .HasColumnName("GLCurrentYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod9)
                    .HasColumnName("GLCurrentYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlotherNotes)
                    .HasColumnName("GLOtherNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlpriorFiscalYear)
                    .HasColumnName("GLPriorFiscalYear")
                    .HasColumnType("datetime");

                entity.Property(e => e.GlpriorYearBeginningBalance)
                    .HasColumnName("GLPriorYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod1)
                    .HasColumnName("GLPriorYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod10)
                    .HasColumnName("GLPriorYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod11)
                    .HasColumnName("GLPriorYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod12)
                    .HasColumnName("GLPriorYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod13)
                    .HasColumnName("GLPriorYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod14)
                    .HasColumnName("GLPriorYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod2)
                    .HasColumnName("GLPriorYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod3)
                    .HasColumnName("GLPriorYearPeriod3")
                    .HasColumnType("money");

                entity.Property(e => e.GlpriorYearPeriod4)
                    .HasColumnName("GLPriorYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod5)
                    .HasColumnName("GLPriorYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod6)
                    .HasColumnName("GLPriorYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod7)
                    .HasColumnName("GLPriorYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod8)
                    .HasColumnName("GLPriorYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod9)
                    .HasColumnName("GLPriorYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlreportLevel).HasColumnName("GLReportLevel");

                entity.Property(e => e.GlreportingAccount)
                    .HasColumnName("GLReportingAccount")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlsubAccount)
                    .HasColumnName("GLSubAccount")
                    .HasMaxLength(10);

                entity.Property(e => e.IsHeaderAccount).HasColumnName("isHeaderAccount");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SubHeaderAccount).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerChartOfAccountsBudgets>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbudgetId, e.GlaccountNumber })
                    .HasName("PK_LedgerChartOfAccountBudgets");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlbudgetActive).HasColumnName("GLBudgetActive");

                entity.Property(e => e.GlbudgetBeginningBalance)
                    .HasColumnName("GLBudgetBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetCurrentBalance)
                    .HasColumnName("GLBudgetCurrentBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GlbudgetNotes)
                    .HasColumnName("GLBudgetNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlbudgetPeriod1)
                    .HasColumnName("GLBudgetPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod10)
                    .HasColumnName("GLBudgetPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod10Reason)
                    .HasColumnName("GLBudgetPeriod10Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod10Variance).HasColumnName("GLBudgetPeriod10Variance");

                entity.Property(e => e.GlbudgetPeriod11)
                    .HasColumnName("GLBudgetPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod11Reason)
                    .HasColumnName("GLBudgetPeriod11Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod11Variance).HasColumnName("GLBudgetPeriod11Variance");

                entity.Property(e => e.GlbudgetPeriod12)
                    .HasColumnName("GLBudgetPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod12Reason)
                    .HasColumnName("GLBudgetPeriod12Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod12Variance).HasColumnName("GLBudgetPeriod12Variance");

                entity.Property(e => e.GlbudgetPeriod13)
                    .HasColumnName("GLBudgetPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod13Reason)
                    .HasColumnName("GLBudgetPeriod13Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod13Variance).HasColumnName("GLBudgetPeriod13Variance");

                entity.Property(e => e.GlbudgetPeriod14)
                    .HasColumnName("GLBudgetPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod14Reason)
                    .HasColumnName("GLBudgetPeriod14Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod14Variance).HasColumnName("GLBudgetPeriod14Variance");

                entity.Property(e => e.GlbudgetPeriod1Reason)
                    .HasColumnName("GLBudgetPeriod1Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod1Variance).HasColumnName("GLBudgetPeriod1Variance");

                entity.Property(e => e.GlbudgetPeriod2)
                    .HasColumnName("GLBudgetPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod2Reason)
                    .HasColumnName("GLBudgetPeriod2Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod2Variance).HasColumnName("GLBudgetPeriod2Variance");

                entity.Property(e => e.GlbudgetPeriod3)
                    .HasColumnName("GLBudgetPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod3Reason)
                    .HasColumnName("GLBudgetPeriod3Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod3Variance).HasColumnName("GLBudgetPeriod3Variance");

                entity.Property(e => e.GlbudgetPeriod4)
                    .HasColumnName("GLBudgetPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod4Reason)
                    .HasColumnName("GLBudgetPeriod4Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod4Variance).HasColumnName("GLBudgetPeriod4Variance");

                entity.Property(e => e.GlbudgetPeriod5)
                    .HasColumnName("GLBudgetPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod5Reason)
                    .HasColumnName("GLBudgetPeriod5Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod5Variance).HasColumnName("GLBudgetPeriod5Variance");

                entity.Property(e => e.GlbudgetPeriod6)
                    .HasColumnName("GLBudgetPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod6Reason)
                    .HasColumnName("GLBudgetPeriod6Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod6Variance).HasColumnName("GLBudgetPeriod6Variance");

                entity.Property(e => e.GlbudgetPeriod7)
                    .HasColumnName("GLBudgetPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod7Reason)
                    .HasColumnName("GLBudgetPeriod7Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod7Variance).HasColumnName("GLBudgetPeriod7Variance");

                entity.Property(e => e.GlbudgetPeriod8)
                    .HasColumnName("GLBudgetPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod8Reason)
                    .HasColumnName("GLBudgetPeriod8Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod8Variance).HasColumnName("GLBudgetPeriod8Variance");

                entity.Property(e => e.GlbudgetPeriod9)
                    .HasColumnName("GLBudgetPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod9Reason)
                    .HasColumnName("GLBudgetPeriod9Reason")
                    .HasMaxLength(80);

                entity.Property(e => e.GlbudgetPeriod9Variance).HasColumnName("GLBudgetPeriod9Variance");

                entity.Property(e => e.GlbudgetPeriodCommitted1).HasColumnName("GLBudgetPeriodCommitted1");

                entity.Property(e => e.GlbudgetPeriodCommitted10).HasColumnName("GLBudgetPeriodCommitted10");

                entity.Property(e => e.GlbudgetPeriodCommitted11).HasColumnName("GLBudgetPeriodCommitted11");

                entity.Property(e => e.GlbudgetPeriodCommitted12).HasColumnName("GLBudgetPeriodCommitted12");

                entity.Property(e => e.GlbudgetPeriodCommitted13).HasColumnName("GLBudgetPeriodCommitted13");

                entity.Property(e => e.GlbudgetPeriodCommitted14).HasColumnName("GLBudgetPeriodCommitted14");

                entity.Property(e => e.GlbudgetPeriodCommitted2).HasColumnName("GLBudgetPeriodCommitted2");

                entity.Property(e => e.GlbudgetPeriodCommitted3).HasColumnName("GLBudgetPeriodCommitted3");

                entity.Property(e => e.GlbudgetPeriodCommitted4).HasColumnName("GLBudgetPeriodCommitted4");

                entity.Property(e => e.GlbudgetPeriodCommitted5).HasColumnName("GLBudgetPeriodCommitted5");

                entity.Property(e => e.GlbudgetPeriodCommitted6).HasColumnName("GLBudgetPeriodCommitted6");

                entity.Property(e => e.GlbudgetPeriodCommitted7).HasColumnName("GLBudgetPeriodCommitted7");

                entity.Property(e => e.GlbudgetPeriodCommitted8).HasColumnName("GLBudgetPeriodCommitted8");

                entity.Property(e => e.GlbudgetPeriodCommitted9).HasColumnName("GLBudgetPeriodCommitted9");

                entity.Property(e => e.GlfiscalYear).HasColumnName("GLFiscalYear");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<LedgerChartOfAccountsBudgetsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbudgetId, e.GlaccountNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType)
                    .HasColumnName("GLAnalysisType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetAmount)
                    .HasColumnName("GLBudgetAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<LedgerChartOfAccountsBudgetsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlbudgetId })
                    .HasName("PK_LedgerChartOfAccountsBudgetsHeader_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.GlbudgetActive).HasColumnName("GLBudgetActive");

                entity.Property(e => e.GlbudgetAmount).HasColumnName("GLBudgetAmount");

                entity.Property(e => e.GlbudgetNotes)
                    .HasColumnName("GLBudgetNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlfiscalYear).HasColumnName("GLFiscalYear");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerChartOfAccountsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashFlowItem).HasMaxLength(36);

                entity.Property(e => e.CashFlowType).HasMaxLength(36);

                entity.Property(e => e.ControlAccount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlaccountBalance)
                    .HasColumnName("GLAccountBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountBeginningBalance)
                    .HasColumnName("GLAccountBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountDescription)
                    .HasColumnName("GLAccountDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GlaccountName)
                    .HasColumnName("GLAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.GlaccountType)
                    .HasColumnName("GLAccountType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountUse)
                    .HasColumnName("GLAccountUse")
                    .HasMaxLength(26);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetBeginningBalance)
                    .HasColumnName("GLBudgetBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetPeriod1)
                    .HasColumnName("GLBudgetPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod10)
                    .HasColumnName("GLBudgetPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod11)
                    .HasColumnName("GLBudgetPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod12)
                    .HasColumnName("GLBudgetPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod13)
                    .HasColumnName("GLBudgetPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod14)
                    .HasColumnName("GLBudgetPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod2)
                    .HasColumnName("GLBudgetPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod3)
                    .HasColumnName("GLBudgetPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod4)
                    .HasColumnName("GLBudgetPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod5)
                    .HasColumnName("GLBudgetPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod6)
                    .HasColumnName("GLBudgetPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod7)
                    .HasColumnName("GLBudgetPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod8)
                    .HasColumnName("GLBudgetPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod9)
                    .HasColumnName("GLBudgetPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearBeginningBalance)
                    .HasColumnName("GLCurrentYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod1)
                    .HasColumnName("GLCurrentYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod10)
                    .HasColumnName("GLCurrentYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod11)
                    .HasColumnName("GLCurrentYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod12)
                    .HasColumnName("GLCurrentYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod13)
                    .HasColumnName("GLCurrentYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod14)
                    .HasColumnName("GLCurrentYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod2)
                    .HasColumnName("GLCurrentYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod3)
                    .HasColumnName("GLCurrentYearPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod4)
                    .HasColumnName("GLCurrentYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod5)
                    .HasColumnName("GLCurrentYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod6)
                    .HasColumnName("GLCurrentYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod7)
                    .HasColumnName("GLCurrentYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod8)
                    .HasColumnName("GLCurrentYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod9)
                    .HasColumnName("GLCurrentYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlotherNotes)
                    .HasColumnName("GLOtherNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlpriorFiscalYear)
                    .HasColumnName("GLPriorFiscalYear")
                    .HasColumnType("datetime");

                entity.Property(e => e.GlpriorYearBeginningBalance)
                    .HasColumnName("GLPriorYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod1)
                    .HasColumnName("GLPriorYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod10)
                    .HasColumnName("GLPriorYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod11)
                    .HasColumnName("GLPriorYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod12)
                    .HasColumnName("GLPriorYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod13)
                    .HasColumnName("GLPriorYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod14)
                    .HasColumnName("GLPriorYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod2)
                    .HasColumnName("GLPriorYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod3)
                    .HasColumnName("GLPriorYearPeriod3")
                    .HasColumnType("money");

                entity.Property(e => e.GlpriorYearPeriod4)
                    .HasColumnName("GLPriorYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod5)
                    .HasColumnName("GLPriorYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod6)
                    .HasColumnName("GLPriorYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod7)
                    .HasColumnName("GLPriorYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod8)
                    .HasColumnName("GLPriorYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod9)
                    .HasColumnName("GLPriorYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlreportLevel).HasColumnName("GLReportLevel");

                entity.Property(e => e.GlreportingAccount)
                    .HasColumnName("GLReportingAccount")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlsubAccount)
                    .HasColumnName("GLSubAccount")
                    .HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerChartOfAccountsForeign>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber })
                    .HasName("pk_LedgerChartOfAccountsForeign")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ControlAccount).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlaccountBalance)
                    .HasColumnName("GLAccountBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountBeginningBalance)
                    .HasColumnName("GLAccountBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlaccountDescription)
                    .HasColumnName("GLAccountDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GlaccountName)
                    .HasColumnName("GLAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.GlaccountType)
                    .HasColumnName("GLAccountType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountUse)
                    .HasColumnName("GLAccountUse")
                    .HasMaxLength(26);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetBeginningBalance)
                    .HasColumnName("GLBudgetBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetPeriod1)
                    .HasColumnName("GLBudgetPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod10)
                    .HasColumnName("GLBudgetPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod11)
                    .HasColumnName("GLBudgetPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod12)
                    .HasColumnName("GLBudgetPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod13)
                    .HasColumnName("GLBudgetPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod14)
                    .HasColumnName("GLBudgetPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod2)
                    .HasColumnName("GLBudgetPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod3)
                    .HasColumnName("GLBudgetPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod4)
                    .HasColumnName("GLBudgetPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod5)
                    .HasColumnName("GLBudgetPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod6)
                    .HasColumnName("GLBudgetPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod7)
                    .HasColumnName("GLBudgetPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod8)
                    .HasColumnName("GLBudgetPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlbudgetPeriod9)
                    .HasColumnName("GLBudgetPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearBeginningBalance)
                    .HasColumnName("GLCurrentYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod1)
                    .HasColumnName("GLCurrentYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod10)
                    .HasColumnName("GLCurrentYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod11)
                    .HasColumnName("GLCurrentYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod12)
                    .HasColumnName("GLCurrentYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod13)
                    .HasColumnName("GLCurrentYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod14)
                    .HasColumnName("GLCurrentYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod2)
                    .HasColumnName("GLCurrentYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod3)
                    .HasColumnName("GLCurrentYearPeriod3")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod4)
                    .HasColumnName("GLCurrentYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod5)
                    .HasColumnName("GLCurrentYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod6)
                    .HasColumnName("GLCurrentYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod7)
                    .HasColumnName("GLCurrentYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod8)
                    .HasColumnName("GLCurrentYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlcurrentYearPeriod9)
                    .HasColumnName("GLCurrentYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlotherNotes)
                    .HasColumnName("GLOtherNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlpriorFiscalYear)
                    .HasColumnName("GLPriorFiscalYear")
                    .HasColumnType("datetime");

                entity.Property(e => e.GlpriorYearBeginningBalance)
                    .HasColumnName("GLPriorYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod1)
                    .HasColumnName("GLPriorYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod10)
                    .HasColumnName("GLPriorYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod11)
                    .HasColumnName("GLPriorYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod12)
                    .HasColumnName("GLPriorYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod13)
                    .HasColumnName("GLPriorYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod14)
                    .HasColumnName("GLPriorYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod2)
                    .HasColumnName("GLPriorYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod3)
                    .HasColumnName("GLPriorYearPeriod3")
                    .HasColumnType("money");

                entity.Property(e => e.GlpriorYearPeriod4)
                    .HasColumnName("GLPriorYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod5)
                    .HasColumnName("GLPriorYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod6)
                    .HasColumnName("GLPriorYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod7)
                    .HasColumnName("GLPriorYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod8)
                    .HasColumnName("GLPriorYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpriorYearPeriod9)
                    .HasColumnName("GLPriorYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlreportLevel).HasColumnName("GLReportLevel");

                entity.Property(e => e.GlreportingAccount)
                    .HasColumnName("GLReportingAccount")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlsubAccount)
                    .HasColumnName("GLSubAccount")
                    .HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerChartOfAccountsPriorYears>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber, e.GlfiscalYear });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfiscalYear)
                    .HasColumnName("GLFiscalYear")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlaccountBalance)
                    .HasColumnName("GLAccountBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlaccountBeginningBalance)
                    .HasColumnName("GLAccountBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlaccountDescription)
                    .HasColumnName("GLAccountDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GlaccountName)
                    .HasColumnName("GLAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.GlaccountType)
                    .HasColumnName("GLAccountType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountUse)
                    .HasColumnName("GLAccountUse")
                    .HasMaxLength(50);

                entity.Property(e => e.GlbalanceType)
                    .HasColumnName("GLBalanceType")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlotherNotes)
                    .HasColumnName("GLOtherNotes")
                    .HasMaxLength(255);

                entity.Property(e => e.GlpriorYearBeginningBalance)
                    .HasColumnName("GLPriorYearBeginningBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod1)
                    .HasColumnName("GLPriorYearPeriod1")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod10)
                    .HasColumnName("GLPriorYearPeriod10")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod11)
                    .HasColumnName("GLPriorYearPeriod11")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod12)
                    .HasColumnName("GLPriorYearPeriod12")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod13)
                    .HasColumnName("GLPriorYearPeriod13")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod14)
                    .HasColumnName("GLPriorYearPeriod14")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod2)
                    .HasColumnName("GLPriorYearPeriod2")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod3)
                    .HasColumnName("GLPriorYearPeriod3")
                    .HasColumnType("money");

                entity.Property(e => e.GlpriorYearPeriod4)
                    .HasColumnName("GLPriorYearPeriod4")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod5)
                    .HasColumnName("GLPriorYearPeriod5")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod6)
                    .HasColumnName("GLPriorYearPeriod6")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod7)
                    .HasColumnName("GLPriorYearPeriod7")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod8)
                    .HasColumnName("GLPriorYearPeriod8")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpriorYearPeriod9)
                    .HasColumnName("GLPriorYearPeriod9")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlreportLevel).HasColumnName("GLReportLevel");

                entity.Property(e => e.GlreportingAccount)
                    .HasColumnName("GLReportingAccount")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<LedgerPrepaymentDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LedgerPrepaymentId, e.LedgerPrepaymentDetailId })
                    .HasName("pk_LedgerPrepaymentDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerPrepaymentId)
                    .HasColumnName("LedgerPrepaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerPrepaymentDetailId)
                    .HasColumnName("LedgerPrepaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<LedgerPrepaymentHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LedgerPrepaymentId })
                    .HasName("pk_LedgerPrepaymentHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LedgerPrepaymentId)
                    .HasColumnName("LedgerPrepaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VoidBy).HasMaxLength(36);

                entity.Property(e => e.VoidDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerStoredChartOfAccounts>(entity =>
            {
                entity.HasKey(e => new { e.IndustryType, e.GlstoredAccountNumber, e.GlstoredAccountName });

                entity.Property(e => e.IndustryType).HasMaxLength(50);

                entity.Property(e => e.GlstoredAccountNumber)
                    .HasColumnName("GLStoredAccountNumber")
                    .HasMaxLength(50);

                entity.Property(e => e.GlstoredAccountName)
                    .HasColumnName("GLStoredAccountName")
                    .HasMaxLength(30);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlstoredAccountType)
                    .HasColumnName("GLStoredAccountType")
                    .HasMaxLength(30);

                entity.Property(e => e.GlstoredBalanceType)
                    .HasColumnName("GLStoredBalanceType")
                    .HasMaxLength(10);

                entity.Property(e => e.GlstoredNotes)
                    .HasColumnName("GLStoredNotes")
                    .HasColumnType("ntext");

                entity.Property(e => e.GlstoredReportingAccount).HasColumnName("GLStoredReportingAccount");

                entity.Property(e => e.GlstoredReportingLevel).HasColumnName("GLStoredReportingLevel");
            });

            modelBuilder.Entity<LedgerTransactionTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionTypeId })
                    .HasName("pk_LedgerTransactionTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransactionTypeDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<LedgerTransactions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber })
                    .HasName("pk_LedgerTransactions")
                    .ForSqlServerIsClustered(false);

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber })
                    .HasName("LedgerTransactionsIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SyncDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LedgerTransactionsBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("(1)");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LedgerTransactionsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail })
                    .HasName("pk_LedgerTransactionsDetail")
                    .ForSqlServerIsClustered(false);

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail })
                    .HasName("LedgerTransactionsDetailIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CorrespondingAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SyncDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerTransactionsDetailBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CorrespondingAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<LedgerTransactionsDetailFgnHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail })
                    .HasName("PK_LedgerTransactionsDetailHistoryForeign");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(24, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CorrespondingAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SyncDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerTransactionsDetailForeign>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail })
                    .HasName("pk_LedgerTransactionsDetailForeign")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CorrespondingAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SyncDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerTransactionsDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber, e.GltransactionNumberDetail });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(24, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CorrespondingAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlcreditAmount)
                    .HasColumnName("GLCreditAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GldebitAmount)
                    .HasColumnName("GLDebitAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SyncDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<LedgerTransactionsForeign>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber })
                    .HasName("pk_LedgerTransactionsForeign")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SyncDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LedgerTransactionsForeignHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber })
                    .HasName("PK_LedgerTransactionsHistoryForeign");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SyncDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<LedgerTransactionsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GltransactionNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionNumber)
                    .HasColumnName("GLTransactionNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EntryDate).HasColumnType("datetime");

                entity.Property(e => e.GltransactionAmount)
                    .HasColumnName("GLTransactionAmount")
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GltransactionAmountUndistributed)
                    .HasColumnName("GLTransactionAmountUndistributed")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionBalance)
                    .HasColumnName("GLTransactionBalance")
                    .HasColumnType("money");

                entity.Property(e => e.GltransactionDate)
                    .HasColumnName("GLTransactionDate")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionDescription)
                    .HasColumnName("GLTransactionDescription")
                    .HasMaxLength(255);

                entity.Property(e => e.GltransactionPostedYn).HasColumnName("GLTransactionPostedYN");

                entity.Property(e => e.GltransactionRecurringYn).HasColumnName("GLTransactionRecurringYN");

                entity.Property(e => e.GltransactionReference)
                    .HasColumnName("GLTransactionReference")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSource)
                    .HasColumnName("GLTransactionSource")
                    .HasMaxLength(50);

                entity.Property(e => e.GltransactionSystemGenerated)
                    .HasColumnName("GLTransactionSystemGenerated")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.GltransactionTypeId)
                    .HasColumnName("GLTransactionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SyncDate).HasColumnType("datetime");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<MailSend>(entity =>
            {
                entity.HasKey(e => e.Counter);

                entity.ToTable("_Mail_Send");

                entity.Property(e => e.Counter).ValueGeneratedNever();

                entity.Property(e => e.AccountName).HasMaxLength(1000);

                entity.Property(e => e.Accounts).HasMaxLength(50);

                entity.Property(e => e.Attachment).HasMaxLength(1000);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.MessageType).HasMaxLength(36);

                entity.Property(e => e.Module).HasMaxLength(36);

                entity.Property(e => e.Parameter1)
                    .HasColumnName("parameter1")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter10)
                    .HasColumnName("parameter10")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter2)
                    .HasColumnName("parameter2")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter3)
                    .HasColumnName("parameter3")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter4)
                    .HasColumnName("parameter4")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter5)
                    .HasColumnName("parameter5")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter6)
                    .HasColumnName("parameter6")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter7)
                    .HasColumnName("parameter7")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter8)
                    .HasColumnName("parameter8")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter9)
                    .HasColumnName("parameter9")
                    .HasMaxLength(255);

                entity.Property(e => e.PortNumber).HasMaxLength(36);

                entity.Property(e => e.Priority).HasMaxLength(36);

                entity.Property(e => e.Pword).HasMaxLength(50);

                entity.Property(e => e.Recipient).HasMaxLength(500);

                entity.Property(e => e.RequestBy).HasMaxLength(50);

                entity.Property(e => e.SenderId)
                    .HasColumnName("SenderID")
                    .HasMaxLength(50);

                entity.Property(e => e.SentTo).HasMaxLength(50);

                entity.Property(e => e.Subject).HasMaxLength(500);
            });

            modelBuilder.Entity<MaterialRequisitionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MaterialRequisitionId, e.MaterialRequisitionDetailId })
                    .HasName("pk_MaterialRequisitionDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MaterialRequisitionId)
                    .HasColumnName("MaterialRequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.MaterialRequisitionDetailId)
                    .HasColumnName("MaterialRequisitionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostMethod).HasMaxLength(1);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemValue).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ponumber)
                    .HasColumnName("PONumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestedQty).HasDefaultValueSql("((1))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseBinId)
                    .HasColumnName("ToWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseId)
                    .HasColumnName("ToWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<MaterialRequisitionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MaterialRequisitionId })
                    .HasName("pk_MaterialRequisitionHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MaterialRequisitionId)
                    .HasColumnName("MaterialRequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Issue')");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DeliveryNote).HasMaxLength(36);

                entity.Property(e => e.DriversName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(225);

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.Sbcnumber)
                    .HasColumnName("SBCNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SiteNumber).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.VehicleRegistration).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseCustomerId)
                    .HasColumnName("WarehouseCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<MultipleDiscountGroupDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MultipleDiscountGroupDetailId, e.MultipleDiscountId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountGroupDetailId)
                    .HasColumnName("MultipleDiscountGroupDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountId)
                    .HasColumnName("MultipleDiscountID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlmultipleDiscountAccount)
                    .HasColumnName("GLMultipleDiscountAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<MultipleDiscountGroups>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MultipleDiscountGroupId, e.MultipleDiscountGroupDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountGroupDetailId)
                    .HasColumnName("MultipleDiscountGroupDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TotalPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<MultipleDiscounts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MultipleDiscountId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountId)
                    .HasColumnName("MultipleDiscountID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlmultipleDiscountAccount)
                    .HasColumnName("GLMultipleDiscountAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountDescription).HasMaxLength(50);

                entity.Property(e => e.MultipleDiscountPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<OrderApproval>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ApprovalLevelId })
                    .HasName("PK_OrderApproval_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovalLevelId)
                    .HasColumnName("ApprovalLevelID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<OrderDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.OrderLineNumber })
                    .HasName("pk_OrderDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BackOrderQyyty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Invoiced).HasDefaultValueSql("((0))");

                entity.Property(e => e.InvoicedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.InvoicedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(12);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<OrderDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.OrderLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderLineNumber)
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BackOrderQyyty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountAmount).HasColumnType("money");

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Invoiced).HasDefaultValueSql("((0))");

                entity.Property(e => e.InvoicedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.InvoicedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(12);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<OrderHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber })
                    .HasName("pk_OrderHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Bdmapproved).HasColumnName("BDMApproved");

                entity.Property(e => e.BdmapprovedDate)
                    .HasColumnName("BDMApprovedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Bdmcomment)
                    .HasColumnName("BDMComment")
                    .HasMaxLength(255);

                entity.Property(e => e.BdmreturnedDate)
                    .HasColumnName("BDMReturnedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CommercialApprovedBy).HasMaxLength(36);

                entity.Property(e => e.CommercialApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.CommercialComment).HasMaxLength(255);

                entity.Property(e => e.CommercialReturnedDate).HasColumnType("datetime");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Cooapproved).HasColumnName("COOApproved");

                entity.Property(e => e.CooapprovedBy)
                    .HasColumnName("COOApprovedBy")
                    .HasMaxLength(36);

                entity.Property(e => e.CooapprovedDate)
                    .HasColumnName("COOApprovedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Coocomment)
                    .HasColumnName("COOComment")
                    .HasMaxLength(255);

                entity.Property(e => e.CooreturnedDate)
                    .HasColumnName("COOReturnedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.FinanceApprovedBy).HasMaxLength(36);

                entity.Property(e => e.FinanceApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.FinanceComment).HasMaxLength(255);

                entity.Property(e => e.FinanceReturnedDate).HasColumnType("datetime");

                entity.Property(e => e.Fmapproved).HasColumnName("FMApproved");

                entity.Property(e => e.FmapprovedBy)
                    .HasColumnName("FMApprovedBy")
                    .HasMaxLength(36);

                entity.Property(e => e.FmapprovedDate)
                    .HasColumnName("FMApprovedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fmcomment)
                    .HasColumnName("FMComment")
                    .HasMaxLength(255);

                entity.Property(e => e.FmreturnedDate)
                    .HasColumnName("FMReturnedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Fmvoid).HasColumnName("FMVoid");

                entity.Property(e => e.FmvoidedDate)
                    .HasColumnName("FMVoidedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo10).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo11).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo12).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(20);

                entity.Property(e => e.Invoiced).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Mdapproved).HasColumnName("MDApproved");

                entity.Property(e => e.MdapprovedBy)
                    .HasColumnName("MDApprovedBy")
                    .HasMaxLength(36);

                entity.Property(e => e.MdapprovedDate)
                    .HasColumnName("MDApprovedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Mdcomment)
                    .HasColumnName("MDComment")
                    .HasMaxLength(255);

                entity.Property(e => e.MdreturnedDate)
                    .HasColumnName("MDReturnedDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderTypeId)
                    .HasColumnName("OrderTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Order')");

                entity.Property(e => e.OriginalOrderDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalOrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Order')");

                entity.Property(e => e.Ullage1).HasMaxLength(50);

                entity.Property(e => e.Ullage10).HasMaxLength(50);

                entity.Property(e => e.Ullage11).HasMaxLength(50);

                entity.Property(e => e.Ullage12).HasMaxLength(50);

                entity.Property(e => e.Ullage2).HasMaxLength(50);

                entity.Property(e => e.Ullage3).HasMaxLength(50);

                entity.Property(e => e.Ullage4).HasMaxLength(50);

                entity.Property(e => e.Ullage5).HasMaxLength(50);

                entity.Property(e => e.Ullage6).HasMaxLength(50);

                entity.Property(e => e.Ullage7).HasMaxLength(50);

                entity.Property(e => e.Ullage8).HasMaxLength(50);

                entity.Property(e => e.Ullage9).HasMaxLength(50);

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<OrderHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DeliveryNumber).HasMaxLength(36);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(20);

                entity.Property(e => e.Invoiced).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.OrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.OrderTypeId)
                    .HasColumnName("OrderTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Order')");

                entity.Property(e => e.OriginalOrderDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalOrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<OrderTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.TruckNumber })
                    .HasName("PK_OrderTrackingDetail_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.TruckNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate).HasColumnType("datetime");

                entity.Property(e => e.CommentDetails).HasMaxLength(255);

                entity.Property(e => e.CommentNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.ShippingAddress).HasMaxLength(255);
            });

            modelBuilder.Entity<OrderTrackingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BookedBy).HasMaxLength(36);

                entity.Property(e => e.BookedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.OrderDescription).HasMaxLength(80);

                entity.Property(e => e.OrderLongDescription).HasMaxLength(255);

                entity.Property(e => e.SpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.SpecialNeeds).HasMaxLength(255);

                entity.Property(e => e.VoidDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<OrderTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderTypeId })
                    .HasName("pk_OrderTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderTypeId)
                    .HasColumnName("OrderTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderTypeDescription).HasMaxLength(30);
            });

            modelBuilder.Entity<Packs>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PackId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PackId)
                    .HasColumnName("PackID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PackDescription).HasMaxLength(50);

                entity.Property(e => e.PackSize).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PaymentChecks>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PaymentId })
                    .HasName("pk_Check_Print")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .IsRequired()
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Printed).HasDefaultValueSql("(0)");

                entity.Property(e => e.VendorId)
                    .IsRequired()
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PaymentClasses>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentClassId })
                    .HasName("pk_PaymentClasses")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentClassesDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PaymentMethods>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentMethodId })
                    .HasName("pk_PaymentMethods")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PaymentTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentTypeId })
                    .HasName("pk_PaymentTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PaymentTypesTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentTypeId })
                    .HasName("PKDEL_PaymentTypes_Tombstone_CompanyIDDivisionIDDepartmentIDPaymentTypeID");

                entity.ToTable("PaymentTypes_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PaymentsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId, e.PaymentDetailId, e.VendorId })
                    .HasName("pk_PaymentsDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDetailId)
                    .HasColumnName("PaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TrackingNumber).HasMaxLength(36);

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<PaymentsDetailBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId, e.PaymentDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDetailId)
                    .HasColumnName("PaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("(0)");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");
            });

            modelBuilder.Entity<PaymentsDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId, e.PaymentDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDetailId)
                    .HasColumnName("PaymentDetailID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TrackingNumber).HasMaxLength(36);

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<PaymentsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId })
                    .HasName("pk_PaymentsHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedForPayment).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckPrinted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.Credit).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((110000))");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PayeeName).HasMaxLength(36);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentStatus).HasMaxLength(10);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Check')");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SelectedForPayment).HasDefaultValueSql("((0))");

                entity.Property(e => e.SelectedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.UnAppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorName).HasMaxLength(50);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PaymentsHeaderBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedForPayment).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckPrinted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.Credit).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((110000))");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PayeeName).HasMaxLength(36);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentStatus).HasMaxLength(10);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Check')");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SelectedForPayment).HasDefaultValueSql("((1))");

                entity.Property(e => e.SelectedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.UnAppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PaymentsHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedForPayment).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckPrinted).HasDefaultValueSql("((0))");

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.Credit).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((110000))");

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PayeeName).HasMaxLength(36);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentStatus).HasMaxLength(10);

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Check')");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.SelectedForPayment).HasDefaultValueSql("((1))");

                entity.Property(e => e.SelectedForPaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.UnAppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PayrollCheckType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CheckTypeId })
                    .HasName("pk_PayrollCheckType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CheckTypeId)
                    .HasColumnName("CheckTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckTypeDescription).HasMaxLength(30);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollChecks>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollId, e.EmployeeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollId)
                    .HasColumnName("PayrollID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckTypeId)
                    .HasColumnName("CheckTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.GlemployeeCreditAccount)
                    .HasColumnName("GLEmployeeCreditAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayrollCheckDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollCityTax>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.County, e.City })
                    .HasName("PK_PayrollLocalTax");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.County).HasMaxLength(36);

                entity.Property(e => e.City).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CityName).HasMaxLength(50);

                entity.Property(e => e.CityUiirate).HasColumnName("CityUIIRate");

                entity.Property(e => e.CityUiwageBase).HasColumnName("CityUIWageBase");

                entity.Property(e => e.CountyName).HasMaxLength(50);

                entity.Property(e => e.Dependents).HasColumnType("money");

                entity.Property(e => e.Exemption).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.StandardDeductJoint).HasColumnType("money");

                entity.Property(e => e.StandardDeductSingle).HasColumnType("money");

                entity.Property(e => e.StateName).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollCityTaxTables>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.County, e.City, e.WithholdingStatus, e.TaxBracket, e.StatusType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.County).HasMaxLength(36);

                entity.Property(e => e.City).HasMaxLength(36);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.StatusType).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.PayFrequency).HasMaxLength(20);
            });

            modelBuilder.Entity<PayrollCountyTax>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.County });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.County).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CountyName).HasMaxLength(36);

                entity.Property(e => e.CountyUiirate).HasColumnName("CountyUIIRate");

                entity.Property(e => e.CountyUiwageBase).HasColumnName("CountyUIWageBase");

                entity.Property(e => e.Dependents).HasColumnType("money");

                entity.Property(e => e.Exemption).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.StandardDeductJoint).HasColumnType("money");

                entity.Property(e => e.StandardDeductSingle).HasColumnType("money");

                entity.Property(e => e.StateName).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollCountyTaxTables>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.County, e.WithholdingStatus, e.TaxBracket, e.StatusType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.County).HasMaxLength(36);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.StatusType).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.PayFrequency).HasMaxLength(20);
            });

            modelBuilder.Entity<PayrollDetailTemp>(entity =>
            {
                entity.HasKey(e => e.EmployeeId);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .ValueGeneratedNever();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Col1)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Col2)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Col3)
                    .HasMaxLength(200)
                    .IsUnicode(false);

                entity.Property(e => e.Col4)
                    .HasMaxLength(200)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<PayrollEmailMessages>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmailMessageId })
                    .HasName("PK_EmailMessages");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmailMessageId)
                    .HasColumnName("EmailMessageID")
                    .HasMaxLength(36);

                entity.Property(e => e.Body).HasColumnType("text");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Ccto)
                    .HasColumnName("CCTo")
                    .HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Sender).HasMaxLength(60);

                entity.Property(e => e.Subject).HasMaxLength(120);

                entity.Property(e => e.TimeSent).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollEmployeeDepartment>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeDepartmentId })
                    .HasName("pk_PayrollEmployeeDepartment")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeDepartmentDescription).HasMaxLength(50);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeDepartmentDetails>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeDepartmentId, e.PayTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeEmailMessage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmailMessageId })
                    .HasName("PK_EmployeeEmailMessage");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmailMessageId)
                    .HasColumnName("EmailMessageID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommunicationType).HasMaxLength(12);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(12);
            });

            modelBuilder.Entity<PayrollEmployeeInstantMessage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InstantMessageId })
                    .HasName("PK_EmployeeInstantMessage");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InstantMessageId)
                    .HasColumnName("InstantMessageID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeEmail)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeePayFrequency>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeePayFrequencyId })
                    .HasName("pk_PayrollEmployeePayFrequency")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeePayFrequencyId)
                    .HasColumnName("EmployeePayFrequencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeePayFrequencyDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeePayType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeePayTypeId })
                    .HasName("pk_PayrollEmployeePayType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeePayTypeId)
                    .HasColumnName("EmployeePayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeePayTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeePwdhistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TransactionId });

                entity.ToTable("PayrollEmployeePWDHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionId)
                    .HasColumnName("TransactionID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChangedBy).HasMaxLength(36);

                entity.Property(e => e.EmployeePassword)
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'x!2')");

                entity.Property(e => e.EmployeePasswordDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeePasswordOld).HasMaxLength(15);

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeStatusId })
                    .HasName("pk_PayrollEmployeeStatus")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeStatusId)
                    .HasColumnName("EmployeeStatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeStatusDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeStatusType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeStatusTypeId })
                    .HasName("pk_PayrollEmployeeStatusType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeStatusTypeId)
                    .HasColumnName("EmployeeStatusTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeStatusTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeTypeId })
                    .HasName("pk_PayrollEmployeeType")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeeUserGroup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollEmployeeUserGroupId })
                    .HasName("pk_PayrollEmployeeUserGroup")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollEmployeeUserGroupId)
                    .HasColumnName("PayrollEmployeeUserGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayrollEmployeeUserGroupDescription).HasMaxLength(50);

                entity.Property(e => e.PayrollEmployeeUserGroupEmail).HasMaxLength(60);
            });

            modelBuilder.Entity<PayrollEmployees>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_PayrollEmployees")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountNo).HasMaxLength(36);

                entity.Property(e => e.ActiveYn)
                    .HasColumnName("ActiveYN")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.Commissionable).HasDefaultValueSql("((1))");

                entity.Property(e => e.ConfirmationDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress3).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress4).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress5).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeCounty).HasMaxLength(50);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeFirstname).HasMaxLength(50);

                entity.Property(e => e.EmployeeHomephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeIndustryId)
                    .HasColumnName("EmployeeIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeMaidenName).HasMaxLength(50);

                entity.Property(e => e.EmployeeManager).HasMaxLength(36);

                entity.Property(e => e.EmployeeManagerId)
                    .HasColumnName("EmployeeManagerID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeOfficeExt).HasMaxLength(36);

                entity.Property(e => e.EmployeeOfficephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeOthername).HasMaxLength(50);

                entity.Property(e => e.EmployeePassword)
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N';jE')");

                entity.Property(e => e.EmployeePasswordDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeePasswordOld).HasMaxLength(15);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeePostalAddress).HasMaxLength(50);

                entity.Property(e => e.EmployeeRegionId)
                    .HasColumnName("EmployeeRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSignature).HasMaxLength(100);

                entity.Property(e => e.EmployeeSourceId)
                    .HasColumnName("EmployeeSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeZip).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.GeoArea).HasMaxLength(36);

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.GroupDescription).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.Lga)
                    .HasColumnName("LGA")
                    .HasMaxLength(36);

                entity.Property(e => e.Location).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthToDateFederal).HasColumnType("money");

                entity.Property(e => e.MonthToDateFica)
                    .HasColumnName("MonthToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.MonthToDateGross).HasColumnType("money");

                entity.Property(e => e.MonthToDateLocal).HasColumnType("money");

                entity.Property(e => e.MonthToDateOther).HasColumnType("money");

                entity.Property(e => e.MonthToDateState).HasColumnType("money");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayrollEmployeeUserGroupId)
                    .HasColumnName("PayrollEmployeeUserGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.PensionDate).HasColumnType("datetime");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.QuarterToDateFederal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateFica)
                    .HasColumnName("QuarterToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.QuarterToDateGross).HasColumnType("money");

                entity.Property(e => e.QuarterToDateLocal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateOther).HasColumnType("money");

                entity.Property(e => e.QuarterToDateState).HasColumnType("money");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatePaye)
                    .HasColumnName("StatePAYE")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxNumber)
                    .HasColumnName("Tax_Number")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WorkedDays).HasMaxLength(36);

                entity.Property(e => e.YearToDateFederal).HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateOther).HasColumnType("money");

                entity.Property(e => e.YearToDateState).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollEmployeesAccrual>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AccrualId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccrualId)
                    .HasColumnName("AccrualID")
                    .HasMaxLength(50);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LastAccrued).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesAccrualFrequency>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AccrualFrequency });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccrualFrequency).HasMaxLength(36);

                entity.Property(e => e.AccrualFrequencyUnit).HasMaxLength(36);

                entity.Property(e => e.AccruslFrequencyDescription).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesAccrualTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AccrualId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccrualId)
                    .HasColumnName("AccrualID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccrualDescription).HasMaxLength(120);

                entity.Property(e => e.AccrualFrequency).HasMaxLength(36);

                entity.Property(e => e.AccrualGlAccount).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesCalendar>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AppointmenStart });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppointmenStart).HasColumnType("datetime");

                entity.Property(e => e.AppointmentDescription).HasMaxLength(255);

                entity.Property(e => e.AppointmentEnd).HasColumnType("datetime");

                entity.Property(e => e.AppointmentNotes).HasMaxLength(255);

                entity.Property(e => e.AppointmentReason).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RelatedCustomerId)
                    .HasColumnName("RelatedCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedDocumentId)
                    .HasColumnName("RelatedDocumentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedLeadId)
                    .HasColumnName("RelatedLeadID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedTaskId)
                    .HasColumnName("RelatedTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedVendorId)
                    .HasColumnName("RelatedVendorID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesCurrentlyOn>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoginDate, e.EmployeeId })
                    .HasName("PK_EmployeesLoggedOn");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LoginDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeEmail)
                    .IsRequired()
                    .HasMaxLength(60);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SessionId)
                    .HasColumnName("SessionID")
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_PayrollEmployeesDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Additions).HasColumnType("money");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BlankCheckHourlyRate).HasColumnType("money");

                entity.Property(e => e.BlankCheckOvertimeRate).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CityFilingStatus).HasMaxLength(50);

                entity.Property(e => e.CityWithhoddingAmount).HasColumnType("money");

                entity.Property(e => e.CountyFilingStatus).HasMaxLength(50);

                entity.Property(e => e.CountyWithhoddingAmount).HasColumnType("money");

                entity.Property(e => e.Deductions).HasColumnType("money");

                entity.Property(e => e.FederalFilingStatus).HasMaxLength(50);

                entity.Property(e => e.FederalWithholdingAmount).HasColumnType("money");

                entity.Property(e => e.FicamedYn).HasColumnName("FICAMedYN");

                entity.Property(e => e.Ficayn).HasColumnName("FICAYN");

                entity.Property(e => e.Fityn).HasColumnName("FITYN");

                entity.Property(e => e.Futayn).HasColumnName("FUTAYN");

                entity.Property(e => e.HourlyRate).HasColumnType("money");

                entity.Property(e => e.LastAgi)
                    .HasColumnName("LastAGI")
                    .HasColumnType("money");

                entity.Property(e => e.LastCommissionAmount).HasColumnType("money");

                entity.Property(e => e.LastFica)
                    .HasColumnName("LastFICA")
                    .HasColumnType("money");

                entity.Property(e => e.LastFicamed)
                    .HasColumnName("LastFICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.LastFit)
                    .HasColumnName("LastFIT")
                    .HasColumnType("money");

                entity.Property(e => e.LastFuta)
                    .HasColumnName("LastFUTA")
                    .HasColumnType("money");

                entity.Property(e => e.LastGross).HasColumnType("money");

                entity.Property(e => e.LastLocal).HasColumnType("money");

                entity.Property(e => e.LastLui)
                    .HasColumnName("LastLUI")
                    .HasColumnType("money");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.LastSdi)
                    .HasColumnName("LastSDI")
                    .HasColumnType("money");

                entity.Property(e => e.LastSit)
                    .HasColumnName("LastSIT")
                    .HasColumnType("money");

                entity.Property(e => e.LastSuta)
                    .HasColumnName("LastSUTA")
                    .HasColumnType("money");

                entity.Property(e => e.LocalYn).HasColumnName("LocalYN");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Luiyn).HasColumnName("LUIYN");

                entity.Property(e => e.MaleFemale).HasMaxLength(50);

                entity.Property(e => e.NetAmount).HasColumnType("money");

                entity.Property(e => e.OtherAmount).HasColumnType("money");

                entity.Property(e => e.OtherStatus).HasMaxLength(50);

                entity.Property(e => e.OvertimeRate).HasColumnType("money");

                entity.Property(e => e.PayFrequency).HasMaxLength(50);

                entity.Property(e => e.PayType).HasMaxLength(50);

                entity.Property(e => e.PayYn).HasColumnName("PayYN");

                entity.Property(e => e.PreTaxedAmount).HasColumnType("money");

                entity.Property(e => e.Salary).HasColumnType("money");

                entity.Property(e => e.Sdiyn).HasColumnName("SDIYN");

                entity.Property(e => e.Sityn).HasColumnName("SITYN");

                entity.Property(e => e.StateFilingStatus).HasMaxLength(50);

                entity.Property(e => e.StateWithholdingAmount).HasColumnType("money");

                entity.Property(e => e.Sutayn).HasColumnName("SUTAYN");

                entity.Property(e => e.YearToDateAgi)
                    .HasColumnName("YearToDateAGI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFicamed)
                    .HasColumnName("YearToDateFICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFit)
                    .HasColumnName("YearToDateFIT")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFuta)
                    .HasColumnName("YearToDateFUTA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateLui)
                    .HasColumnName("YearToDateLUI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSdi)
                    .HasColumnName("YearToDateSDI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSit)
                    .HasColumnName("YearToDateSIT")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSuta)
                    .HasColumnName("YearToDateSUTA")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollEmployeesDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Additions).HasColumnType("money");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BlankCheckHourlyRate).HasColumnType("money");

                entity.Property(e => e.BlankCheckOvertimeRate).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CityFilingStatus).HasMaxLength(50);

                entity.Property(e => e.CityWithhoddingAmount).HasColumnType("money");

                entity.Property(e => e.CountyFilingStatus).HasMaxLength(50);

                entity.Property(e => e.CountyWithhoddingAmount).HasColumnType("money");

                entity.Property(e => e.Deductions).HasColumnType("money");

                entity.Property(e => e.FederalFilingStatus).HasMaxLength(50);

                entity.Property(e => e.FederalWithholdingAmount).HasColumnType("money");

                entity.Property(e => e.FicamedYn).HasColumnName("FICAMedYN");

                entity.Property(e => e.Ficayn).HasColumnName("FICAYN");

                entity.Property(e => e.Fityn).HasColumnName("FITYN");

                entity.Property(e => e.Futayn).HasColumnName("FUTAYN");

                entity.Property(e => e.HourlyRate).HasColumnType("money");

                entity.Property(e => e.LastAgi)
                    .HasColumnName("LastAGI")
                    .HasColumnType("money");

                entity.Property(e => e.LastCommissionAmount).HasColumnType("money");

                entity.Property(e => e.LastFica)
                    .HasColumnName("LastFICA")
                    .HasColumnType("money");

                entity.Property(e => e.LastFicamed)
                    .HasColumnName("LastFICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.LastFit)
                    .HasColumnName("LastFIT")
                    .HasColumnType("money");

                entity.Property(e => e.LastFuta)
                    .HasColumnName("LastFUTA")
                    .HasColumnType("money");

                entity.Property(e => e.LastGross).HasColumnType("money");

                entity.Property(e => e.LastLocal).HasColumnType("money");

                entity.Property(e => e.LastLui)
                    .HasColumnName("LastLUI")
                    .HasColumnType("money");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.LastSdi)
                    .HasColumnName("LastSDI")
                    .HasColumnType("money");

                entity.Property(e => e.LastSit)
                    .HasColumnName("LastSIT")
                    .HasColumnType("money");

                entity.Property(e => e.LastSuta)
                    .HasColumnName("LastSUTA")
                    .HasColumnType("money");

                entity.Property(e => e.LocalYn).HasColumnName("LocalYN");

                entity.Property(e => e.Luiyn).HasColumnName("LUIYN");

                entity.Property(e => e.MaleFemale).HasMaxLength(50);

                entity.Property(e => e.NetAmount).HasColumnType("money");

                entity.Property(e => e.OtherAmount).HasColumnType("money");

                entity.Property(e => e.OtherStatus).HasMaxLength(50);

                entity.Property(e => e.OvertimeRate).HasColumnType("money");

                entity.Property(e => e.PayFrequency).HasMaxLength(50);

                entity.Property(e => e.PayType).HasMaxLength(50);

                entity.Property(e => e.PayYn).HasColumnName("PayYN");

                entity.Property(e => e.PreTaxedAmount).HasColumnType("money");

                entity.Property(e => e.Salary).HasColumnType("money");

                entity.Property(e => e.Sdiyn).HasColumnName("SDIYN");

                entity.Property(e => e.Sityn).HasColumnName("SITYN");

                entity.Property(e => e.StateFilingStatus).HasMaxLength(50);

                entity.Property(e => e.StateWithholdingAmount).HasColumnType("money");

                entity.Property(e => e.Sutayn).HasColumnName("SUTAYN");

                entity.Property(e => e.YearToDateAgi)
                    .HasColumnName("YearToDateAGI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFicamed)
                    .HasColumnName("YearToDateFICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFit)
                    .HasColumnName("YearToDateFIT")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateFuta)
                    .HasColumnName("YearToDateFUTA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateLui)
                    .HasColumnName("YearToDateLUI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSdi)
                    .HasColumnName("YearToDateSDI")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSit)
                    .HasColumnName("YearToDateSIT")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateSuta)
                    .HasColumnName("YearToDateSUTA")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollEmployeesEventTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EventId })
                    .HasName("PK_PayrollEmployeeEventTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EventId)
                    .HasColumnName("EventID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EventDescription).HasMaxLength(120);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesEvents>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EventDate, e.EventId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EventDate).HasColumnType("datetime");

                entity.Property(e => e.EventId)
                    .HasColumnName("EventID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.EventTimeUnits).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Reason).HasMaxLength(80);
            });

            modelBuilder.Entity<PayrollEmployeesExit>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_PayrollEmployeesExit")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountNo).HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.ConfirmationDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36);

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress3).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress4).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress5).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeCounty).HasMaxLength(50);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeFirstname).HasMaxLength(50);

                entity.Property(e => e.EmployeeHomephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeIndustryId)
                    .HasColumnName("EmployeeIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeMaidenName).HasMaxLength(50);

                entity.Property(e => e.EmployeeManager).HasMaxLength(36);

                entity.Property(e => e.EmployeeManagerId)
                    .HasColumnName("EmployeeManagerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeOfficeExt).HasMaxLength(36);

                entity.Property(e => e.EmployeeOfficephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeOthername).HasMaxLength(50);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeeRegionId)
                    .HasColumnName("EmployeeRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSourceId)
                    .HasColumnName("EmployeeSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.GroupDescription).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.Location).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PensionDate).HasColumnType("datetime");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatePaye)
                    .HasColumnName("StatePAYE")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkedDays).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeePassword).HasMaxLength(15);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(15);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.MonthToDateFederal).HasColumnType("money");

                entity.Property(e => e.MonthToDateFica)
                    .HasColumnName("MonthToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.MonthToDateGross).HasColumnType("money");

                entity.Property(e => e.MonthToDateLocal).HasColumnType("money");

                entity.Property(e => e.MonthToDateOther).HasColumnType("money");

                entity.Property(e => e.MonthToDateState).HasColumnType("money");

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.QuarterToDateFederal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateFica)
                    .HasColumnName("QuarterToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.QuarterToDateGross).HasColumnType("money");

                entity.Property(e => e.QuarterToDateLocal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateOther).HasColumnType("money");

                entity.Property(e => e.QuarterToDateState).HasColumnType("money");

                entity.Property(e => e.YearToDateFederal).HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateOther).HasColumnType("money");

                entity.Property(e => e.YearToDateState).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollEmployeesTaskDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EmployeeTaskId, e.EmployeeTaskDetailId })
                    .HasName("PK_PayrollEmployeeTaskDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskId)
                    .HasColumnName("EmployeeTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskDetailId)
                    .HasColumnName("EmployeeTaskDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaskDetailCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.TaskDetailDate).HasColumnType("datetime");

                entity.Property(e => e.TaskDetailDescription).HasMaxLength(255);

                entity.Property(e => e.TaskDetailRelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.TaskDetailRelatedDocumentType).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesTaskDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EmployeeTaskId, e.EmployeeTaskDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskId)
                    .HasColumnName("EmployeeTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskDetailId)
                    .HasColumnName("EmployeeTaskDetailID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaskDetailCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.TaskDetailDate).HasColumnType("datetime");

                entity.Property(e => e.TaskDetailDescription).HasMaxLength(255);

                entity.Property(e => e.TaskDetailRelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.TaskDetailRelatedDocumentType).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesTaskHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EmployeeTaskId })
                    .HasName("PK_PayrollEmployeeTaskHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskId)
                    .HasColumnName("EmployeeTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CompletedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.DelegatedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DelegatedTo).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(200);

                entity.Property(e => e.DueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PriorityId)
                    .HasColumnName("PriorityID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.RelatedDocumentType).HasMaxLength(36);

                entity.Property(e => e.StartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaskTypeId)
                    .HasColumnName("TaskTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PayrollEmployeesTaskHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EmployeeTaskId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeTaskId)
                    .HasColumnName("EmployeeTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CompletedDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.DelegatedDate).HasColumnType("datetime");

                entity.Property(e => e.DelegatedTo).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(200);

                entity.Property(e => e.DueDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LeadId)
                    .HasColumnName("LeadID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PriorityId)
                    .HasColumnName("PriorityID")
                    .HasMaxLength(36);

                entity.Property(e => e.RelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.RelatedDocumentType).HasMaxLength(36);

                entity.Property(e => e.StartDate).HasColumnType("datetime");

                entity.Property(e => e.TaskTypeId)
                    .HasColumnName("TaskTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesTaskPriority>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PriorityId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PriorityId)
                    .HasColumnName("PriorityID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PriorityDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<PayrollEmployeesTaskType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TaskTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaskTypeId)
                    .HasColumnName("TaskTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaskTypeDescription).HasMaxLength(80);

                entity.Property(e => e.TaskTypeManager).HasMaxLength(36);

                entity.Property(e => e.TaskTypeRule).HasMaxLength(120);

                entity.Property(e => e.WorkFlowTypeId)
                    .HasColumnName("WorkFlowTypeID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesTimesheetDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TimePeriod, e.TimePeriodDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TimePeriod).HasMaxLength(36);

                entity.Property(e => e.TimePeriodDetailId)
                    .HasColumnName("TimePeriodDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(120);

                entity.Property(e => e.EmployeeTaskId)
                    .HasColumnName("EmployeeTaskID")
                    .HasMaxLength(36);

                entity.Property(e => e.EventId)
                    .HasColumnName("EventID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodEnd).HasColumnType("datetime");

                entity.Property(e => e.PeriodStart).HasColumnType("datetime");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TimeUnits).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollEmployeesTimesheetHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TimePeriod });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TimePeriod).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PeriodEnd).HasColumnType("datetime");

                entity.Property(e => e.PeriodStart).HasColumnType("datetime");

                entity.Property(e => e.ProcessedBy).HasMaxLength(36);

                entity.Property(e => e.ProcessedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollEmployeesTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("PKDEL_PayrollEmployees_Tombstone_CompanyIDDivisionIDDepartmentIDEmployeeID");

                entity.ToTable("PayrollEmployees_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollEmployeesTransactionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TransactionId, e.TransactionType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionId)
                    .HasColumnName("TransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionType).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionValue).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollEmployeesTransactionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TransactionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionId)
                    .HasColumnName("TransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<PayrollFedTax>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Country });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Country).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CountryName).HasMaxLength(50);

                entity.Property(e => e.Dependents).HasColumnType("money");

                entity.Property(e => e.Exemption).HasColumnType("money");

                entity.Property(e => e.FicamedRate).HasColumnName("FICAMedRate");

                entity.Property(e => e.FicamedWageBase).HasColumnName("FICAMedWageBase");

                entity.Property(e => e.Ficarate).HasColumnName("FICARate");

                entity.Property(e => e.FicawageBase).HasColumnName("FICAWageBase");

                entity.Property(e => e.Fitrate).HasColumnName("FITRate");

                entity.Property(e => e.FitwageBase).HasColumnName("FITWageBase");

                entity.Property(e => e.Futarate).HasColumnName("FUTARate");

                entity.Property(e => e.FutawageBase).HasColumnName("FUTAWageBase");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.StandardDeductJoint).HasColumnType("money");

                entity.Property(e => e.StandardDeductSingle).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollFedTaxTables>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Country, e.WithholdingStatus, e.StatusType, e.TaxBracket });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Country).HasMaxLength(36);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.StatusType).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.PayFrequency).HasMaxLength(20);
            });

            modelBuilder.Entity<PayrollHrpayrollAbsenteeism>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AbsentDate })
                    .HasName("PK_PayrollHRPayrollAbsenteeism1");

                entity.ToTable("PayrollHRPayrollAbsenteeism");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AbsentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAbsenteeismHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.AbsentDate })
                    .HasName("PK_PayrollHRPayrollAbsenteeism");

                entity.ToTable("PayrollHRPayrollAbsenteeismHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.AbsentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollActivation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.Status })
                    .HasName("PK_PayrollHRPayrollActivation_1");

                entity.ToTable("PayrollHRPayrollActivation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Status).HasMaxLength(36);

                entity.Property(e => e.ActiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PaymentMode).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reason).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollActivationHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.Status, e.Period })
                    .HasName("PK_PayrollHRPayrollActivationHistory_1");

                entity.ToTable("PayrollHRPayrollActivationHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Status).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ActiveDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PaymentMode).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Reason)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollActiveReason>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReasonId });

                entity.ToTable("PayrollHRPayrollActiveReason");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ReasonId)
                    .HasColumnName("ReasonID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReasonDescription).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollActiveTransaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.DeActivateDate });

                entity.ToTable("PayrollHRPayrollActiveTransaction");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.DeActivateDate).HasColumnType("datetime");

                entity.Property(e => e.ActivateDate).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollActiveType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Status });

                entity.ToTable("PayrollHRPayrollActiveType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Status).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAllowanceRelief>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.FiscalYear, e.ReliefTypeId })
                    .HasName("PK_PayrollHRpayrollAllowanceRelief_1");

                entity.ToTable("PayrollHRPayrollAllowanceRelief");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReliefTypeId)
                    .HasColumnName("ReliefTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalCategory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId })
                    .HasName("PK_PayrollHRPayrollAppraisalCategory_1");

                entity.ToTable("PayrollHRPayrollAppraisalCategory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalTypeId)
                    .HasColumnName("AppraisalTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CriteriaId)
                    .HasColumnName("CriteriaID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remarks).HasMaxLength(100);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalComments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId, e.CommentLineId });

                entity.ToTable("PayrollHRPayrollAppraisalComments");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CommentLineId)
                    .HasColumnName("CommentLineID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Memo1).HasMaxLength(100);

                entity.Property(e => e.Memo2).HasMaxLength(100);

                entity.Property(e => e.Memo3).HasMaxLength(100);

                entity.Property(e => e.Notes1).HasMaxLength(100);

                entity.Property(e => e.Notes2).HasMaxLength(100);

                entity.Property(e => e.Recommendations).HasMaxLength(100);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalCriteria>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GroupId, e.CriteriaId });

                entity.ToTable("PayrollHRPayrollAppraisalCriteria");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.CriteriaId)
                    .HasColumnName("CriteriaID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CriteriaDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Note).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalCriteriaDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GroupId, e.CriteriaId, e.AppraisalTypeId })
                    .HasName("PK_PayrollHRPayrollAppraisalCriteriaDetail_1");

                entity.ToTable("PayrollHRPayrollAppraisalCriteriaDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.CriteriaId)
                    .HasColumnName("CriteriaID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalTypeId)
                    .HasColumnName("AppraisalTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId, e.AppraisalDetailInc })
                    .HasName("PK_PayrollHRPayrollAppraisalDetail_1");

                entity.ToTable("PayrollHRPayrollAppraisalDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalDetailInc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppraisalGoal).HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultId)
                    .HasColumnName("AppraisalKeyResultID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultIndicator).HasMaxLength(100);

                entity.Property(e => e.AppraisalType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remarks).HasMaxLength(100);

                entity.Property(e => e.ScoreCriteriaId)
                    .HasColumnName("ScoreCriteriaID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalGoal>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AppraisalTypeId, e.AppraisalGoalId });

                entity.ToTable("PayrollHRPayrollAppraisalGoal");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AppraisalTypeId)
                    .HasColumnName("AppraisalTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AppraisalGoalId)
                    .HasColumnName("AppraisalGoalID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GoalDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId });

                entity.ToTable("PayrollHRPayrollAppraisalHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalName).HasMaxLength(50);

                entity.Property(e => e.AppraiseeId)
                    .HasColumnName("AppraiseeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remark).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalHistoryDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId, e.AppraisalDetailInc, e.AppraisalReviewHistoryId })
                    .HasName("PK_PayrollHRPayrollAppraisalHistoryDetail_1");

                entity.ToTable("PayrollHRPayrollAppraisalHistoryDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalDetailInc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppraisalReviewHistoryId)
                    .HasColumnName("AppraisalReviewHistoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalGoal).HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultId)
                    .HasColumnName("AppraisalKeyResultID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultIndicator).HasMaxLength(100);

                entity.Property(e => e.AppraisalType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remarks).HasMaxLength(100);

                entity.Property(e => e.ReviewedAppraisalScore).HasMaxLength(36);

                entity.Property(e => e.ReviewedBy).HasMaxLength(36);

                entity.Property(e => e.ReviewedDate).HasColumnType("datetime");

                entity.Property(e => e.ScoreCriteriaId)
                    .HasColumnName("ScoreCriteriaID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalHistoryHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.AppraisalId, e.AppraisalReviewHistoryId });

                entity.ToTable("PayrollHRPayrollAppraisalHistoryHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalId)
                    .HasColumnName("AppraisalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalReviewHistoryId)
                    .HasColumnName("AppraisalReviewHistoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalName).HasMaxLength(50);

                entity.Property(e => e.AppraiseeId)
                    .HasColumnName("AppraiseeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remark).HasMaxLength(36);

                entity.Property(e => e.ReviewedBy).HasMaxLength(36);

                entity.Property(e => e.ReviewedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalKeyDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Department, e.GroupId, e.AppraisalGoalId, e.AppraisalKeyResultInc });

                entity.ToTable("PayrollHRPayrollAppraisalKeyDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalGoalId)
                    .HasColumnName("AppraisalGoalID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultInc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppraisalKeyResultId)
                    .IsRequired()
                    .HasColumnName("AppraisalKeyResultID")
                    .HasMaxLength(36);

                entity.Property(e => e.AppraisalKeyResultIndicator).HasMaxLength(200);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalKeyHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Department, e.GroupId });

                entity.ToTable("PayrollHRPayrollAppraisalKeyHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(100);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalPeriod>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId });

                entity.ToTable("PayrollHRPayrollAppraisalPeriod");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeactivatedBy).HasMaxLength(36);

                entity.Property(e => e.DeactivatedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalScore>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ScoreId });

                entity.ToTable("PayrollHRPayrollAppraisalScore");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ScoreId)
                    .HasColumnName("ScoreID")
                    .HasColumnType("numeric(18, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ScoreCriteriaId)
                    .HasColumnName("ScoreCriteriaID")
                    .HasMaxLength(36);

                entity.Property(e => e.ScoreDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalScoreCriteria>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PeriodId, e.ScoreCriteriaId });

                entity.ToTable("PayrollHRPayrollAppraisalScoreCriteria");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PeriodId)
                    .HasColumnName("PeriodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ScoreCriteriaId)
                    .HasColumnName("ScoreCriteriaID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ScoreCriteriaDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollAppraisalType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AppraisalTypeId });

                entity.ToTable("PayrollHRPayrollAppraisalType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AppraisalTypeId)
                    .HasColumnName("AppraisalTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAttDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AttendanceDate, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollAttendanceDetail");

                entity.ToTable("PayrollHRPayrollAttDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AttendanceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.ExpectedTimeIn).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(255);

                entity.Property(e => e.ShiftType).HasMaxLength(36);

                entity.Property(e => e.TimeIn).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollAttHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AttendanceDate })
                    .HasName("PK_PayrollHRPayrollAttendance_1");

                entity.ToTable("PayrollHRPayrollAttHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AttendanceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClosedBy).HasMaxLength(50);

                entity.Property(e => e.ClosedDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.Remarks).HasMaxLength(255);

                entity.Property(e => e.Status).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAttr>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AttrId });

                entity.ToTable("PayrollHRPayrollAttr");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.AttrDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAutoIncrementDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AutoIncrementId, e.AutoIncrementPeriod, e.AutoIncrementEntityId });

                entity.ToTable("PayrollHRPayrollAutoIncrementDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementId)
                    .HasColumnName("AutoIncrementID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementPeriod).HasColumnType("datetime");

                entity.Property(e => e.AutoIncrementEntityId)
                    .HasColumnName("AutoIncrementEntityID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollAutoIncrementHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AutoIncrementId, e.AutoIncrementPeriod });

                entity.ToTable("PayrollHRPayrollAutoIncrementHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementId)
                    .HasColumnName("AutoIncrementID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementPeriod).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AutoIncrementDescription).HasMaxLength(50);

                entity.Property(e => e.AutoIncrementTypeId)
                    .IsRequired()
                    .HasColumnName("AutoIncrementTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<PayrollHrpayrollAutoIncrementType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AutoIncrementTypeId });

                entity.ToTable("PayrollHRPayrollAutoIncrementType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementTypeId)
                    .HasColumnName("AutoIncrementTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AutoIncrementDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollBasis>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BasisId });

                entity.ToTable("PayrollHRPayrollBasis");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BasisId)
                    .HasColumnName("BasisID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BasisDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollBilling>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GroupId, e.ItemId });

                entity.ToTable("PayrollHRPayrollBilling");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollBillingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CostCenterId, e.GroupId, e.CustomerId, e.CurrencyId });

                entity.ToTable("PayrollHRPayrollBillingDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollBillingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CostCenterId, e.GroupId, e.CustomerId });

                entity.ToTable("PayrollHRPayrollBillingHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn)
                    .HasColumnName("ActiveYN")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCareer>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.CareerId });

                entity.ToTable("PayrollHRPayrollCareer");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CareerId)
                    .HasColumnName("CareerID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Company).HasMaxLength(50);

                entity.Property(e => e.CompanyInfoId)
                    .HasColumnName("CompanyInfoID")
                    .HasMaxLength(36);

                entity.Property(e => e.Designation).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.YearFrom).HasMaxLength(36);

                entity.Property(e => e.YearTo).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCategory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CategoryId })
                    .HasName("PK_PayrollHRPayrollCategoryType");

                entity.ToTable("PayrollHRPayrollCategory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CategoryId)
                    .HasColumnName("CategoryID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CategoryDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollChangeEmployeeId>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.NewEmployeeId });

                entity.ToTable("PayrollHRPayrollChangeEmployeeID");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.NewEmployeeId)
                    .HasColumnName("NewEmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChangeDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmployeeName).HasMaxLength(100);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollCompanyInfo>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CompanyInfoId });

                entity.ToTable("PayrollHRPayrollCompanyInfo");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CompanyInfoId)
                    .HasColumnName("CompanyInfoID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CompanyInfoDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCompanyStandard>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CompanyStdId });

                entity.ToTable("PayrollHRPayrollCompanyStandard");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CompanyStdId)
                    .HasColumnName("CompanyStdID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrentPeriod).HasColumnType("datetime");

                entity.Property(e => e.Email).HasMaxLength(50);

                entity.Property(e => e.EmailClosed).HasMaxLength(50);

                entity.Property(e => e.GraceTime).HasColumnType("datetime");

                entity.Property(e => e.GrossUpNonStatutoryforTax).HasDefaultValueSql("((0))");

                entity.Property(e => e.HrreportPassword)
                    .HasColumnName("HRReportPassword")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalBasis).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MidMonthDate).HasColumnType("datetime");

                entity.Property(e => e.MidMonthPeriod).HasColumnType("datetime");

                entity.Property(e => e.PorationBasis)
                    .HasMaxLength(1)
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.PostJvasSummary).HasColumnName("PostJVasSummary");

                entity.Property(e => e.PostingCompanyId)
                    .HasColumnName("PostingCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.PostingDepartmentId)
                    .HasColumnName("PostingDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PostingDivisionId)
                    .HasColumnName("PostingDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.PromotionInAyear).HasColumnName("PromotionInAYear");

                entity.Property(e => e.ReliefType).HasMaxLength(36);

                entity.Property(e => e.ResumptionTime).HasColumnType("datetime");

                entity.Property(e => e.SalaryAccount).HasMaxLength(36);

                entity.Property(e => e.TaxType).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollConfirmation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ConfirmId });

                entity.ToTable("PayrollHRPayrollConfirmation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ConfirmId)
                    .HasColumnName("ConfirmID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ConfirmDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollContractType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContractTypeId });

                entity.ToTable("PayrollHRPayrollContractType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TitleDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollContributionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContributionId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollContributionDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ContributionId)
                    .HasColumnName("ContributionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContributionNumber).HasMaxLength(36);

                entity.Property(e => e.EmployeeAmount).HasColumnType("money");

                entity.Property(e => e.EmployerAmount).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollContributionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContributionId });

                entity.ToTable("PayrollHRPayrollContributionHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ContributionId)
                    .HasColumnName("ContributionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'MR')");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContributionType).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollContributionType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ContributionId });

                entity.ToTable("PayrollHRPayrollContributionType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ContributionId)
                    .HasColumnName("ContributionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContributionDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCostCenter>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CostCenterId });

                entity.ToTable("PayrollHRPayrollCostCenter");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCostCenterDetails>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CostCenterId, e.PayTypeId })
                    .HasName("PK_PayrollHRPayrollCostCenterDetail");

                entity.ToTable("PayrollHRPayrollCostCenterDetails");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollCourseType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CourseTypeId });

                entity.ToTable("PayrollHRPayrollCourseType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CourseTypeId)
                    .HasColumnName("CourseTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CourseTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollDenominationTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CurrencyId, e.DenominationId });

                entity.ToTable("PayrollHRPayrollDenominationTypes");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DenominationId)
                    .HasColumnName("DenominationID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DenominationDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollDependantRatio>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.DependantId });

                entity.ToTable("PayrollHRPayrollDependantRatio");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.DependantId)
                    .HasColumnName("DependantID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DependantAddress).HasMaxLength(50);

                entity.Property(e => e.DependantBirthday).HasColumnType("datetime");

                entity.Property(e => e.DependantFirstName).HasMaxLength(36);

                entity.Property(e => e.DependantName)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.DependantOtherName).HasMaxLength(36);

                entity.Property(e => e.DependantPhone)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.DependantRelation)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollDesignation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DesignationId });

                entity.ToTable("PayrollHRPayrollDesignation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DesignDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollDisciplinaryDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DisciplinaryId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollDisciplinaryDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DisciplinaryId)
                    .HasColumnName("DisciplinaryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Employeename).HasMaxLength(100);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Note).HasMaxLength(2000);
            });

            modelBuilder.Entity<PayrollHrpayrollDisciplinaryHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DisciplinaryId });

                entity.ToTable("PayrollHRPayrollDisciplinaryHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DisciplinaryId)
                    .HasColumnName("DisciplinaryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OffenceType).HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollDocument>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.DocumentId });

                entity.ToTable("PayrollHRPayrollDocument");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocumentDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollDocumentation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.DocId })
                    .HasName("PK_PayrollHRPayrollDocumentation_1");

                entity.ToTable("PayrollHRPayrollDocumentation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.DocId)
                    .HasColumnName("DocID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DocDate).HasColumnType("datetime");

                entity.Property(e => e.DocDescription).HasMaxLength(50);

                entity.Property(e => e.DocLocation).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Remarks).HasMaxLength(200);
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeeActivity>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeActivityTypeId })
                    .HasName("pk_PayrollEmployeeActivity")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PayrollHRPayrollEmployeeActivity");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeActivityTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeeHold>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TranDate })
                    .HasName("pk_PayrollHRPayrollEmployeeHold")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PayrollHRPayrollEmployeeHold");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.ReleaseDate).HasColumnType("datetime");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeeLeaveHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollLeave");

                entity.ToTable("PayrollHRPayrollEmployeeLeaveHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeePfa>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.Pfaid, e.Employer });

                entity.ToTable("PayrollHRPayrollEmployeePFA");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Pfano)
                    .IsRequired()
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfapercent).HasColumnName("PFAPercent");
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeePfadetails>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.Pfaid, e.TranDate, e.Employer });

                entity.ToTable("PayrollHRPayrollEmployeePFADetails");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfapercent).HasColumnName("PFAPercent");
            });

            modelBuilder.Entity<PayrollHrpayrollEmployeeReferee>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.RefereeId });

                entity.ToTable("PayrollHRPayrollEmployeeReferee");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.RefereeId)
                    .HasColumnName("RefereeID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RefereeAddress).HasMaxLength(50);

                entity.Property(e => e.RefereeEmail).HasMaxLength(80);

                entity.Property(e => e.RefereeName)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.RefereePhone)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.RefereeRelation)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollExtraLeaveHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeaveType, e.EmployeeId, e.Date })
                    .HasName("PK_PayrollHRPayrollEmployeeExtraLeaveHeader");

                entity.ToTable("PayrollHRPayrollExtraLeaveHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeaveType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Date).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollGender>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GenderId });

                entity.ToTable("PayrollHRPayrollGender");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GenderDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollGeoArea>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GeoArea });

                entity.ToTable("PayrollHRPayrollGeoArea");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GeoArea).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GeoAreaDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollGrade>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GradeId });

                entity.ToTable("PayrollHRPayrollGrade");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GradeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollGradeType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.QualificationTypeId, e.GradeTypeId })
                    .HasName("PK_PayrollHRPayrollGradeType_1");

                entity.ToTable("PayrollHRPayrollGradeType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.QualificationTypeId)
                    .HasColumnName("QualificationTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.GradeTypeId)
                    .HasColumnName("GradeTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GradeTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollGroupDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GroupId, e.GroupDetailId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollGroupDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.GroupDetailId)
                    .HasColumnName("GroupDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BasisId)
                    .HasColumnName("BasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Value).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollGroupHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GroupId });

                entity.ToTable("PayrollHRPayrollGroupHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GroupDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextGroupId)
                    .HasColumnName("NextGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollIllnessType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.IllnessTypeId });

                entity.ToTable("PayrollHRPayrollIllnessType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.IllnessTypeId)
                    .HasColumnName("IllnessTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.IllnessTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollInstitution>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InstitutionId });

                entity.ToTable("PayrollHRPayrollInstitution");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.InstitutionId)
                    .HasColumnName("InstitutionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.InstitutionDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollJobClassDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.JobClassId, e.JobClassDetailId });

                entity.ToTable("PayrollHRPayrollJobClassDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JobClassDetailId)
                    .HasColumnName("JobClassDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(250);
            });

            modelBuilder.Entity<PayrollHrpayrollJobClassElement>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.JobDetailId });

                entity.ToTable("PayrollHRPayrollJobClassElement");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JobDetailId)
                    .HasColumnName("JobDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(250);
            });

            modelBuilder.Entity<PayrollHrpayrollJobClassHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.JobClassId });

                entity.ToTable("PayrollHRPayrollJobClassHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.JobClassDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollJournalDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionNumber, e.GltransactionPeriod, e.GltransactionNumberDetail });

                entity.ToTable("PayrollHRPayrollJournalDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionNumber).HasMaxLength(36);

                entity.Property(e => e.GltransactionPeriod)
                    .HasColumnName("GLTransactionPeriod")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.GltransactionNumberDetail)
                    .HasColumnName("GLTransactionNumberDetail")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.GltransactionAccount)
                    .HasColumnName("GLTransactionAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GltransactionAmountCr).HasColumnName("GLTransactionAmountCr");

                entity.Property(e => e.GltransactionAmountDr).HasColumnName("GLTransactionAmountDr");

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Location)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Project).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollJournalHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransactionNumber, e.GltransactionPeriod })
                    .HasName("PK_PayrollHRPayrollJournalHeader_1");

                entity.ToTable("PayrollHRPayrollJournalHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionNumber).HasMaxLength(36);

                entity.Property(e => e.GltransactionPeriod)
                    .HasColumnName("GLTransactionPeriod")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Narration).HasMaxLength(50);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollJournalSetupDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.JournalLocationId, e.JournalCostCenterId, e.JournalDepartmentId, e.JournalGroupId, e.PayTypeId })
                    .HasName("PK_PayrollHRPayrollJournalSetupDetail_1");

                entity.ToTable("PayrollHRPayrollJournalSetupDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JournalLocationId)
                    .HasColumnName("JournalLocationID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalCostCenterId)
                    .HasColumnName("JournalCostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalDepartmentId)
                    .HasColumnName("JournalDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalGroupId)
                    .HasColumnName("JournalGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .IsRequired()
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollJournalSetupHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.JournalLocationId, e.JournalCostCenterId, e.JournalDepartmentId, e.JournalGroupId });

                entity.ToTable("PayrollHRPayrollJournalSetupHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.JournalLocationId)
                    .HasColumnName("JournalLocationID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalCostCenterId)
                    .HasColumnName("JournalCostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalDepartmentId)
                    .HasColumnName("JournalDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalGroupId)
                    .HasColumnName("JournalGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.JournalProjectId)
                    .HasColumnName("JournalProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLanguage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LanguageId });

                entity.ToTable("PayrollHRPayrollLanguage");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LanguageDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLeaveDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeaveType, e.EmployeeId, e.DateFrom, e.DateTo })
                    .HasName("PK_PayrollHRPayrollLeaveDetail_1");

                entity.ToTable("PayrollHRPayrollLeaveDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LeaveType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.DateFrom)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateTo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EndDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LeaveDays).HasColumnType("money");

                entity.Property(e => e.LeaveId)
                    .HasColumnName("LeaveID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.StartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollLeaveHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeaveId });

                entity.ToTable("PayrollHRPayrollLeaveHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LeaveId)
                    .HasColumnName("LeaveID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LeaveType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLeaveType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LeaveTypeId });

                entity.ToTable("PayrollHRPayrollLeaveType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LeaveTypeId)
                    .HasColumnName("LeaveTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLga>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.StateId, e.LgaId });

                entity.ToTable("PayrollHRPayrollLGA");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.LgaId)
                    .HasColumnName("LgaID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LgaDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLoanDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollLoanDetail1");

                entity.ToTable("PayrollHRPayrollLoanDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(255);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.IntMthPay).HasColumnType("money");

                entity.Property(e => e.LiquidationDate).HasColumnType("datetime");

                entity.Property(e => e.LoanId)
                    .HasColumnName("LoanID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthlyPay).HasColumnType("money");

                entity.Property(e => e.MonthlyPayWoint)
                    .HasColumnName("MonthlyPayWOInt")
                    .HasColumnType("money");

                entity.Property(e => e.OutPay).HasColumnType("money");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.TotalPay).HasColumnType("money");

                entity.Property(e => e.TotalPrincipal).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType })
                    .HasName("PK_PayrollHRPayrollLoanHeader1");

                entity.ToTable("PayrollHRPayrollLoanHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType, e.EmployeeId, e.Period });

                entity.ToTable("PayrollHRPayrollLoanHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.IntMthPay).HasColumnType("money");

                entity.Property(e => e.LiquidationDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthlyPay).HasColumnType("money");

                entity.Property(e => e.MonthlyPayWoint)
                    .HasColumnName("MonthlyPayWOInt")
                    .HasColumnType("money");

                entity.Property(e => e.OutPay).HasColumnType("money");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.TotalPay).HasColumnType("money");

                entity.Property(e => e.TotalPrincipal).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanInterestType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InterestTypeId });

                entity.ToTable("PayrollHRPayrollLoanInterestType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InterestTypeId)
                    .HasColumnName("InterestTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.InterestTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLoanRefundDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType, e.EmployeeId, e.LineId });

                entity.ToTable("PayrollHRPayrollLoanRefundDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthlyPay).HasColumnType("money");

                entity.Property(e => e.OutPay).HasColumnType("money");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Principal).HasColumnType("money");

                entity.Property(e => e.TotalPay).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanRefundHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType });

                entity.ToTable("PayrollHRPayrollLoanRefundHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanRefundHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanType, e.EmployeeId, e.Period });

                entity.ToTable("PayrollHRPayrollLoanRefundHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.LoanType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthlyPay).HasColumnType("money");

                entity.Property(e => e.OutPay).HasColumnType("money");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Principal).HasColumnType("money");

                entity.Property(e => e.TotalPay).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollLoanType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LoanTypeId });

                entity.ToTable("PayrollHRPayrollLoanType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LoanTypeId)
                    .HasColumnName("LoanTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.InterestRate).HasColumnType("money");

                entity.Property(e => e.InterestTypeId)
                    .HasColumnName("InterestTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLocation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LocationId });

                entity.ToTable("PayrollHRPayrollLocation");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollLocationDetails>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.LocationId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollLocationDetails");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LocationId)
                    .HasColumnName("LocationID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollMedicalDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.MedicalId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollMedicalDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.MedicalId)
                    .HasColumnName("MedicalID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateFrom)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateTo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollMedicalHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.DependantId, e.TranDate });

                entity.ToTable("PayrollHRPayrollMedicalHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.DependantId)
                    .HasColumnName("DependantID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(100);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.Hospital).HasMaxLength(36);

                entity.Property(e => e.IllnessType).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MedicalId)
                    .HasColumnName("MedicalID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.Remarks).HasMaxLength(255);

                entity.Property(e => e.TotalAmount).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollMovement>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.EffectiveDate })
                    .HasName("PK_PayrollHRPayrollMovement_1");

                entity.ToTable("PayrollHRPayrollMovement");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EffectiveDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewCostCenter).HasMaxLength(36);

                entity.Property(e => e.NewDepartment).HasMaxLength(36);

                entity.Property(e => e.NewGroup).HasMaxLength(36);

                entity.Property(e => e.NewLocation).HasMaxLength(36);

                entity.Property(e => e.OldCostCenter).HasMaxLength(36);

                entity.Property(e => e.OldDepartment).HasMaxLength(36);

                entity.Property(e => e.OldGroup).HasMaxLength(36);

                entity.Property(e => e.OldLocation).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollNationality>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.NationalityId });

                entity.ToTable("PayrollHRPayrollNationality");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NationalityDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollNextOfKin>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.NextOfKinId });

                entity.ToTable("PayrollHRPayrollNextOfKin");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.NextOfKinId)
                    .HasColumnName("NextOfKinID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextOfKinAddress).HasMaxLength(50);

                entity.Property(e => e.NextOfKinPhone).HasMaxLength(36);

                entity.Property(e => e.NextofKinName).HasMaxLength(36);

                entity.Property(e => e.NextofKinRelation).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollOffenceType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OffenceTypeId });

                entity.ToTable("PayrollHRPayrollOffenceType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.OffenceTypeId)
                    .HasColumnName("OffenceTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollOperator>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OperatorId })
                    .HasName("PK_Operator");

                entity.ToTable("PayrollHRPayrollOperator");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.OperatorId)
                    .HasColumnName("OperatorID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'MR')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OperatorDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollOvertimeDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.OvertimeTypeId });

                entity.ToTable("PayrollHRPayrollOvertimeDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.OvertimeTypeId)
                    .HasColumnName("OvertimeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollOvertimeHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollOvertimeHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollOvertimeType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OvertimeTypeId });

                entity.ToTable("PayrollHRPayrollOvertimeType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.OvertimeTypeId)
                    .HasColumnName("OvertimeTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OvertimeDescription).HasMaxLength(50);

                entity.Property(e => e.OvertimeRate).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollPayElementsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId })
                    .HasName("PK_PayrollHRPayrollPayElementsDetail1");

                entity.ToTable("PayrollHRPayrollPayElementsDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BasisId)
                    .IsRequired()
                    .HasColumnName("BasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollPayElementsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollPayElementsHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Frequency).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollPayFile>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollPayFile");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollPayFileTempoo>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollPayFileTempoo");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollPayTransactHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.TransId });

                entity.ToTable("PayrollHRPayrollPayTransactHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TransId)
                    .HasColumnName("TransID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollPayType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollPayType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AttrDescription).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber1)
                    .HasColumnName("GLAccountNumber1")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OperatorId)
                    .IsRequired()
                    .HasColumnName("OperatorID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(50);

                entity.Property(e => e.PayTypeGlaccountNumber)
                    .HasColumnName("PayTypeGLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .IsRequired()
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TotalAmount).HasMaxLength(200);
            });

            modelBuilder.Entity<PayrollHrpayrollPayTypeDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId, e.PayTypeDetailId })
                    .HasName("PK_PayrollHRPayrollPayTypeDetail1");

                entity.ToTable("PayrollHRPayrollPayTypeDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeDetailId)
                    .HasColumnName("PayTypeDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeePercent).HasMaxLength(36);

                entity.Property(e => e.EmployerPercent).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OperatorId)
                    .HasColumnName("OperatorID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDetailInc)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<PayrollHrpayrollPayTypeStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.StatusId });

                entity.ToTable("PayrollHRPayrollPayTypeStatus");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.StatusDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollPeriod>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Period });

                entity.ToTable("PayrollHRPayrollPeriod");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AuditComment).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(36);

                entity.Property(e => e.GeneratedBy).HasMaxLength(36);

                entity.Property(e => e.GeneratedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollPeriodDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Period, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollPeriodDetail_1");

                entity.ToTable("PayrollHRPayrollPeriodDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(100);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollPfa>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Pfaid });

                entity.ToTable("PayrollHRPayrollPFA");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployerCode).HasMaxLength(36);

                entity.Property(e => e.InstrumentNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Pfaaddress)
                    .HasColumnName("PFAAddress")
                    .HasMaxLength(200);

                entity.Property(e => e.Pfacontact)
                    .HasColumnName("PFAContact")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfadescription)
                    .HasColumnName("PFADescription")
                    .HasMaxLength(50);

                entity.Property(e => e.Pfaemail)
                    .HasColumnName("PFAEmail")
                    .HasMaxLength(36);

                entity.Property(e => e.PfafreeCode)
                    .HasColumnName("PFAFreeCode")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfalogo)
                    .HasColumnName("PFALogo")
                    .HasMaxLength(100);

                entity.Property(e => e.Pfaphone)
                    .HasColumnName("PFAPhone")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceivingAcctNo).HasMaxLength(36);

                entity.Property(e => e.ReceivingBank).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollPromotion>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PromotionDate });

                entity.ToTable("PayrollHRPayrollPromotion");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NewGrade)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.OldGrade).HasMaxLength(36);

                entity.Property(e => e.Remark).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollQualification>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.QualificationTypeId, e.CertificateNo })
                    .HasName("PK_PayrollHRPayrollQualification_1");

                entity.ToTable("PayrollHRPayrollQualification");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.QualificationTypeId)
                    .HasColumnName("QualificationTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CertificateNo).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CourseTypeId)
                    .HasColumnName("CourseTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Grade).HasMaxLength(36);

                entity.Property(e => e.Institution).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.QualificationId)
                    .HasColumnName("QualificationID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.VerifiedBy).HasMaxLength(36);

                entity.Property(e => e.VerifiedDate).HasColumnType("datetime");

                entity.Property(e => e.YearFrom).HasMaxLength(36);

                entity.Property(e => e.YearTo).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollQualificationClass>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.QualificationClassTypeId });

                entity.ToTable("PayrollHRPayrollQualificationClass");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.QualificationClassTypeId)
                    .HasColumnName("QualificationClassTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QualificationClassTypeDesc).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollQualificationDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.QualificationTypeId, e.CourseTypeId })
                    .HasName("PK_PayrollHRQualificationDetail");

                entity.ToTable("PayrollHRPayrollQualificationDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.QualificationTypeId)
                    .HasColumnName("QualificationTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CourseTypeId)
                    .HasColumnName("CourseTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(36);

                entity.Property(e => e.Grade).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollQualificationType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.QualificationTypeId });

                entity.ToTable("PayrollHRPayrollQualificationType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.QualificationTypeId)
                    .HasColumnName("QualificationTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QualificationClassTypeId)
                    .HasColumnName("QualificationClassTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.QualificationType).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollRatableDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.PayTypeDetailId });

                entity.ToTable("PayrollHRPayrollRatableDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDetailId)
                    .HasColumnName("PayTypeDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .IsRequired()
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRatableDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeDetailId, e.Period });

                entity.ToTable("PayrollHRPayrollRatableDetailHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDetailId)
                    .HasColumnName("PayTypeDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .IsRequired()
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRatableHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollRatableHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollRatableHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.Period });

                entity.ToTable("PayrollHRPayrollRatableHeaderHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollRatableWeeklyDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId, e.WeekId, e.EmployeeId, e.PayTypeDetailId, e.CostCenterId, e.CostCenterId2 });

                entity.ToTable("PayrollHRPayrollRatableWeeklyDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.WeekId)
                    .HasColumnName("WeekID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDetailId)
                    .HasColumnName("PayTypeDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId2)
                    .HasColumnName("CostCenterID2")
                    .HasMaxLength(36);

                entity.Property(e => e.BasisId)
                    .HasColumnName("BasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRatableWeeklyDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId, e.WeekId, e.EmployeeId, e.PayTypeDetailId, e.CostCenterId, e.CostCenterId2, e.Period });

                entity.ToTable("PayrollHRPayrollRatableWeeklyDetailHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.WeekId)
                    .HasColumnName("WeekID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeDetailId)
                    .HasColumnName("PayTypeDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId)
                    .HasColumnName("CostCenterID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenterId2)
                    .HasColumnName("CostCenterID2")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.BasisId)
                    .HasColumnName("BasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRatableWeeklyHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WeekId, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollRatableWeeklyHeader_1");

                entity.ToTable("PayrollHRPayrollRatableWeeklyHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WeekId)
                    .HasColumnName("WeekID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollRatableWeeklyHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WeekId, e.EmployeeId, e.Period })
                    .HasName("PK_PayrollHRPayrollRatableWeeklyHeaderHistory_1");

                entity.ToTable("PayrollHRPayrollRatableWeeklyHeaderHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WeekId)
                    .HasColumnName("WeekID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Total).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollRateTransactions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollRateTransactions");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRecruitQualification>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RecruitTypeId, e.QualificationTypeId, e.Grade });

                entity.ToTable("PayrollHRPayrollRecruitQualification");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.RecruitTypeId)
                    .HasColumnName("RecruitTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.QualificationTypeId)
                    .HasColumnName("QualificationTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Grade).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Qualification).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRecruitSetup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RecruitTypeId });

                entity.ToTable("PayrollHRPayrollRecruitSetup");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RecruitTypeId)
                    .HasColumnName("RecruitTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Criteria).HasMaxLength(52);

                entity.Property(e => e.Description).HasMaxLength(52);

                entity.Property(e => e.Experience).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRecruitment>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RecruitId });

                entity.ToTable("PayrollHRPayrollRecruitment");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RecruitId)
                    .HasColumnName("RecruitID")
                    .HasMaxLength(36);

                entity.Property(e => e.Address1).HasMaxLength(50);

                entity.Property(e => e.Address2).HasMaxLength(50);

                entity.Property(e => e.ApplicationDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.City).HasMaxLength(50);

                entity.Property(e => e.Country).HasMaxLength(50);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeZip).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.Fax).HasMaxLength(30);

                entity.Property(e => e.FirstGraduationDate).HasColumnType("datetime");

                entity.Property(e => e.Firstname).HasMaxLength(50);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MobilePhone).HasMaxLength(30);

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Othername).HasMaxLength(50);

                entity.Property(e => e.Phone).HasMaxLength(30);

                entity.Property(e => e.RecruitTypeId)
                    .HasColumnName("RecruitTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ServiceYrCompletionDate).HasColumnType("datetime");

                entity.Property(e => e.State).HasMaxLength(50);

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.Surname).HasMaxLength(50);

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PayrollHrpayrollRelationship>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RelationshipId });

                entity.ToTable("PayrollHRPayrollRelationship");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.RelationshipId)
                    .HasColumnName("RelationshipID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RelationshipDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollReliefType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReliefTypeId });

                entity.ToTable("PayrollHRPayrollReliefType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ReliefTypeId)
                    .HasColumnName("ReliefTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReliefTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollRoster>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PeriodIn })
                    .HasName("PK_PayrollHRPayrollRoster_1");

                entity.ToTable("PayrollHRPayrollRoster");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PeriodIn).HasColumnType("datetime");

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodOut).HasColumnType("datetime");

                entity.Property(e => e.ShiftType).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollRosterUpdate>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.ToTable("PayrollHRPayrollRosterUpdate");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollShiftRosterDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftRosterId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollShiftRosterDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftRosterId)
                    .HasColumnName("ShiftRosterID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeFirstName).HasMaxLength(36);

                entity.Property(e => e.EmployeeLastName).HasMaxLength(36);

                entity.Property(e => e.EmployeeMiddleName).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodEnd).HasColumnType("datetime");

                entity.Property(e => e.PeriodStart).HasColumnType("datetime");

                entity.Property(e => e.ShiftType).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollShiftRosterHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftRosterId })
                    .HasName("PK_PayrollHRPayrollShiftRosterHeader_1");

                entity.ToTable("PayrollHRPayrollShiftRosterHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftRosterId)
                    .HasColumnName("ShiftRosterID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClosedBy).HasMaxLength(36);

                entity.Property(e => e.ClosedTs)
                    .HasColumnName("ClosedTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodEnd).HasColumnType("datetime");

                entity.Property(e => e.PeriodStart).HasColumnType("datetime");

                entity.Property(e => e.ShiftRosterDescription).HasMaxLength(36);

                entity.Property(e => e.ShiftType)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollShiftType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftTypeId });

                entity.ToTable("PayrollHRPayrollShiftType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftTypeId)
                    .HasColumnName("ShiftTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GraceTime).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PeriodEnd).HasColumnType("datetime");

                entity.Property(e => e.PeriodStart).HasColumnType("datetime");

                entity.Property(e => e.ShiftTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollStandardRelief>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.FiscalYear });

                entity.ToTable("PayrollHRPayrollStandardRelief");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollState>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.NationalityId, e.StateId });

                entity.ToTable("PayrollHRPayrollState");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.StateDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.StatusId });

                entity.ToTable("PayrollHRPayrollStatus");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.StatusDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollTaxRules>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId, e.PercentApplied });

                entity.ToTable("PayrollHRPayrollTaxRules");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeIdbase)
                    .IsRequired()
                    .HasColumnName("PayTypeIDBase")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTaxTable>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.FiscalYear, e.StateId, e.BandWidth, e.LowerLimit, e.UpperLimit, e.CurrencyId });

                entity.ToTable("PayrollHRPayrollTaxTable");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('NGN')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTaxTableHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.FiscalYear, e.StateId, e.CurrencyId });

                entity.ToTable("PayrollHRPayrollTaxTableHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("('NGN')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTaxType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TaxTypeId });

                entity.ToTable("PayrollHRPayrollTaxType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxTypeId)
                    .HasColumnName("TaxTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollTerminal>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollTerminal");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollTermination>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollTermination");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Period)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollHrpayrollTerminationDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayType });

                entity.ToTable("PayrollHRPayrollTerminationDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTimeSheetDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayTypeId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollTimeSheetDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTimeSheetHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollTimeSheetHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .IsRequired()
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TimeSheetTransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<PayrollHrpayrollTitle>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TitleId });

                entity.ToTable("PayrollHRPayrollTitle");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'MR')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TitleDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollHrpayrollTrainingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TrainingId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollTrainingDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TrainingId)
                    .HasColumnName("TrainingID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CourseDescription).HasMaxLength(36);

                entity.Property(e => e.DateFrom)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DateTo)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.EmployeeName).HasMaxLength(100);

                entity.Property(e => e.FacilitatorDescription).HasMaxLength(36);

                entity.Property(e => e.LineId)
                    .HasColumnName("LineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTrainingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TrainingId });

                entity.ToTable("PayrollHRPayrollTrainingHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TrainingId)
                    .HasColumnName("TrainingID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Course).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Facilitator).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Total).HasColumnType("money");

                entity.Property(e => e.TrainingDescription).HasMaxLength(50);

                entity.Property(e => e.TrainingLoc).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTransactHeaderElement>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("PK_PayrollHRPayrollTransactionHeaderElement");

                entity.ToTable("PayrollHRPayrollTransactHeaderElement");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollTransactionElement>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollTransactionElement");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BasisId)
                    .IsRequired()
                    .HasColumnName("BasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFile>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFile");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployer)
                    .HasColumnName("GLAccountEmployer")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployerExp)
                    .HasColumnName("GLAccountEmployerExp")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountNo).HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.ConfirmationDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36);

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress3).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress4).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress5).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeCounty).HasMaxLength(50);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeFirstname).HasMaxLength(50);

                entity.Property(e => e.EmployeeHomephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeIndustryId)
                    .HasColumnName("EmployeeIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeMaidenName).HasMaxLength(50);

                entity.Property(e => e.EmployeeManager).HasMaxLength(36);

                entity.Property(e => e.EmployeeManagerId)
                    .HasColumnName("EmployeeManagerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeOfficeExt).HasMaxLength(36);

                entity.Property(e => e.EmployeeOfficephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeOthername).HasMaxLength(50);

                entity.Property(e => e.EmployeePassword).HasMaxLength(15);

                entity.Property(e => e.EmployeePasswordDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeePasswordOld).HasMaxLength(15);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeePostalAddress).HasMaxLength(50);

                entity.Property(e => e.EmployeeRegionId)
                    .HasColumnName("EmployeeRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSourceId)
                    .HasColumnName("EmployeeSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.GeoArea).HasMaxLength(36);

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.GroupDescription).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.Lga)
                    .HasColumnName("LGA")
                    .HasMaxLength(36);

                entity.Property(e => e.Location).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthToDateFederal).HasColumnType("money");

                entity.Property(e => e.MonthToDateFica)
                    .HasColumnName("MonthToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.MonthToDateGross).HasColumnType("money");

                entity.Property(e => e.MonthToDateLocal).HasColumnType("money");

                entity.Property(e => e.MonthToDateOther).HasColumnType("money");

                entity.Property(e => e.MonthToDateState).HasColumnType("money");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayrollEmployeeUserGroupId)
                    .HasColumnName("PayrollEmployeeUserGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.PensionDate).HasColumnType("datetime");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.QuarterToDateFederal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateFica)
                    .HasColumnName("QuarterToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.QuarterToDateGross).HasColumnType("money");

                entity.Property(e => e.QuarterToDateLocal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateOther).HasColumnType("money");

                entity.Property(e => e.QuarterToDateState).HasColumnType("money");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatePaye)
                    .HasColumnName("StatePAYE")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxNumber)
                    .HasColumnName("Tax_Number")
                    .HasMaxLength(36);

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkedDays).HasMaxLength(36);

                entity.Property(e => e.YearToDateFederal).HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateOther).HasColumnType("money");

                entity.Property(e => e.YearToDateState).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileDetailTempoo>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileDetailTempoo");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.AccountNo).HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.ConfirmationDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36);

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress3).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress4).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress5).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeCounty).HasMaxLength(50);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeFirstname).HasMaxLength(50);

                entity.Property(e => e.EmployeeHomephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeIndustryId)
                    .HasColumnName("EmployeeIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeMaidenName).HasMaxLength(50);

                entity.Property(e => e.EmployeeManager).HasMaxLength(36);

                entity.Property(e => e.EmployeeManagerId)
                    .HasColumnName("EmployeeManagerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeOfficeExt).HasMaxLength(36);

                entity.Property(e => e.EmployeeOfficephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeOthername).HasMaxLength(50);

                entity.Property(e => e.EmployeePassword).HasMaxLength(15);

                entity.Property(e => e.EmployeePasswordDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeePasswordOld).HasMaxLength(15);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeePostalAddress).HasMaxLength(50);

                entity.Property(e => e.EmployeeRegionId)
                    .HasColumnName("EmployeeRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSourceId)
                    .HasColumnName("EmployeeSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.GeoArea).HasMaxLength(36);

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.GroupDescription).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.Lga)
                    .HasColumnName("LGA")
                    .HasMaxLength(36);

                entity.Property(e => e.Location).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthToDateFederal).HasColumnType("money");

                entity.Property(e => e.MonthToDateFica)
                    .HasColumnName("MonthToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.MonthToDateGross).HasColumnType("money");

                entity.Property(e => e.MonthToDateLocal).HasColumnType("money");

                entity.Property(e => e.MonthToDateOther).HasColumnType("money");

                entity.Property(e => e.MonthToDateState).HasColumnType("money");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayrollEmployeeUserGroupId)
                    .HasColumnName("PayrollEmployeeUserGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.PensionDate).HasColumnType("datetime");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36);

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.QuarterToDateFederal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateFica)
                    .HasColumnName("QuarterToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.QuarterToDateGross).HasColumnType("money");

                entity.Property(e => e.QuarterToDateLocal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateOther).HasColumnType("money");

                entity.Property(e => e.QuarterToDateState).HasColumnType("money");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatePaye)
                    .HasColumnName("StatePAYE")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxNumber)
                    .HasColumnName("Tax_Number")
                    .HasMaxLength(36);

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkedDays).HasMaxLength(36);

                entity.Property(e => e.YearToDateFederal).HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateOther).HasColumnType("money");

                entity.Property(e => e.YearToDateState).HasColumnType("money");
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployer)
                    .HasColumnName("GLAccountEmployer")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployerExp)
                    .HasColumnName("GLAccountEmployerExp")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileTaxDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileTaxDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileTaxDetailTempoo>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileTaxDetailTempoo");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYearPayFileTempoo>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.TranDate });

                entity.ToTable("PayrollHRPayrollYearPayFileTempoo");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.TranDate)
                    .HasColumnName("Tran_Date")
                    .HasColumnType("datetime");

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployer)
                    .HasColumnName("GLAccountEmployer")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountEmployerExp)
                    .HasColumnName("GLAccountEmployerExp")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayTypeDescription).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYtddetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId });

                entity.ToTable("PayrollHRPayrollYTDDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LastUpdatedPeriod).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYtdheader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId });

                entity.ToTable("PayrollHRPayrollYTDHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PayrollHrpayrollYtdtransaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayTypeId, e.Period });

                entity.ToTable("PayrollHRPayrollYTDTransaction");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayTypeId)
                    .HasColumnName("PayTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Period)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AttrId)
                    .HasColumnName("AttrID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollInstantMessages>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InstantMessageId })
                    .HasName("PK_InstantMessages");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InstantMessageId)
                    .HasColumnName("InstantMessageID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeEmail).HasMaxLength(60);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.InstantMessageText).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TimeSent).HasColumnType("datetime");
            });

            modelBuilder.Entity<PayrollItemBasis>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollItemBasisId })
                    .HasName("pk_PayrollItemBasis")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemBasisId)
                    .HasColumnName("PayrollItemBasisID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayrollItemBasisDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollItemTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollItemTypeId })
                    .HasName("pk_PayrollItemTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemTypeId)
                    .HasColumnName("PayrollItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayrollItemTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollItems>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayrollItemId })
                    .HasName("pk_PayrollItems")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemId)
                    .HasColumnName("PayrollItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.Basis).HasMaxLength(20);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultItem).HasMaxLength(50);

                entity.Property(e => e.EmployerItemAmount).HasColumnType("money");

                entity.Property(e => e.EmployerPercentAmount).HasColumnType("money");

                entity.Property(e => e.EmployerTotalAmount).HasColumnType("money");

                entity.Property(e => e.Frm941Line12).HasMaxLength(15);

                entity.Property(e => e.Frm941Line2).HasMaxLength(15);

                entity.Property(e => e.Frm941Line3).HasMaxLength(15);

                entity.Property(e => e.Frm941Line4).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6a).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6b).HasMaxLength(15);

                entity.Property(e => e.Frm941Line7).HasMaxLength(15);

                entity.Property(e => e.Frm941Line9).HasMaxLength(15);

                entity.Property(e => e.GlemployeeCreditAccount)
                    .HasColumnName("GLEmployeeCreditAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlemployerCreditAccount)
                    .HasColumnName("GLEmployerCreditAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlemployerDebitAccount)
                    .HasColumnName("GLEmployerDebitAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemAmount).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Minimum).HasColumnType("money");

                entity.Property(e => e.PayrollItemDescription).HasMaxLength(50);

                entity.Property(e => e.PayrollItemTypeId)
                    .HasColumnName("PayrollItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PercentAmount).HasColumnType("money");

                entity.Property(e => e.TotalAmount).HasColumnType("money");

                entity.Property(e => e.W2box1)
                    .HasColumnName("W2Box1")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box10)
                    .HasColumnName("W2Box10")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box11)
                    .HasColumnName("W2Box11")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box12)
                    .HasColumnName("W2Box12")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13)
                    .HasColumnName("W2Box13")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13b)
                    .HasColumnName("W2Box13b")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box14)
                    .HasColumnName("W2Box14")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box15)
                    .HasColumnName("W2Box15")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box17)
                    .HasColumnName("W2Box17")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box18)
                    .HasColumnName("W2Box18")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box2)
                    .HasColumnName("W2Box2")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box20)
                    .HasColumnName("W2Box20")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box21)
                    .HasColumnName("W2Box21")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box3)
                    .HasColumnName("W2Box3")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box4)
                    .HasColumnName("W2Box4")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box5)
                    .HasColumnName("W2Box5")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box6)
                    .HasColumnName("W2Box6")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box7)
                    .HasColumnName("W2Box7")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box8)
                    .HasColumnName("W2Box8")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box9)
                    .HasColumnName("W2Box9")
                    .HasMaxLength(15);

                entity.Property(e => e.WageHigh).HasColumnType("money");

                entity.Property(e => e.WageLow).HasColumnType("money");

                entity.Property(e => e.Ytdmaximum)
                    .HasColumnName("YTDMaximum")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollItemsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.PayrollItemId })
                    .HasName("pk_PayrollItemsHistory")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemId)
                    .HasColumnName("PayrollItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.Basis).HasMaxLength(20);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultItem).HasMaxLength(50);

                entity.Property(e => e.EmployerItemAmount).HasColumnType("money");

                entity.Property(e => e.EmployerPercentAmount).HasColumnType("money");

                entity.Property(e => e.EmployerTotalAmount).HasColumnType("money");

                entity.Property(e => e.Frm941Line12).HasMaxLength(15);

                entity.Property(e => e.Frm941Line2).HasMaxLength(15);

                entity.Property(e => e.Frm941Line3).HasMaxLength(15);

                entity.Property(e => e.Frm941Line4).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6a).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6b).HasMaxLength(15);

                entity.Property(e => e.Frm941Line7).HasMaxLength(15);

                entity.Property(e => e.Frm941Line9).HasMaxLength(15);

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount2)
                    .HasColumnName("GLAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount3)
                    .HasColumnName("GLAccount3")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemAmount).HasColumnType("money");

                entity.Property(e => e.Minimum).HasColumnType("money");

                entity.Property(e => e.PayrollItemDescription).HasMaxLength(50);

                entity.Property(e => e.PayrollItemTypeId)
                    .HasColumnName("PayrollItemTypeID")
                    .HasMaxLength(15);

                entity.Property(e => e.PercentAmount).HasColumnType("money");

                entity.Property(e => e.TotalAmount).HasColumnType("money");

                entity.Property(e => e.W2box1)
                    .HasColumnName("W2Box1")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box10)
                    .HasColumnName("W2Box10")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box11)
                    .HasColumnName("W2Box11")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box12)
                    .HasColumnName("W2Box12")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13)
                    .HasColumnName("W2Box13")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13b)
                    .HasColumnName("W2Box13b")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box14)
                    .HasColumnName("W2Box14")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box15)
                    .HasColumnName("W2Box15")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box17)
                    .HasColumnName("W2Box17")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box18)
                    .HasColumnName("W2Box18")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box2)
                    .HasColumnName("W2Box2")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box20)
                    .HasColumnName("W2Box20")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box21)
                    .HasColumnName("W2Box21")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box3)
                    .HasColumnName("W2Box3")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box4)
                    .HasColumnName("W2Box4")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box5)
                    .HasColumnName("W2Box5")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box6)
                    .HasColumnName("W2Box6")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box7)
                    .HasColumnName("W2Box7")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box8)
                    .HasColumnName("W2Box8")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box9)
                    .HasColumnName("W2Box9")
                    .HasMaxLength(15);

                entity.Property(e => e.WageHigh).HasColumnType("money");

                entity.Property(e => e.WageLow).HasColumnType("money");

                entity.Property(e => e.Ytdmaximum)
                    .HasColumnName("YTDMaximum")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollItemsMaster>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemId)
                    .HasColumnName("PayrollItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.Basis).HasMaxLength(20);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultItem).HasMaxLength(50);

                entity.Property(e => e.EmployerItemAmount).HasColumnType("money");

                entity.Property(e => e.EmployerPercentAmount).HasColumnType("money");

                entity.Property(e => e.EmployerTotalAmount).HasColumnType("money");

                entity.Property(e => e.Frm941Line12).HasMaxLength(15);

                entity.Property(e => e.Frm941Line2).HasMaxLength(15);

                entity.Property(e => e.Frm941Line3).HasMaxLength(15);

                entity.Property(e => e.Frm941Line4).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6a).HasMaxLength(15);

                entity.Property(e => e.Frm941Line6b).HasMaxLength(15);

                entity.Property(e => e.Frm941Line7).HasMaxLength(15);

                entity.Property(e => e.Frm941Line9).HasMaxLength(15);

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount2)
                    .HasColumnName("GLAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount3)
                    .HasColumnName("GLAccount3")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemAmount).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Minimum).HasColumnType("money");

                entity.Property(e => e.PayrollItemDescription).HasMaxLength(50);

                entity.Property(e => e.PayrollItemTypeId)
                    .HasColumnName("PayrollItemTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PercentAmount).HasColumnType("money");

                entity.Property(e => e.TotalAmount).HasColumnType("money");

                entity.Property(e => e.W2box1)
                    .HasColumnName("W2Box1")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box10)
                    .HasColumnName("W2Box10")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box11)
                    .HasColumnName("W2Box11")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box12)
                    .HasColumnName("W2Box12")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13)
                    .HasColumnName("W2Box13")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box13b)
                    .HasColumnName("W2Box13b")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box14)
                    .HasColumnName("W2Box14")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box15)
                    .HasColumnName("W2Box15")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box17)
                    .HasColumnName("W2Box17")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box18)
                    .HasColumnName("W2Box18")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box2)
                    .HasColumnName("W2Box2")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box20)
                    .HasColumnName("W2Box20")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box21)
                    .HasColumnName("W2Box21")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box3)
                    .HasColumnName("W2Box3")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box4)
                    .HasColumnName("W2Box4")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box5)
                    .HasColumnName("W2Box5")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box6)
                    .HasColumnName("W2Box6")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box7)
                    .HasColumnName("W2Box7")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box8)
                    .HasColumnName("W2Box8")
                    .HasMaxLength(15);

                entity.Property(e => e.W2box9)
                    .HasColumnName("W2Box9")
                    .HasMaxLength(15);

                entity.Property(e => e.WageHigh).HasColumnType("money");

                entity.Property(e => e.WageLow).HasColumnType("money");

                entity.Property(e => e.Ytdmaximum)
                    .HasColumnName("YTDMaximum")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollRegister>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollId, e.EmployeeId })
                    .HasName("pk_PayrollRegister")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollId)
                    .HasColumnName("PayrollID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Additions).HasColumnType("money");

                entity.Property(e => e.Agi)
                    .HasColumnName("AGI")
                    .HasColumnType("money");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckTypeId)
                    .HasColumnName("CheckTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CityTax).HasColumnType("money");

                entity.Property(e => e.Commission).HasColumnType("money");

                entity.Property(e => e.CountyTax).HasColumnType("money");

                entity.Property(e => e.Deductions).HasColumnType("money");

                entity.Property(e => e.Fica)
                    .HasColumnName("FICA")
                    .HasColumnType("money");

                entity.Property(e => e.Ficaer)
                    .HasColumnName("FICAER")
                    .HasColumnType("money");

                entity.Property(e => e.Ficamed)
                    .HasColumnName("FICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.Fit)
                    .HasColumnName("FIT")
                    .HasColumnType("money");

                entity.Property(e => e.Futa)
                    .HasColumnName("FUTA")
                    .HasColumnType("money");

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.HourlyRate).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Lui)
                    .HasColumnName("LUI")
                    .HasColumnType("money");

                entity.Property(e => e.NetPay).HasColumnType("money");

                entity.Property(e => e.OvertimeRate).HasColumnType("money");

                entity.Property(e => e.PaidThrough).HasColumnType("datetime");

                entity.Property(e => e.PayPeriodEndDate).HasColumnType("datetime");

                entity.Property(e => e.PayPeriodStartDate).HasColumnType("datetime");

                entity.Property(e => e.PayrollCheckDate).HasColumnType("datetime");

                entity.Property(e => e.PayrollDate).HasColumnType("datetime");

                entity.Property(e => e.PreTax).HasColumnType("money");

                entity.Property(e => e.Sdi)
                    .HasColumnName("SDI")
                    .HasColumnType("money");

                entity.Property(e => e.Sit)
                    .HasColumnName("SIT")
                    .HasColumnType("money");

                entity.Property(e => e.StateTax).HasColumnType("money");

                entity.Property(e => e.Suta)
                    .HasColumnName("SUTA")
                    .HasColumnType("money");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.Ytdgross)
                    .HasColumnName("YTDGross")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollRegisterDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollId, e.PayrollItemId, e.EmployeeId })
                    .HasName("pk_PayrollRegisterDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollId)
                    .HasColumnName("PayrollID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemId)
                    .HasColumnName("PayrollItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Basis).HasMaxLength(20);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.EmployerItemAmount).HasColumnType("money");

                entity.Property(e => e.EmployerPercentAmount).HasColumnType("money");

                entity.Property(e => e.EmployerTotalAmount).HasColumnType("money");

                entity.Property(e => e.GlemployeeCreditAccount)
                    .HasColumnName("GLEmployeeCreditAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlemployerCreditAccount)
                    .HasColumnName("GLEmployerCreditAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlemployerDebitAccount)
                    .HasColumnName("GLEmployerDebitAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemAmount).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Minimum).HasColumnType("money");

                entity.Property(e => e.PercentAmount).HasColumnType("money");

                entity.Property(e => e.TotalAmount).HasColumnType("money");

                entity.Property(e => e.Type).HasMaxLength(50);

                entity.Property(e => e.WageHigh).HasColumnType("money");

                entity.Property(e => e.WageLow).HasColumnType("money");

                entity.Property(e => e.Ytdmax)
                    .HasColumnName("YTDMax")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollRegisterDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollId, e.PayrollItemId, e.EmployeeId })
                    .HasName("constrain_8")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollId)
                    .HasColumnName("PayrollID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollItemId)
                    .HasColumnName("PayrollItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Basis).HasMaxLength(20);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.EmployerItemAmount).HasColumnType("money");

                entity.Property(e => e.EmployerPercentAmount).HasColumnType("money");

                entity.Property(e => e.EmployerTotalAmount).HasColumnType("money");

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount2)
                    .HasColumnName("GLAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glaccount3)
                    .HasColumnName("GLAccount3")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemAmount).HasColumnType("money");

                entity.Property(e => e.Minimum).HasColumnType("money");

                entity.Property(e => e.PercentAmount).HasColumnType("money");

                entity.Property(e => e.TotalAmount).HasColumnType("money");

                entity.Property(e => e.Type).HasMaxLength(50);

                entity.Property(e => e.WageHigh).HasColumnType("money");

                entity.Property(e => e.WageLow).HasColumnType("money");

                entity.Property(e => e.Ytdmax)
                    .HasColumnName("YTDMax")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollRegisterHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PayrollId, e.EmployeeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PayrollId)
                    .HasColumnName("PayrollID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Additions).HasColumnType("money");

                entity.Property(e => e.Agi)
                    .HasColumnName("AGI")
                    .HasColumnType("money");

                entity.Property(e => e.Amount).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CheckTypeId)
                    .HasColumnName("CheckTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CityTax).HasColumnType("money");

                entity.Property(e => e.Commission).HasColumnType("money");

                entity.Property(e => e.CountyTax).HasColumnType("money");

                entity.Property(e => e.Deductions).HasColumnType("money");

                entity.Property(e => e.Fica)
                    .HasColumnName("FICA")
                    .HasColumnType("money");

                entity.Property(e => e.Ficaer)
                    .HasColumnName("FICAER")
                    .HasColumnType("money");

                entity.Property(e => e.Ficamed)
                    .HasColumnName("FICAMed")
                    .HasColumnType("money");

                entity.Property(e => e.Fit)
                    .HasColumnName("FIT")
                    .HasColumnType("money");

                entity.Property(e => e.Futa)
                    .HasColumnName("FUTA")
                    .HasColumnType("money");

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.HourlyRate).HasColumnType("money");

                entity.Property(e => e.Lui)
                    .HasColumnName("LUI")
                    .HasColumnType("money");

                entity.Property(e => e.NetPay).HasColumnType("money");

                entity.Property(e => e.OvertimeRate).HasColumnType("money");

                entity.Property(e => e.PayPeriodEndDate).HasColumnType("datetime");

                entity.Property(e => e.PayPeriodStartDate).HasColumnType("datetime");

                entity.Property(e => e.PayrollCheckDate).HasColumnType("datetime");

                entity.Property(e => e.PayrollDate).HasColumnType("datetime");

                entity.Property(e => e.PreTax).HasColumnType("money");

                entity.Property(e => e.Sdi)
                    .HasColumnName("SDI")
                    .HasColumnType("money");

                entity.Property(e => e.Sit)
                    .HasColumnName("SIT")
                    .HasColumnType("money");

                entity.Property(e => e.StateTax).HasColumnType("money");

                entity.Property(e => e.Suta)
                    .HasColumnName("SUTA")
                    .HasColumnType("money");

                entity.Property(e => e.SystemDate).HasColumnType("datetime");

                entity.Property(e => e.Ytdgross)
                    .HasColumnName("YTDGross")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollSetup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId })
                    .HasName("pk_PayrollSetup")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CityName).HasMaxLength(50);

                entity.Property(e => e.CityTaxIdnumber)
                    .HasColumnName("CityTaxIDNumber")
                    .HasMaxLength(50);

                entity.Property(e => e.County).HasMaxLength(50);

                entity.Property(e => e.CountyTaxIdnumber)
                    .HasColumnName("CountyTaxIDNumber")
                    .HasMaxLength(50);

                entity.Property(e => e.FederalTaxIdnumber)
                    .HasColumnName("FederalTaxIDNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.FicaemployerPortion).HasColumnName("FICAEmployerPortion");

                entity.Property(e => e.FicamedRate).HasColumnName("FICAMedRate");

                entity.Property(e => e.FicamedWageBase).HasColumnName("FICAMedWageBase");

                entity.Property(e => e.Ficarate).HasColumnName("FICARate");

                entity.Property(e => e.FicawageBase).HasColumnName("FICAWageBase");

                entity.Property(e => e.Fitrate).HasColumnName("FITRate");

                entity.Property(e => e.FitwageBase).HasColumnName("FITWageBase");

                entity.Property(e => e.Futarate).HasColumnName("FUTARate");

                entity.Property(e => e.FutawageBase).HasColumnName("FUTAWageBase");

                entity.Property(e => e.GlbonusPayrollAccount)
                    .HasColumnName("GLBonusPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlficaexpenseAccount)
                    .HasColumnName("GLFICAExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlficamedExpenseAccount)
                    .HasColumnName("GLFICAMedExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlficamedPayrollAccount)
                    .HasColumnName("GLFICAMedPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlficapayrollAccount)
                    .HasColumnName("GLFICAPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfitexpenseAccount)
                    .HasColumnName("GLFITExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfitpayrollAccount)
                    .HasColumnName("GLFITPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfutaexpenseAccount)
                    .HasColumnName("GLFUTAExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlfutapayrollAccount)
                    .HasColumnName("GLFUTAPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GllocalPayrollAccount)
                    .HasColumnName("GLLocalPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlofficePayrollExpenseAccount)
                    .HasColumnName("GLOfficePayrollExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlovertimePayrollExpenseAccount)
                    .HasColumnName("GLOvertimePayrollExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpayrollCashAccount)
                    .HasColumnName("GLPayrollCashAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpayrollTaxExpenseAccount)
                    .HasColumnName("GLPayrollTaxExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlproductionPayrollExpenseAccount)
                    .HasColumnName("GLProductionPayrollExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesPayrollExpenseAccount)
                    .HasColumnName("GLSalesPayrollExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsdiexpenseAccount)
                    .HasColumnName("GLSDIExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsdipayrollAccount)
                    .HasColumnName("GLSDIPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsitexpenseAccount)
                    .HasColumnName("GLSITExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsitpayrollAccount)
                    .HasColumnName("GLSITPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsutaexpenseAccount)
                    .HasColumnName("GLSUTAExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsutapayrollAccount)
                    .HasColumnName("GLSUTAPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlwagesPayrollAccount)
                    .HasColumnName("GLWagesPayrollAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlwarehousePayrollExpenseAccount)
                    .HasColumnName("GLWarehousePayrollExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Otafter).HasColumnName("OTAfter");

                entity.Property(e => e.Sdirate).HasColumnName("SDIRate");

                entity.Property(e => e.SdiwageBase).HasColumnName("SDIWageBase");

                entity.Property(e => e.Sitrate).HasColumnName("SITRate");

                entity.Property(e => e.SitwageBase).HasColumnName("SITWageBase");

                entity.Property(e => e.Ssirate).HasColumnName("SSIRate");

                entity.Property(e => e.SsiwageBase).HasColumnName("SSIWageBase");

                entity.Property(e => e.State).HasMaxLength(20);

                entity.Property(e => e.StateTaxIdnumber)
                    .HasColumnName("StateTaxIDNumber")
                    .HasMaxLength(50);

                entity.Property(e => e.Sutarate).HasColumnName("SUTARate");

                entity.Property(e => e.SutawageBase).HasColumnName("SUTAWageBase");
            });

            modelBuilder.Entity<PayrollStateTax>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Dependents).HasColumnType("money");

                entity.Property(e => e.Exemption).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Sdirate).HasColumnName("SDIRate");

                entity.Property(e => e.SdiwageBase)
                    .HasColumnName("SDIWageBase")
                    .HasColumnType("money");

                entity.Property(e => e.Sitrate).HasColumnName("SITRate");

                entity.Property(e => e.SitwageBase)
                    .HasColumnName("SITWageBase")
                    .HasColumnType("money");

                entity.Property(e => e.StandardDeductJoint).HasColumnType("money");

                entity.Property(e => e.StandardDeductSingle).HasColumnType("money");

                entity.Property(e => e.StateName).HasMaxLength(30);

                entity.Property(e => e.Sutarate).HasColumnName("SUTARate");

                entity.Property(e => e.SutawageBase)
                    .HasColumnName("SUTAWageBase")
                    .HasColumnType("money");
            });

            modelBuilder.Entity<PayrollStateTaxTables>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.WithholdingStatus, e.StatusType, e.TaxBracket, e.OverAmnt, e.NotOver, e.Cumulative, e.PayrollYear });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.StatusType).HasMaxLength(50);

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayFrequency).HasMaxLength(20);
            });

            modelBuilder.Entity<PayrollW2detail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_PayrollW2Detail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PayrollW2Detail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Box1).HasColumnType("money");

                entity.Property(e => e.Box10).HasColumnType("money");

                entity.Property(e => e.Box11).HasColumnType("money");

                entity.Property(e => e.Box12).HasColumnType("money");

                entity.Property(e => e.Box13).HasColumnType("money");

                entity.Property(e => e.Box13b).HasMaxLength(50);

                entity.Property(e => e.Box14).HasColumnType("money");

                entity.Property(e => e.Box15).HasMaxLength(50);

                entity.Property(e => e.Box17).HasColumnType("money");

                entity.Property(e => e.Box18).HasColumnType("money");

                entity.Property(e => e.Box19).HasColumnType("money");

                entity.Property(e => e.Box2).HasColumnType("money");

                entity.Property(e => e.Box20).HasColumnType("money");

                entity.Property(e => e.Box21).HasColumnType("money");

                entity.Property(e => e.Box3).HasColumnType("money");

                entity.Property(e => e.Box4).HasColumnType("money");

                entity.Property(e => e.Box5).HasColumnType("money");

                entity.Property(e => e.Box6).HasColumnType("money");

                entity.Property(e => e.Box7).HasColumnType("money");

                entity.Property(e => e.Box8).HasColumnType("money");

                entity.Property(e => e.Box9).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.W2controlNumber)
                    .HasColumnName("W2ControlNumber")
                    .HasMaxLength(50);

                entity.Property(e => e.W2year)
                    .HasColumnName("W2Year")
                    .HasMaxLength(4);
            });

            modelBuilder.Entity<PayrollW3detail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ControlNumber })
                    .HasName("pk_PayrollW3Detail")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("PayrollW3Detail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ControlNumber).HasMaxLength(36);

                entity.Property(e => e.Box1).HasColumnType("money");

                entity.Property(e => e.Box10).HasColumnType("money");

                entity.Property(e => e.Box11).HasColumnType("money");

                entity.Property(e => e.Box12).HasColumnType("money");

                entity.Property(e => e.Box15).HasColumnType("money");

                entity.Property(e => e.Box2).HasColumnType("money");

                entity.Property(e => e.Box3).HasColumnType("money");

                entity.Property(e => e.Box4).HasColumnType("money");

                entity.Property(e => e.Box5).HasColumnType("money");

                entity.Property(e => e.Box6).HasColumnType("money");

                entity.Property(e => e.Box7).HasColumnType("money");

                entity.Property(e => e.Box8).HasColumnType("money");

                entity.Property(e => e.Box9).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Ct1).HasColumnName("CT1");

                entity.Property(e => e.EmployerIdentifyicationNumber).HasMaxLength(50);

                entity.Property(e => e.EstablishmentNo).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OtherEmployerIdentifyicationNumber).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollWithholdings>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WithholdingStatus, e.TaxBracket })
                    .HasName("pk_PayrollWithholdings")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.Allowance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.Period).HasMaxLength(50);
            });

            modelBuilder.Entity<PayrollWithholdingsState>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.State, e.WithholdingStatus, e.TaxBracket });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.State).HasMaxLength(2);

                entity.Property(e => e.WithholdingStatus).HasMaxLength(50);

                entity.Property(e => e.Allowance).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cumulative).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NotOver).HasColumnType("money");

                entity.Property(e => e.OverAmnt).HasColumnType("money");

                entity.Property(e => e.Period).HasMaxLength(50);
            });

            modelBuilder.Entity<Portal>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId })
                    .HasName("PK_Portals");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalLogoUrl)
                    .HasColumnName("PortalLogoURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalLongDescription).HasMaxLength(120);

                entity.Property(e => e.PortalName)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.PortalShortDescription).HasMaxLength(120);

                entity.Property(e => e.PortalUrl)
                    .HasColumnName("PortalURL")
                    .HasMaxLength(120);
            });

            modelBuilder.Entity<PortalAdvertising>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.BannerId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.BannerId)
                    .HasColumnName("BannerID")
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.BannerType).HasMaxLength(36);

                entity.Property(e => e.BannerUrl)
                    .HasColumnName("BannerURL")
                    .HasMaxLength(120);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Category).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .IsRequired()
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(120);

                entity.Property(e => e.DisplayUntilDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RotationStarted).HasColumnType("datetime");

                entity.Property(e => e.RotationStopped).HasColumnType("datetime");

                entity.Property(e => e.SubCategory).HasMaxLength(36);
            });

            modelBuilder.Entity<PortalBannerTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalBannerType });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalBannerType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalBannerTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<PortalCategory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalCategory1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalCategory1)
                    .HasColumnName("PortalCategory")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalCategoryDescription).HasMaxLength(120);

                entity.Property(e => e.PortalCategoryLogoUrl)
                    .HasColumnName("PortalCategoryLogoURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalCategoryLongDescription).HasMaxLength(255);

                entity.Property(e => e.PortalCategoryName).HasMaxLength(80);
            });

            modelBuilder.Entity<PortalNews>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalNewsId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalNewsId)
                    .HasColumnName("PortalNewsID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalNewsDate).HasColumnType("datetime");

                entity.Property(e => e.PortalNewsMessage).HasMaxLength(255);

                entity.Property(e => e.PortalNewsTitle).HasMaxLength(80);
            });

            modelBuilder.Entity<PortalResourceType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalResourceType1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalResourceType1)
                    .HasColumnName("PortalResourceType")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalResourceTypeDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<PortalResources>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalResourceId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalResourceId)
                    .HasColumnName("PortalResourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalCategory).HasMaxLength(36);

                entity.Property(e => e.PortalResourceDescription).HasMaxLength(36);

                entity.Property(e => e.PortalResourceDownloadUrl)
                    .HasColumnName("PortalResourceDownloadURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalResourceLinkUrl)
                    .HasColumnName("PortalResourceLinkURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalResourceName).HasMaxLength(80);

                entity.Property(e => e.PortalResourcePictureUrl)
                    .HasColumnName("PortalResourcePictureURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalResourcePrice).HasMaxLength(120);

                entity.Property(e => e.PortalResourceType).HasMaxLength(36);

                entity.Property(e => e.PortalSubCategory).HasMaxLength(36);
            });

            modelBuilder.Entity<PortalSubCategory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PortalId, e.PortalCategory, e.PortalSubCategory1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalId)
                    .HasColumnName("PortalID")
                    .HasMaxLength(36);

                entity.Property(e => e.PortalCategory).HasMaxLength(36);

                entity.Property(e => e.PortalSubCategory1)
                    .HasColumnName("PortalSubCategory")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortalSubCategoryDescription).HasMaxLength(120);

                entity.Property(e => e.PortalSubCategoryLogoUrl)
                    .HasColumnName("PortalSubCategoryLogoURL")
                    .HasMaxLength(120);

                entity.Property(e => e.PortalSubCategoryLongDescription).HasMaxLength(255);

                entity.Property(e => e.PortalSubCategoryName).HasMaxLength(80);
            });

            modelBuilder.Entity<PosCreateDocketTable>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TableId })
                    .HasName("PK_POS_CreateDocketTable_1");

                entity.ToTable("POS_CreateDocketTable");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TableId)
                    .HasColumnName("TableID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TableDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PosbalancePay>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.OrderNumber });

                entity.ToTable("POSBalancePay");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChangeAmount).HasColumnType("money");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<PoscashUp>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.ToTable("POSCashUp");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashierId)
                    .HasColumnName("CashierID")
                    .HasMaxLength(80);

                entity.Property(e => e.CashupDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Receipt).HasMaxLength(50);

                entity.Property(e => e.Sales).HasMaxLength(50);

                entity.Property(e => e.ShifType).HasMaxLength(80);

                entity.Property(e => e.SupervisorId)
                    .HasColumnName("SupervisorID")
                    .HasMaxLength(50);

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<PoscommissionType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId, e.CommissionTypeId })
                    .HasName("pk_POSCommissionTypeID")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("POSCommissionType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(36);

                entity.Property(e => e.CommissionTypeId)
                    .HasColumnName("CommissionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionAccount).HasMaxLength(36);

                entity.Property(e => e.CommissionTypeDescription).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransId)
                    .HasColumnName("TransID")
                    .ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<PoscreateWaiters>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId })
                    .HasName("pk_POSCreateWaiters")
                    .ForSqlServerIsClustered(false);

                entity.ToTable("POSCreateWaiters");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountNo).HasMaxLength(36);

                entity.Property(e => e.ActiveYn)
                    .HasColumnName("ActiveYN")
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Birthday).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommissionCalcMethod).HasMaxLength(1);

                entity.Property(e => e.Commissionable).HasDefaultValueSql("((1))");

                entity.Property(e => e.ConfirmationDate).HasColumnType("datetime");

                entity.Property(e => e.ContractTypeId)
                    .HasColumnName("ContractTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.CostCenter).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.Department).HasMaxLength(36);

                entity.Property(e => e.DesignationId)
                    .HasColumnName("DesignationID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.DocumentId)
                    .HasColumnName("DocumentID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeActivityTypeId)
                    .HasColumnName("EmployeeActivityTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeAddress1).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress2).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress3).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress4).HasMaxLength(50);

                entity.Property(e => e.EmployeeAddress5).HasMaxLength(50);

                entity.Property(e => e.EmployeeCity).HasMaxLength(50);

                entity.Property(e => e.EmployeeCountry).HasMaxLength(50);

                entity.Property(e => e.EmployeeCounty).HasMaxLength(50);

                entity.Property(e => e.EmployeeDepartmentId)
                    .HasColumnName("EmployeeDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeEmailAddress).HasMaxLength(60);

                entity.Property(e => e.EmployeeFax).HasMaxLength(30);

                entity.Property(e => e.EmployeeFirstname).HasMaxLength(50);

                entity.Property(e => e.EmployeeHomephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeIndustryId)
                    .HasColumnName("EmployeeIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeMaidenName).HasMaxLength(50);

                entity.Property(e => e.EmployeeManager).HasMaxLength(36);

                entity.Property(e => e.EmployeeManagerId)
                    .HasColumnName("EmployeeManagerID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.EmployeeName).HasMaxLength(50);

                entity.Property(e => e.EmployeeOfficeExt).HasMaxLength(36);

                entity.Property(e => e.EmployeeOfficephone).HasMaxLength(36);

                entity.Property(e => e.EmployeeOthername).HasMaxLength(50);

                entity.Property(e => e.EmployeePassword)
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N';jE')");

                entity.Property(e => e.EmployeePasswordDate).HasColumnType("datetime");

                entity.Property(e => e.EmployeePasswordOld).HasMaxLength(15);

                entity.Property(e => e.EmployeePhone).HasMaxLength(30);

                entity.Property(e => e.EmployeeRegionId)
                    .HasColumnName("EmployeeRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSourceId)
                    .HasColumnName("EmployeeSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeSsnumber)
                    .HasColumnName("EmployeeSSNumber")
                    .HasMaxLength(15);

                entity.Property(e => e.EmployeeState).HasMaxLength(50);

                entity.Property(e => e.EmployeeTypeId)
                    .HasColumnName("EmployeeTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeZip).HasMaxLength(10);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GenderId)
                    .HasColumnName("GenderID")
                    .HasMaxLength(36);

                entity.Property(e => e.GradeId)
                    .HasColumnName("GradeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Gross).HasColumnType("money");

                entity.Property(e => e.GroupDescription).HasMaxLength(36);

                entity.Property(e => e.GroupId)
                    .HasColumnName("GroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.HireDate).HasColumnType("datetime");

                entity.Property(e => e.JobClassId)
                    .HasColumnName("JobClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.LanguageId)
                    .HasColumnName("LanguageID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastPayDate).HasColumnType("datetime");

                entity.Property(e => e.Location).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MonthToDateFederal).HasColumnType("money");

                entity.Property(e => e.MonthToDateFica)
                    .HasColumnName("MonthToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.MonthToDateGross).HasColumnType("money");

                entity.Property(e => e.MonthToDateLocal).HasColumnType("money");

                entity.Property(e => e.MonthToDateOther).HasColumnType("money");

                entity.Property(e => e.MonthToDateState).HasColumnType("money");

                entity.Property(e => e.NationalityId)
                    .HasColumnName("NationalityID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextOfKinName).HasMaxLength(50);

                entity.Property(e => e.NextOfKinNumber).HasMaxLength(30);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PensionDate).HasColumnType("datetime");

                entity.Property(e => e.Pfaid)
                    .HasColumnName("PFAID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Pfano)
                    .HasColumnName("PFANo")
                    .HasMaxLength(36);

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.PromotionDate).HasColumnType("datetime");

                entity.Property(e => e.QuarterToDateFederal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateFica)
                    .HasColumnName("QuarterToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.QuarterToDateGross).HasColumnType("money");

                entity.Property(e => e.QuarterToDateLocal).HasColumnType("money");

                entity.Property(e => e.QuarterToDateOther).HasColumnType("money");

                entity.Property(e => e.QuarterToDateState).HasColumnType("money");

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(36);

                entity.Property(e => e.StatePaye)
                    .HasColumnName("StatePAYE")
                    .HasMaxLength(36);

                entity.Property(e => e.StatusId)
                    .HasColumnName("StatusID")
                    .HasMaxLength(36);

                entity.Property(e => e.TitleId)
                    .HasColumnName("TitleID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WorkedDays).HasMaxLength(36);

                entity.Property(e => e.YearToDateFederal).HasColumnType("money");

                entity.Property(e => e.YearToDateFica)
                    .HasColumnName("YearToDateFICA")
                    .HasColumnType("money");

                entity.Property(e => e.YearToDateGross).HasColumnType("money");

                entity.Property(e => e.YearToDateLocal).HasColumnType("money");

                entity.Property(e => e.YearToDateOther).HasColumnType("money");

                entity.Property(e => e.YearToDateState).HasColumnType("money");
            });

            modelBuilder.Entity<PosdailyCash>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.OrderNumber, e.PosdailyCash1 });

                entity.ToTable("POSDailyCash");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PosdailyCash1)
                    .HasColumnName("POSDailyCash")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashClose).HasColumnType("money");

                entity.Property(e => e.CashDate).HasColumnType("datetime");

                entity.Property(e => e.CashOpen).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PossalesPoints>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PospointId });

                entity.ToTable("POSSalesPoints");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PospointId)
                    .HasColumnName("POSPointID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.PointDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<PossalesPointsTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PospointId })
                    .HasName("PKDEL_POSSalesPoints_Tombstone_CompanyIDDivisionIDDepartmentIDPOSPointID");

                entity.ToTable("POSSalesPoints_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PospointId)
                    .HasColumnName("POSPointID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosserviceCharge>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ServiceId });

                entity.ToTable("POSServiceCharge");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ServiceId)
                    .HasColumnName("ServiceID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ServiceDescription).HasMaxLength(80);

                entity.Property(e => e.ServiceItemId)
                    .HasColumnName("ServiceItemID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<Possetup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.ToTable("POSSetup");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DefaultBin).HasMaxLength(36);

                entity.Property(e => e.DefaultPricingCode).HasMaxLength(36);

                entity.Property(e => e.DefaultWarehouse).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PosshiftCartTable>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.OrderNumber, e.OrderLineNumber });

                entity.ToTable("POSShiftCartTable");

                entity.HasIndex(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderLineNumber })
                    .HasName("POSShiftCartTableIndex");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OrderLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'N')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerPhone).HasMaxLength(36);

                entity.Property(e => e.DiscountAmt).HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPer).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemDescription).HasMaxLength(50);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemTotalAmount).HasColumnType("money");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderEndDateTime).HasColumnType("datetime");

                entity.Property(e => e.OrderStartDateTime).HasColumnType("datetime");

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.Price).HasColumnType("money");

                entity.Property(e => e.ReceiveOrderCashier).HasMaxLength(36);

                entity.Property(e => e.Reconcilled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Remove).HasDefaultValueSql("((0))");

                entity.Property(e => e.SalesTaxGroupId)
                    .HasColumnName("SalesTaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TableId)
                    .HasColumnName("TableID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);

                entity.Property(e => e.Tpintegrated).HasColumnName("TPIntegrated");

                entity.Property(e => e.TrackingNumber).HasMaxLength(36);

                entity.Property(e => e.TransDateTime)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");

                entity.Property(e => e.VoidBy).HasMaxLength(36);

                entity.Property(e => e.VoidReason).HasMaxLength(100);

                entity.Property(e => e.WaitressId)
                    .HasColumnName("WaitressID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PosshiftCartTableHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.OrderNumber, e.OrderLineNumber });

                entity.ToTable("POSShiftCartTableHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCategoryId)
                    .HasColumnName("ItemCategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemDescription).HasMaxLength(50);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemName).HasMaxLength(50);

                entity.Property(e => e.ItemTotalAmount).HasColumnType("money");

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderEndDateTime).HasColumnType("datetime");

                entity.Property(e => e.OrderStartDateTime).HasColumnType("datetime");

                entity.Property(e => e.PictureUrl)
                    .HasColumnName("PictureURL")
                    .HasMaxLength(80);

                entity.Property(e => e.Price).HasColumnType("money");

                entity.Property(e => e.ReceiveOrderCashier).HasMaxLength(36);

                entity.Property(e => e.SalesTaxGroupId)
                    .HasColumnName("SalesTaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TableId)
                    .HasColumnName("TableID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);

                entity.Property(e => e.Tpintegrated).HasColumnName("TPIntegrated");

                entity.Property(e => e.TrackingNumber).HasMaxLength(36);

                entity.Property(e => e.TransDateTime).HasColumnType("datetime");

                entity.Property(e => e.VoidBy).HasMaxLength(36);

                entity.Property(e => e.VoidReason).HasMaxLength(100);

                entity.Property(e => e.WaitressId)
                    .HasColumnName("WaitressID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<PosshiftCartTableTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.OrderNumber, e.OrderLineNumber })
                    .HasName("PKDEL_POSShiftCartTable_Tombstone_CompanyIDDivisionIDDepartmentIDShiftIDOrderNumberOrderLineNumber");

                entity.ToTable("POSShiftCartTable_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftMaster>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.EmployeeId });

                entity.ToTable("POSShiftMaster");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClosingBalance).HasColumnType("money");

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.CurrentBalance)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LastEmployeeId)
                    .HasColumnName("LastEmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LeaveAmt)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MachineName).HasMaxLength(36);

                entity.Property(e => e.NextEmployeeId)
                    .HasColumnName("NextEmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.NextTransNumber).HasDefaultValueSql("((1))");

                entity.Property(e => e.OpeningBalance)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ShiftCloseDate).HasColumnType("datetime");

                entity.Property(e => e.ShiftCloseTime).HasColumnType("datetime");

                entity.Property(e => e.ShiftClosedBy).HasMaxLength(36);

                entity.Property(e => e.ShiftOpenBy).HasMaxLength(36);

                entity.Property(e => e.ShiftOpenDate).HasColumnType("datetime");

                entity.Property(e => e.ShiftOpenTime).HasColumnType("datetime");

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftMasterTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.EmployeeId })
                    .HasName("PKDEL_POSShiftMaster_Tombstone_CompanyIDDivisionIDDepartmentIDShiftIDEmployeeID");

                entity.ToTable("POSShiftMaster_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId).HasColumnName("ShiftID");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftTransByPaymentType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.PosreceiptId, e.OrderNumber, e.PaymentType });

                entity.ToTable("POSShiftTransByPaymentType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.PosreceiptId)
                    .HasColumnName("POSReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentType).HasMaxLength(36);

                entity.Property(e => e.AmountPaid).HasColumnType("money");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChangeDue).HasColumnType("money");

                entity.Property(e => e.ChequeName).HasMaxLength(36);

                entity.Property(e => e.ChequeNumber).HasMaxLength(36);

                entity.Property(e => e.CreationDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LastEditDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderAmount).HasColumnType("money");

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransDateTime).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftTransByPaymentTypeTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.PosreceiptId, e.OrderNumber, e.PaymentType })
                    .HasName("PKDEL_POSShiftTransByPaymentType_Tombstone_CompanyIDDivisionIDDepartmentIDShiftIDPOSReceiptIDOrderNumberPaymentType");

                entity.ToTable("POSShiftTransByPaymentType_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.PosreceiptId)
                    .HasColumnName("POSReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentType).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftTransaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftId, e.OrderNumber });

                entity.ToTable("POSShiftTransaction");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderAmount).HasColumnType("money");

                entity.Property(e => e.Status)
                    .HasMaxLength(5)
                    .HasDefaultValueSql("(N'Close')");

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransDateTime).HasColumnType("datetime");

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PosshiftType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftTypeId });

                entity.ToTable("POSShiftType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftTypeId)
                    .HasColumnName("ShiftTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreationDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.EndPeriod).HasColumnType("datetime");

                entity.Property(e => e.LastEditDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getutcdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ShiftTypeDescription).HasMaxLength(80);

                entity.Property(e => e.StartPeriod).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshiftTypeTombstone>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShiftTypeId })
                    .HasName("PKDEL_POSShiftType_Tombstone_CompanyIDDivisionIDDepartmentIDShiftTypeID");

                entity.ToTable("POSShiftType_Tombstone");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShiftTypeId)
                    .HasColumnName("ShiftTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DeletionDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<PosshopPreference>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShopId });

                entity.ToTable("POSShopPreference");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShopId)
                    .HasColumnName("ShopID")
                    .HasMaxLength(36);

                entity.Property(e => e.Address1).HasMaxLength(50);

                entity.Property(e => e.Address2).HasMaxLength(50);

                entity.Property(e => e.Address3).HasMaxLength(50);

                entity.Property(e => e.AllowAppShutdown).HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountTendered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CossalesAccount)
                    .HasColumnName("COSSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.DebtorCashAccount).HasMaxLength(36);

                entity.Property(e => e.DisplayPort).HasMaxLength(5);

                entity.Property(e => e.FtpaccessCode)
                    .HasColumnName("FTPAccessCode")
                    .HasMaxLength(36);

                entity.Property(e => e.FtpbranchCode)
                    .HasColumnName("FTPBranchCode")
                    .HasMaxLength(36);

                entity.Property(e => e.FtpcompanyCode)
                    .HasColumnName("FTPCompanyCode")
                    .HasMaxLength(36);

                entity.Property(e => e.Ftpconfiguration)
                    .HasColumnName("FTPConfiguration")
                    .HasMaxLength(500);

                entity.Property(e => e.SalesAccount).HasMaxLength(36);

                entity.Property(e => e.ServerIpname)
                    .HasColumnName("ServerIPName")
                    .HasMaxLength(36);

                entity.Property(e => e.ShopDepartmentId)
                    .HasColumnName("ShopDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShopDivisionId)
                    .HasColumnName("ShopDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShopName).HasMaxLength(100);

                entity.Property(e => e.StockAccount).HasMaxLength(36);

                entity.Property(e => e.TaxGroup).HasMaxLength(36);

                entity.Property(e => e.TaxRate).HasDefaultValueSql("((0))");

                entity.Property(e => e.TimeSetup).HasDefaultValueSql("((10))");

                entity.Property(e => e.UserName).HasMaxLength(36);

                entity.Property(e => e.WareHouseBinId)
                    .HasColumnName("WareHouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WareHouseId)
                    .HasColumnName("WareHouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PostransactionRef>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CustomerId, e.Reference });

                entity.ToTable("POSTransactionRef");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ShiftId)
                    .HasColumnName("ShiftID")
                    .HasMaxLength(36);

                entity.Property(e => e.TerminalId)
                    .HasColumnName("TerminalID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<PowerSuiteBilling>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BookingId, e.ServiceTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BookingId)
                    .HasColumnName("BookingID")
                    .HasMaxLength(36);

                entity.Property(e => e.ServiceTypeId)
                    .HasColumnName("ServiceTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BillingDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentMethod).HasMaxLength(36);
            });

            modelBuilder.Entity<PowerSuiteBooking>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BookingId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BookingId)
                    .HasColumnName("BookingID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BookingDate).HasColumnType("datetime");

                entity.Property(e => e.BookingExpiration).HasMaxLength(36);

                entity.Property(e => e.BookingexpirationDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CardCvv2)
                    .HasColumnName("CardCVV2")
                    .HasMaxLength(36);

                entity.Property(e => e.CheckingInDate).HasColumnType("datetime");

                entity.Property(e => e.CheckingOutDate).HasColumnType("datetime");

                entity.Property(e => e.CustomerEmail).HasMaxLength(36);

                entity.Property(e => e.CustomerFirstName).HasMaxLength(36);

                entity.Property(e => e.CustomerLastName).HasMaxLength(36);

                entity.Property(e => e.CustomerPhoneNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NumberOfAdults).HasMaxLength(36);

                entity.Property(e => e.NumberOfChildren).HasMaxLength(36);

                entity.Property(e => e.PaymentCardNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethod).HasMaxLength(36);

                entity.Property(e => e.RoomCategory).HasMaxLength(36);
            });

            modelBuilder.Entity<PowerSuiteRoomTypeManager>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CategoryId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CategoryId)
                    .HasColumnName("CategoryID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Capacity).HasMaxLength(36);

                entity.Property(e => e.CategoryDescription).HasMaxLength(36);

                entity.Property(e => e.CategoryName).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Picture).HasMaxLength(50);
            });

            modelBuilder.Entity<PowersuitePayType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId })
                    .HasName("PK_PowersuitePayment");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentDescription)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.RoomName).HasMaxLength(36);
            });

            modelBuilder.Entity<PowersuiteRoomManager>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RoomId })
                    .HasName("PK_PowersuiteRoom");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RoomId)
                    .HasColumnName("RoomID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Picture).HasColumnType("image");

                entity.Property(e => e.RoomDescription).HasMaxLength(50);

                entity.Property(e => e.RoomLocation).HasMaxLength(36);

                entity.Property(e => e.RoomName).HasMaxLength(36);

                entity.Property(e => e.RoomType).HasMaxLength(36);
            });

            modelBuilder.Entity<PowersuiteServices>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ServiceTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ServiceTypeId)
                    .HasColumnName("ServiceTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ServiceDescription)
                    .IsRequired()
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<ProductionDetailLabour>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.LabourTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LabourTypeId)
                    .HasColumnName("LabourTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedHours).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.NumberOfWorkers).HasDefaultValueSql("((1))");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionDetailMachine>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.MachineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.MachineId)
                    .HasColumnName("MachineID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedQuantity).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionDetailMaterial>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.ItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedQuantity).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionDetailOrder>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId, e.OrderId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderId)
                    .HasColumnName("OrderID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.OrderDescription).HasMaxLength(200);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ProductionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AssemblyId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssemblyDescription).HasMaxLength(80);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ProductionWodetailLabour>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Woid, e.AssemblyId, e.LabourTypeId });

                entity.ToTable("ProductionWODetailLabour");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Woid)
                    .HasColumnName("WOID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.LabourTypeId)
                    .HasColumnName("LabourTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActualCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.ActualHours).HasDefaultValueSql("((1))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedHours).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.NumberOfWorkers).HasDefaultValueSql("((1))");

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionWodetailMachine>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Woid, e.AssemblyId, e.MachineId });

                entity.ToTable("ProductionWODetailMachine");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Woid)
                    .HasColumnName("WOID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.MachineId)
                    .HasColumnName("MachineID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedQuantity).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionWodetailMaterial>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Woid, e.AssemblyId, e.ItemId });

                entity.ToTable("ProductionWODetailMaterial");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Woid)
                    .HasColumnName("WOID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.EstimatedQuantity).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnitOfMeasure).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProductionWodetailOrder>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Woid, e.AssemblyId, e.OrderId });

                entity.ToTable("ProductionWODetailOrder");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Woid)
                    .HasColumnName("WOID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderId)
                    .HasColumnName("OrderID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EstimatedCost).HasDefaultValueSql("((1))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.OrderDescription).HasMaxLength(200);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<ProductionWoheader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Woid, e.AssemblyId });

                entity.ToTable("ProductionWOHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Woid)
                    .HasColumnName("WOID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssemblyId)
                    .HasColumnName("AssemblyID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdditionalCostAccount).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MaterialIssueVarianceAccount).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkOrderCompletedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderExpectedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderStartDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<ProjectInvoiceDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber, e.InvoiceLineNumber })
                    .HasName("pk_ProjectInvoiceDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.InvoiceLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BackOrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.BackOrdered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CartonLevel).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.PackLevelA).HasMaxLength(36);

                entity.Property(e => e.PackLevelB).HasMaxLength(36);

                entity.Property(e => e.PackLevelC).HasMaxLength(36);

                entity.Property(e => e.PalletLevel).HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((1))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZone).HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProjectInvoiceHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.InvoiceNumber })
                    .HasName("pk_ProjectInvoiceHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Backordered).HasDefaultValueSql("((0))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.Billed).HasDefaultValueSql("((0))");

                entity.Property(e => e.BilledDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CashTendered).HasColumnType("money");

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.ComissionalbleCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Commission)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionPaid).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionSelectToPay).HasDefaultValueSql("((0))");

                entity.Property(e => e.CommissionableSales)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerDropShipment).HasDefaultValueSql("((0))");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.InvoiceCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.InvoiceShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLading).HasMaxLength(36);

                entity.Property(e => e.MasterBillOfLadingDate).HasColumnType("datetime");

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.PerformedBy).HasMaxLength(36);

                entity.Property(e => e.Picked).HasDefaultValueSql("((0))");

                entity.Property(e => e.PickedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ProjectAbsorbedCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectActualCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.ScheduledEndDate).HasColumnType("datetime");

                entity.Property(e => e.ScheduledStartDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceEndDate).HasColumnType("datetime");

                entity.Property(e => e.ServiceStartDate).HasColumnType("datetime");

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipForId)
                    .HasColumnName("ShipForID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToId)
                    .HasColumnName("ShipToID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TrailerNumber).HasMaxLength(36);

                entity.Property(e => e.TrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Invoice')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<ProjectTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProjectTypeId })
                    .HasName("pk_ProjectTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectTypeId)
                    .HasColumnName("ProjectTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Glwipaccount)
                    .HasColumnName("GLWIPAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<Projects>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProjectId })
                    .HasName("pk_Projects")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Glcosaccount)
                    .HasColumnName("GLCOSAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ProjectAbsorbedCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectActualCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectActualRevenue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectDescription).HasMaxLength(50);

                entity.Property(e => e.ProjectEstCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectEstRevenue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectName).HasMaxLength(50);

                entity.Property(e => e.ProjectNotes).HasMaxLength(250);

                entity.Property(e => e.ProjectOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjectOrderValue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectStartDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectTypeId)
                    .HasColumnName("ProjectTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<ProjectsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProjectId, e.ProjectDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectDetailId)
                    .HasColumnName("ProjectDetailID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ActualValue).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DependsOn).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EstimatedValue).HasColumnType("money");

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OtherRelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.Priority).HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.StepComplete).HasDefaultValueSql("((1))");

                entity.Property(e => e.StepCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.StepDescription).HasMaxLength(250);

                entity.Property(e => e.StepDueDate).HasColumnType("datetime");

                entity.Property(e => e.StepName).HasMaxLength(80);

                entity.Property(e => e.StepNotes).HasMaxLength(250);

                entity.Property(e => e.StepStartDate).HasColumnType("datetime");

                entity.Property(e => e.StepStatus).HasMaxLength(36);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<ProjectsDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProjectId, e.ProjectDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectDetailId).HasColumnName("ProjectDetailID");

                entity.Property(e => e.ActualValue).HasColumnType("money");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DependsOn).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EstimatedValue).HasColumnType("money");

                entity.Property(e => e.Glaccount)
                    .HasColumnName("GLAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.InvoiceNumber).HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.OtherRelatedDocumentNumber).HasMaxLength(36);

                entity.Property(e => e.Priority).HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.StepCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.StepDescription).HasMaxLength(250);

                entity.Property(e => e.StepDueDate).HasColumnType("datetime");

                entity.Property(e => e.StepName).HasMaxLength(80);

                entity.Property(e => e.StepNotes).HasMaxLength(250);

                entity.Property(e => e.StepStartDate).HasColumnType("datetime");

                entity.Property(e => e.StepStatus).HasMaxLength(36);

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionType).HasMaxLength(36);
            });

            modelBuilder.Entity<ProjectsHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ProjectId })
                    .HasName("pk_ProjectsHistory")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.ClearedDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Glcosaccount)
                    .HasColumnName("GLCOSAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlsalesAccount)
                    .HasColumnName("GLSalesAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ProjectAbsorbedCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectActualCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectActualRevenue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectCompleteDate).HasColumnType("datetime");

                entity.Property(e => e.ProjectDescription).HasMaxLength(50);

                entity.Property(e => e.ProjectEstCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectEstRevenue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectName).HasMaxLength(50);

                entity.Property(e => e.ProjectNotes).HasMaxLength(250);

                entity.Property(e => e.ProjectOpen).HasDefaultValueSql("((1))");

                entity.Property(e => e.ProjectOrderValue)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectTypeId)
                    .HasColumnName("ProjectTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectsHistorytartDate).HasColumnType("datetime");

                entity.Property(e => e.Void).HasDefaultValueSql("((0))");
            });

            modelBuilder.Entity<PurchaseAddonCost>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.GlaccountNumber })
                    .HasName("PK_PurchaseAdditionalCost");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.GlaccountNumber)
                    .HasColumnName("GLAccountNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ApportionmentBase).HasMaxLength(1);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(50);
            });

            modelBuilder.Entity<PurchaseAddonCostDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_PurchaseAddonCostDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApportionmentBase).HasMaxLength(1);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Total).HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<PurchaseAddonCostHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("pk_PurchaseAddonCostHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ReceivingNumber).HasMaxLength(36);

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");
            });

            modelBuilder.Entity<PurchaseAddonCostTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_PurchaseAddonCostTrackingDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApportionmentBase).HasMaxLength(1);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Total).HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<PurchaseContractDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber, e.PurchaseContractLineNumber })
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseContractLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(131000)");

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("(0)");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("(0)");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("(0)");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseContractDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber, e.PurchaseContractLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseContractLineNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(131000)");

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("(0)");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("(0)");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("(0)");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseContractHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Approved).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(25)
                    .HasDefaultValueSql("(131000)");

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrderedBy).HasMaxLength(15);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("(0)");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("(0)");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.Printed).HasDefaultValueSql("(0)");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PurchaseContractDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseContractDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseContractEndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractOpen).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseContractStartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Received).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("(1)");

                entity.Property(e => e.Shipped).HasDefaultValueSql("(0)");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseContractHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Approved).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(25)
                    .HasDefaultValueSql("(131000)");

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrderedBy).HasMaxLength(15);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("(0)");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("(0)");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.Printed).HasDefaultValueSql("(0)");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PurchaseContractDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseContractDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseContractEndDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractOpen).HasDefaultValueSql("((0))");

                entity.Property(e => e.PurchaseContractStartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Received).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("(1)");

                entity.Property(e => e.Shipped).HasDefaultValueSql("(0)");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseContractLedger>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber, e.PurchaseOrderNumber, e.PurchaseOrderLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderLineNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateUsed).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NumberUsed).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<PurchaseContractLedgerHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber, e.PurchaseOrderNumber, e.PurchaseOrderLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderLineNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DateUsed).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PurchaseContractList>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseContractNumber, e.PurchaseOrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseOrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PurchaseDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_PurchaseDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BudgetId)
                    .HasColumnName("BudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxAmountVat)
                    .HasColumnName("TaxAmountVAT")
                    .HasColumnType("money");

                entity.Property(e => e.TaxAmountWht)
                    .HasColumnName("TaxAmountWHT")
                    .HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupIdvat)
                    .HasColumnName("TaxGroupIDVAT")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupIdwht)
                    .HasColumnName("TaxGroupIDWHT")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((0))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxAmountVat)
                    .HasColumnName("TaxAmountVAT")
                    .HasColumnType("money");

                entity.Property(e => e.TaxAmountWht)
                    .HasColumnName("TaxAmountWHT")
                    .HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupIdvat)
                    .HasColumnName("TaxGroupIDVAT")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupIdwht)
                    .HasColumnName("TaxGroupIDWHT")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((0))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseFixedAssetDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_PurchaseFixedAssetDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.AssetName).HasMaxLength(50);

                entity.Property(e => e.AssetSerialNumber).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(15)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((0))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseFixedAssetHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("pk_PurchaseFixedAssetHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("((1))");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalAdditionalCost).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("pk_PurchaseHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAddOnExpense)
                    .HasColumnName("GLPurchaseAddOnExpense")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.QuoteDate).HasColumnType("datetime");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("((1))");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalAdditionalCost).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Approved).HasDefaultValueSql("(0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("(0)");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.OrderedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("(0)");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("(0)");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.Printed).HasDefaultValueSql("(0)");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.PurchaseCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.QuoteDate).HasColumnType("datetime");

                entity.Property(e => e.Received).HasDefaultValueSql("(0)");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("(1)");

                entity.Property(e => e.Shipped).HasDefaultValueSql("(0)");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("(0)");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.TotalAdditionalCost).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseReceiptDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber })
                    .HasName("pk_PurchaseReceiptDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((0))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseReceiptDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.PurchaseLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseLineNumber)
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountPerc).HasDefaultValueSql("((0))");

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.Glcogaccount)
                    .HasColumnName("GLCOGAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUnitPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ItemUom)
                    .HasColumnName("ItemUOM")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Each')");

                entity.Property(e => e.ItemWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.OrderQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ReceivedQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(36);

                entity.Property(e => e.SerialNumber).HasMaxLength(50);

                entity.Property(e => e.SubTotal).HasColumnType("money");

                entity.Property(e => e.TaxAmount).HasColumnType("money");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Taxable).HasDefaultValueSql("((0))");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.TotalWeight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseReceiptHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("pk_PurchaseReceiptHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("((1))");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalAdditionalCost).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase Order')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseReceiptHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber })
                    .HasName("PK_PurchaseReceiptHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.AmountPaid)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.Approved).HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.BalanceDue).HasColumnType("money");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardApprovalNumber).HasMaxLength(20);

                entity.Property(e => e.CreditCardBillToZip).HasMaxLength(10);

                entity.Property(e => e.CreditCardCsvnumber)
                    .HasColumnName("CreditCardCSVNumber")
                    .HasMaxLength(5);

                entity.Property(e => e.CreditCardExpDate).HasColumnType("datetime");

                entity.Property(e => e.CreditCardName).HasMaxLength(50);

                entity.Property(e => e.CreditCardNumber).HasMaxLength(50);

                entity.Property(e => e.CreditCardTypeId)
                    .HasColumnName("CreditCardTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.CreditCardValidationCode).HasMaxLength(20);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.DiscountAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.DiscountPers).HasDefaultValueSql("((0))");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.OrderNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.OrderedBy).HasMaxLength(36);

                entity.Property(e => e.OriginalPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.OriginalPurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.Paid).HasDefaultValueSql("((0))");

                entity.Property(e => e.PaidDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentMethodId)
                    .HasColumnName("PaymentMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.Printed).HasDefaultValueSql("((0))");

                entity.Property(e => e.PrintedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.PurchaseCancelDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("('12/31/2025')");

                entity.Property(e => e.PurchaseContractNumber).HasMaxLength(36);

                entity.Property(e => e.PurchaseDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDateRequested)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseDueDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.PurchaseShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Received).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceivedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.RecivingNumber).HasMaxLength(20);

                entity.Property(e => e.ShipDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(((1)/(1))/(1980))");

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipToWarehouse).HasDefaultValueSql("((1))");

                entity.Property(e => e.Shipped).HasDefaultValueSql("((0))");

                entity.Property(e => e.ShippingAddress1).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress2).HasMaxLength(50);

                entity.Property(e => e.ShippingAddress3).HasMaxLength(50);

                entity.Property(e => e.ShippingCity).HasMaxLength(50);

                entity.Property(e => e.ShippingCountry).HasMaxLength(50);

                entity.Property(e => e.ShippingName).HasMaxLength(50);

                entity.Property(e => e.ShippingState).HasMaxLength(50);

                entity.Property(e => e.ShippingZip).HasMaxLength(10);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Subtotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxExemptId)
                    .HasColumnName("TaxExemptID")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TaxFreight).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxableSubTotal)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.Total)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TotalAdditionalCost).HasColumnType("money");

                entity.Property(e => e.TrackingNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionTypeId)
                    .HasColumnName("TransactionTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Purchase')");

                entity.Property(e => e.UndistributedAmount).HasColumnType("money");

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorInvoiceNumber)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<PurchaseTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber, e.CommentNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.CommentNumber)
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CommentDetails).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<PurchaseTrackingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PurchaseNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PurchaseNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PurchaseDescription).HasMaxLength(80);

                entity.Property(e => e.PurchaseLongDescription).HasMaxLength(255);

                entity.Property(e => e.SpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.SpecialNeeds).HasMaxLength(255);
            });

            modelBuilder.Entity<QuoteTrackingDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber, e.CommentNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.CommentNumber).HasColumnType("numeric(18, 0)");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate).HasColumnType("datetime");

                entity.Property(e => e.CommentDetails).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<QuoteTrackingHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.OrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.OrderNumber).HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.ExpectedCloseDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QuoteDescription).HasMaxLength(80);

                entity.Property(e => e.QuoteLongDescription).HasMaxLength(255);

                entity.Property(e => e.QuoteStatus).HasMaxLength(36);

                entity.Property(e => e.SpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.SpecialNeeds).HasMaxLength(255);
            });

            modelBuilder.Entity<QuoteTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.QuoteTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.QuoteTypeId)
                    .HasColumnName("QuoteTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.QuoteTypeDescription).HasMaxLength(30);
            });

            modelBuilder.Entity<ReceiptClass>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptClassId })
                    .HasName("pk_ReceiptClass")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptClassId)
                    .HasColumnName("ReceiptClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReceiptClassDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<ReceiptMethods>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptMethodId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptMethodId)
                    .HasColumnName("ReceiptMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReceiptMethodDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<ReceiptTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptTypeId })
                    .HasName("pk_ReceiptTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeId)
                    .HasColumnName("ReceiptTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<ReceiptsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId, e.ReceiptDetailId })
                    .HasName("pk_ReceiptsDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptDetailId)
                    .HasColumnName("ReceiptDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("(0)");

                entity.Property(e => e.CommissionType).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");
            });

            modelBuilder.Entity<ReceiptsDetailBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId, e.ReceiptDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptDetailId)
                    .HasColumnName("ReceiptDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("(0)");

                entity.Property(e => e.CommissionType).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");
            });

            modelBuilder.Entity<ReceiptsDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId, e.ReceiptDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptDetailId)
                    .HasColumnName("ReceiptDetailID")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("(0)");

                entity.Property(e => e.CommissionType).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DetailMemo1).HasMaxLength(50);

                entity.Property(e => e.DetailMemo2).HasMaxLength(50);

                entity.Property(e => e.DetailMemo3).HasMaxLength(50);

                entity.Property(e => e.DetailMemo4).HasMaxLength(50);

                entity.Property(e => e.DetailMemo5).HasMaxLength(50);

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PayedId)
                    .HasColumnName("PayedID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0.00)");
            });

            modelBuilder.Entity<ReceiptsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId })
                    .HasName("PK_ReceiptsHeader_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(36);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.Deposited).HasDefaultValueSql("((0))");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Nsf).HasColumnName("NSF");

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceiptClassId)
                    .HasColumnName("ReceiptClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeId)
                    .HasColumnName("ReceiptTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(10);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");
            });

            modelBuilder.Entity<ReceiptsHeaderBatch>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId })
                    .HasName("PK_ReceiptHeaderBatch");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.Deposited).HasDefaultValueSql("((0))");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Nsf).HasColumnName("NSF");

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceiptClassId)
                    .HasColumnName("ReceiptClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeId)
                    .HasColumnName("ReceiptTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(10);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");
            });

            modelBuilder.Entity<ReceiptsHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReceiptId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptId)
                    .HasColumnName("ReceiptID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.Cleared).HasDefaultValueSql("((0))");

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.Deposited).HasDefaultValueSql("((0))");

                entity.Property(e => e.DueToDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.Nsf).HasColumnName("NSF");

                entity.Property(e => e.OrderDate).HasColumnType("datetime");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReceiptClassId)
                    .HasColumnName("ReceiptClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReceiptTypeId)
                    .HasColumnName("ReceiptTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reconciled).HasDefaultValueSql("((0))");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Status).HasMaxLength(10);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");
            });

            modelBuilder.Entity<ReportTemplate>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ReportId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ReportId)
                    .HasColumnName("ReportID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActiveYn).HasColumnName("ActiveYN");

                entity.Property(e => e.Ap).HasColumnName("AP");

                entity.Property(e => e.Ar).HasColumnName("AR");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(36);

                entity.Property(e => e.Gl).HasColumnName("GL");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Pj).HasColumnName("PJ");
            });

            modelBuilder.Entity<RequisitionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequisitionId, e.RequisitionDetailId })
                    .HasName("pk_RequisitionDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionId)
                    .HasColumnName("RequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionDetailId)
                    .HasColumnName("RequisitionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CostMethod).HasMaxLength(1);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlexpenseAccount)
                    .HasColumnName("GLExpenseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemCost).HasColumnType("money");

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemUpccode)
                    .HasColumnName("ItemUPCCode")
                    .HasMaxLength(24);

                entity.Property(e => e.ItemValue).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MultipleDiscountAmount).HasColumnType("money");

                entity.Property(e => e.MultipleDiscountGroupId)
                    .HasColumnName("MultipleDiscountGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ponumber)
                    .HasColumnName("PONumber")
                    .HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequestedQty).HasDefaultValueSql("((1))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseBinId)
                    .HasColumnName("ToWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.ToWarehouseId)
                    .HasColumnName("ToWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<RequisitionHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequisitionId })
                    .HasName("pk_RequisitionHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionId)
                    .HasColumnName("RequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.AdjustmentTypeId)
                    .HasColumnName("AdjustmentTypeID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Issue')");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerName).HasMaxLength(50);

                entity.Property(e => e.DeliveryNote).HasMaxLength(36);

                entity.Property(e => e.DriversName).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.HeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo10).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo11).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo12).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.HeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(225);

                entity.Property(e => e.Reference).HasMaxLength(36);

                entity.Property(e => e.Sbcnumber)
                    .HasColumnName("SBCNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SiteNumber).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Ullage1).HasMaxLength(50);

                entity.Property(e => e.Ullage10).HasMaxLength(50);

                entity.Property(e => e.Ullage11).HasMaxLength(50);

                entity.Property(e => e.Ullage12).HasMaxLength(50);

                entity.Property(e => e.Ullage2).HasMaxLength(50);

                entity.Property(e => e.Ullage3).HasMaxLength(50);

                entity.Property(e => e.Ullage4).HasMaxLength(50);

                entity.Property(e => e.Ullage5).HasMaxLength(50);

                entity.Property(e => e.Ullage6).HasMaxLength(50);

                entity.Property(e => e.Ullage7).HasMaxLength(50);

                entity.Property(e => e.Ullage8).HasMaxLength(50);

                entity.Property(e => e.Ullage9).HasMaxLength(50);

                entity.Property(e => e.VehicleRegistration).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseCustomerId)
                    .HasColumnName("WarehouseCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<RequisitionsDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequisitionId, e.RequisitionDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionId)
                    .HasColumnName("RequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionDetailId)
                    .HasColumnName("RequisitionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.DocumentName).HasMaxLength(36);

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasMaxLength(36);

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<RequisitionsHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequisitionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionId)
                    .HasColumnName("RequisitionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ClearedBy).HasMaxLength(36);

                entity.Property(e => e.ClearedDate).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(100);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.EntityId)
                    .HasColumnName("EntityID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.RequestedBy).HasMaxLength(36);

                entity.Property(e => e.RequiredDate).HasColumnType("datetime");

                entity.Property(e => e.RequisitionDate).HasColumnType("datetime");

                entity.Property(e => e.RequisitionTypeId)
                    .HasColumnName("RequisitionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.SystemDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<RequisitionsType>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.RequisitionTypeId })
                    .HasName("PK_RequistionsType");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.RequisitionTypeId)
                    .HasColumnName("RequisitionTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<SalesGroup>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.SalesGroupId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.SalesGroupId)
                    .HasColumnName("SalesGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ComissionType).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SalesGroupDescription).HasMaxLength(80);

                entity.Property(e => e.SalesGroupSupervisor).HasMaxLength(36);
            });

            modelBuilder.Entity<SalesRepresentatives>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.SalesRepId })
                    .HasName("PK_SalesRepresentatives_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.SalesRepId)
                    .HasColumnName("SalesRepID")
                    .HasMaxLength(36);

                entity.Property(e => e.ActualValue).HasColumnType("money");

                entity.Property(e => e.Address1).HasMaxLength(50);

                entity.Property(e => e.Address2).HasMaxLength(50);

                entity.Property(e => e.Address3).HasMaxLength(50);

                entity.Property(e => e.BankAccount)
                    .HasColumnName("Bank_Account")
                    .HasMaxLength(40);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment1).HasMaxLength(80);

                entity.Property(e => e.Comment2).HasMaxLength(80);

                entity.Property(e => e.Comment3).HasMaxLength(80);

                entity.Property(e => e.EstimatedValue).HasColumnType("money");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Name).HasMaxLength(50);

                entity.Property(e => e.SalesGroupId)
                    .HasColumnName("SalesGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<SelectedDepartments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(200);

                entity.Property(e => e.DivisionId)
                    .IsRequired()
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<SelectedDivisions>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .IsRequired()
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(200);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ShipmentMethods>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ShipMethodId })
                    .HasName("pk_ShipmentMethods")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FreighPayment).HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Scaccode)
                    .HasColumnName("SCACCode")
                    .HasMaxLength(4);

                entity.Property(e => e.Scacdescription)
                    .HasColumnName("SCACDescription")
                    .HasMaxLength(50);

                entity.Property(e => e.ShipMethodDescription).HasMaxLength(50);

                entity.Property(e => e.ShippingAccountNumber).HasMaxLength(50);

                entity.Property(e => e.ShippingLogin).HasMaxLength(60);

                entity.Property(e => e.ShippingPassword).HasMaxLength(20);

                entity.Property(e => e.WebsiteUrl).HasMaxLength(80);
            });

            modelBuilder.Entity<TaxGroupDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TaxGroupDetailId, e.TaxId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupDetailId)
                    .HasColumnName("TaxGroupDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxId)
                    .HasColumnName("TaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(80);

                entity.Property(e => e.GltaxAccount)
                    .HasColumnName("GLTaxAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TaxGroups>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TaxGroupId, e.TaxGroupDetailId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupDetailId)
                    .HasColumnName("TaxGroupDetailID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TotalPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Taxes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TaxId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxId)
                    .HasColumnName("TaxID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GltaxAccount)
                    .HasColumnName("GLTaxAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TaxDescription).HasMaxLength(50);

                entity.Property(e => e.TaxPercent).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<TblAuditLogin>(entity =>
            {
                entity.HasKey(e => e.AuditTrailId)
                    .HasName("PK__AuditLogon");

                entity.ToTable("_tblAuditLogin");

                entity.Property(e => e.AuditTrailId).HasColumnName("AuditTrailID");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CAgentName)
                    .IsRequired()
                    .HasColumnName("cAgentName")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DateTimeStamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ipaddress)
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.MachineName).HasMaxLength(50);

                entity.Property(e => e.Status).HasMaxLength(3);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<TblAuditTrail>(entity =>
            {
                entity.HasKey(e => e.AuditId);

                entity.ToTable("_tblAuditTrail");

                entity.Property(e => e.AuditId)
                    .HasColumnName("AuditID")
                    .HasColumnType("numeric(24, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Description).HasMaxLength(50);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DocumentType).HasMaxLength(50);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.EntryDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.FieldChanged).HasMaxLength(50);

                entity.Property(e => e.TransactionLineNumber).HasMaxLength(50);

                entity.Property(e => e.TransactionNumber).HasMaxLength(50);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<TblSyncDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.Ftpid });

                entity.ToTable("_tblSyncDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ftpid)
                    .HasColumnName("FTPID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.FilePath).HasMaxLength(500);

                entity.Property(e => e.FileType).HasMaxLength(36);

                entity.Property(e => e.FtpaccessCode)
                    .HasColumnName("FTPAccessCode")
                    .HasMaxLength(36);

                entity.Property(e => e.FtpbranchCode)
                    .HasColumnName("FTPBranchCode")
                    .HasMaxLength(36);

                entity.Property(e => e.FtpcompanyCode)
                    .HasColumnName("FTPCompanyCode")
                    .HasMaxLength(36);

                entity.Property(e => e.Ftpconfiguration)
                    .HasColumnName("FTPConfiguration")
                    .HasMaxLength(500);

                entity.Property(e => e.Port).HasMaxLength(36);

                entity.Property(e => e.UserName).HasMaxLength(36);
            });

            modelBuilder.Entity<TblUsers>(entity =>
            {
                entity.HasKey(e => new { e.IdAgents, e.CAgentName });

                entity.ToTable("_tblUsers");

                entity.Property(e => e.IdAgents)
                    .HasColumnName("idAgents")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.CAgentName)
                    .HasColumnName("cAgentName")
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.Accesscode)
                    .IsRequired()
                    .HasMaxLength(24)
                    .IsUnicode(false);

                entity.Property(e => e.Active).HasDefaultValueSql("((1))");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.BranchId).HasColumnName("BranchID");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Cosaccount).HasColumnName("COSAccount");

                entity.Property(e => e.CreatedBy).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.DateTimeStamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransactionTypeCrn).HasColumnName("TransactionTypeCRN");

                entity.Property(e => e.WarehouseBinId)
                    .IsRequired()
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.WarehouseId)
                    .IsRequired()
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<TblUsersOn>(entity =>
            {
                entity.HasKey(e => e.CAgentName);

                entity.ToTable("_tblUsersON");

                entity.Property(e => e.CAgentName)
                    .HasColumnName("cAgentName")
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .ValueGeneratedNever();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DateTimeStamp)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ipaddress)
                    .IsRequired()
                    .HasColumnName("IPAddress")
                    .HasMaxLength(50);

                entity.Property(e => e.MachineName)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.Status)
                    .IsRequired()
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<TblVersion>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VersionId, e.RegCode });

                entity.ToTable("_tblVersion");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VersionId)
                    .HasColumnName("VersionID")
                    .HasMaxLength(36);

                entity.Property(e => e.RegCode).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LastLoginDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RegName).HasMaxLength(100);

                entity.Property(e => e.Remarks).HasMaxLength(50);
            });

            modelBuilder.Entity<TblVersionHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VersionId, e.RegCode });

                entity.ToTable("_tblVersionHistory");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VersionId)
                    .HasColumnName("VersionID")
                    .HasMaxLength(36);

                entity.Property(e => e.RegCode).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LastLoginDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.RegName).HasMaxLength(100);

                entity.Property(e => e.Remarks).HasMaxLength(50);
            });

            modelBuilder.Entity<Terms>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TermsId })
                    .HasName("pk_Terms")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TermsDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<TimeUnits>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TimeUnitId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TimeUnitId)
                    .HasColumnName("TimeUnitID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TimeUnitDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<TransactionComment>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CommentType, e.Comment })
                    .HasName("PK__Transact__D4C71C18E40452AE");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CommentType).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CommentDescription).HasMaxLength(80);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<Translation>(entity =>
            {
                entity.HasKey(e => e.ObjId);

                entity.Property(e => e.ObjId)
                    .HasColumnName("ObjID")
                    .HasMaxLength(100)
                    .ValueGeneratedNever();

                entity.Property(e => e.Arabic).HasMaxLength(100);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ChineseSimple).HasMaxLength(100);

                entity.Property(e => e.ChineseTrad).HasMaxLength(100);

                entity.Property(e => e.Dutch).HasMaxLength(100);

                entity.Property(e => e.English).HasMaxLength(100);

                entity.Property(e => e.French).HasMaxLength(100);

                entity.Property(e => e.Fund).HasMaxLength(100);

                entity.Property(e => e.German).HasMaxLength(100);

                entity.Property(e => e.Hindi).HasMaxLength(100);

                entity.Property(e => e.Italian).HasMaxLength(100);

                entity.Property(e => e.Japanese).HasMaxLength(100);

                entity.Property(e => e.Korean).HasMaxLength(100);

                entity.Property(e => e.ObjDescription).HasMaxLength(100);

                entity.Property(e => e.Portuguese).HasMaxLength(100);

                entity.Property(e => e.Russian).HasMaxLength(100);

                entity.Property(e => e.Spanish).HasMaxLength(100);

                entity.Property(e => e.Swedish).HasMaxLength(100);

                entity.Property(e => e.Thai).HasMaxLength(100);
            });

            modelBuilder.Entity<TruckInformation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TruckId })
                    .HasName("PK_TruckHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TruckId)
                    .HasColumnName("TruckID")
                    .HasMaxLength(50);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.EnteredDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TruckName).HasMaxLength(255);
            });

            modelBuilder.Entity<ValidateCountry>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.CountryId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.CountryId)
                    .HasColumnName("CountryID")
                    .HasMaxLength(2);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CountryDescription).HasMaxLength(60);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<ValidateState>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.StateId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.StateId)
                    .HasColumnName("StateID")
                    .HasMaxLength(2);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.StateDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<ValidateZipCode>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.ZipCode });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.ZipCode).HasMaxLength(5);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.City).HasMaxLength(60);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<VendorAccountStatuses>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.AccountStatus })
                    .HasName("pk_VendorAccountStatuses")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.AccountStatus).HasMaxLength(36);

                entity.Property(e => e.AccountStatusDescription).HasMaxLength(50);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<VendorComments>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId, e.CommentLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.CommentLineId)
                    .HasColumnName("CommentLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Comment).HasMaxLength(255);

                entity.Property(e => e.CommentDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.CommentTypeId)
                    .HasColumnName("CommentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<VendorContacts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId, e.ContactId })
                    .HasName("pk_VendorContacts")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactAddress1).HasMaxLength(50);

                entity.Property(e => e.ContactAddress2).HasMaxLength(50);

                entity.Property(e => e.ContactAddress3).HasMaxLength(50);

                entity.Property(e => e.ContactCellular).HasMaxLength(30);

                entity.Property(e => e.ContactCity).HasMaxLength(50);

                entity.Property(e => e.ContactDescription).HasMaxLength(50);

                entity.Property(e => e.ContactEmail).HasMaxLength(60);

                entity.Property(e => e.ContactFax).HasMaxLength(30);

                entity.Property(e => e.ContactFirstName).HasMaxLength(20);

                entity.Property(e => e.ContactLastName).HasMaxLength(20);

                entity.Property(e => e.ContactLogin).HasMaxLength(60);

                entity.Property(e => e.ContactNotes).HasMaxLength(250);

                entity.Property(e => e.ContactPager).HasMaxLength(30);

                entity.Property(e => e.ContactPassword).HasMaxLength(20);

                entity.Property(e => e.ContactPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordOld).HasMaxLength(15);

                entity.Property(e => e.ContactPhone).HasMaxLength(30);

                entity.Property(e => e.ContactRegion).HasMaxLength(50);

                entity.Property(e => e.ContactState).HasMaxLength(50);

                entity.Property(e => e.ContactTypeId)
                    .HasColumnName("ContactTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactWebPage).HasMaxLength(80);

                entity.Property(e => e.ContactZip).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<VendorFinancials>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.AdvertisingDollars)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AvailableCredit)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.AverageDaytoPay).HasDefaultValueSql("((-1))");

                entity.Property(e => e.BookedPurchaseOrders)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrentApbalance)
                    .HasColumnName("CurrentAPBalance")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.DebitMemos).HasColumnType("money");

                entity.Property(e => e.DebitMemosLastYear).HasColumnType("money");

                entity.Property(e => e.DebitMemosLifetime).HasColumnType("money");

                entity.Property(e => e.DebitMemosYtd)
                    .HasColumnName("DebitMemosYTD")
                    .HasColumnType("money");

                entity.Property(e => e.HighestBalance)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.HighestCredit)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LastDebitMemoDate).HasColumnType("datetime");

                entity.Property(e => e.LastPaymentAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LastPaymentDate).HasColumnType("datetime");

                entity.Property(e => e.LastPurchaseDate).HasColumnType("datetime");

                entity.Property(e => e.LastReturnDate).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Over120)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Over150)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Over180)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Over30)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Over60)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Over90)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PaymentsLastYear)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PaymentsLifetime)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PaymentsYtd)
                    .HasColumnName("PaymentsYTD")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurchaseLastYear)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurchaseLifetime)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.PurchaseYtd)
                    .HasColumnName("PurchaseYTD")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ReturnsLastYear).HasColumnType("money");

                entity.Property(e => e.ReturnsLifetime).HasColumnType("money");

                entity.Property(e => e.ReturnsYtd)
                    .HasColumnName("ReturnsYTD")
                    .HasColumnType("money");

                entity.Property(e => e.TotalAp)
                    .HasColumnName("TotalAP")
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Under30)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.VendorReturns).HasColumnType("money");
            });

            modelBuilder.Entity<VendorInformation>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.AccountNumber).HasMaxLength(36);

                entity.Property(e => e.AccountStatus)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Open')");

                entity.Property(e => e.ApprovalDate).HasColumnType("datetime");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.Attention).HasMaxLength(50);

                entity.Property(e => e.AvailibleCredit).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.ConvertedFromCustomer).HasDefaultValueSql("(0)");

                entity.Property(e => e.CreditComments).HasMaxLength(250);

                entity.Property(e => e.CreditLimit).HasColumnType("money");

                entity.Property(e => e.CreditRating).HasMaxLength(30);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.CustomerSince).HasColumnType("datetime");

                entity.Property(e => e.CustomerSpecialInstructions).HasMaxLength(255);

                entity.Property(e => e.EdicontactAddressLine)
                    .HasColumnName("EDIContactAddressLine")
                    .HasMaxLength(50);

                entity.Property(e => e.EdicontactAgentFax)
                    .HasColumnName("EDIContactAgentFax")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactAgentPhone)
                    .HasColumnName("EDIContactAgentPhone")
                    .HasMaxLength(30);

                entity.Property(e => e.EdicontactName)
                    .HasColumnName("EDIContactName")
                    .HasMaxLength(50);

                entity.Property(e => e.Ediid)
                    .HasColumnName("EDIID")
                    .HasMaxLength(12);

                entity.Property(e => e.Ediinvoices).HasColumnName("EDIInvoices");

                entity.Property(e => e.EdiorderStatus).HasColumnName("EDIOrderStatus");

                entity.Property(e => e.Edipayments).HasColumnName("EDIPayments");

                entity.Property(e => e.EdipurchaseOrders).HasColumnName("EDIPurchaseOrders");

                entity.Property(e => e.Ediqualifier)
                    .HasColumnName("EDIQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EdishippingNotices).HasColumnName("EDIShippingNotices");

                entity.Property(e => e.EditestId)
                    .HasColumnName("EDITestID")
                    .HasMaxLength(12);

                entity.Property(e => e.EditestQualifier)
                    .HasColumnName("EDITestQualifier")
                    .HasMaxLength(2);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.FirstContacted).HasColumnType("datetime");

                entity.Property(e => e.FreightPayment).HasMaxLength(50);

                entity.Property(e => e.GlpurchaseAccount)
                    .HasColumnName("GLPurchaseAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LastFollowUp).HasColumnType("datetime");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.NextFollowUp).HasColumnType("datetime");

                entity.Property(e => e.PriceMatrix)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.PriceMatrixCurrent)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(1 / 1 / 1980)");

                entity.Property(e => e.ReferalUrl)
                    .HasColumnName("ReferalURL")
                    .HasMaxLength(60);

                entity.Property(e => e.ReferedBy).HasMaxLength(15);

                entity.Property(e => e.ReferedDate).HasColumnType("datetime");

                entity.Property(e => e.RemittToAddress1).HasMaxLength(50);

                entity.Property(e => e.RemittToAddress2).HasMaxLength(50);

                entity.Property(e => e.RemittToAddress3).HasMaxLength(50);

                entity.Property(e => e.RemittToCity).HasMaxLength(50);

                entity.Property(e => e.RemittToCountry).HasMaxLength(50);

                entity.Property(e => e.RemittToEmail).HasMaxLength(50);

                entity.Property(e => e.RemittToFax).HasMaxLength(50);

                entity.Property(e => e.RemittToName)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'SAME')");

                entity.Property(e => e.RemittToNotes).HasMaxLength(250);

                entity.Property(e => e.RemittToPhone).HasMaxLength(50);

                entity.Property(e => e.RemittToState).HasMaxLength(50);

                entity.Property(e => e.RemittToWebsite).HasMaxLength(80);

                entity.Property(e => e.RemittToZip).HasMaxLength(50);

                entity.Property(e => e.ShipMethodId)
                    .HasColumnName("ShipMethodID")
                    .HasMaxLength(36);

                entity.Property(e => e.SpecialTerms).HasMaxLength(50);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TaxIdno)
                    .HasColumnName("TaxIDNo")
                    .HasMaxLength(20)
                    .HasDefaultValueSql("(N'None')");

                entity.Property(e => e.TermsId)
                    .HasColumnName("TermsID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Net Due')");

                entity.Property(e => e.TermsStart)
                    .HasMaxLength(10)
                    .HasDefaultValueSql("(N'Order Date')");

                entity.Property(e => e.VatTaxOtherNumber).HasMaxLength(36);

                entity.Property(e => e.VattaxIdnumber)
                    .HasColumnName("VATTaxIDNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorAddress1).HasMaxLength(50);

                entity.Property(e => e.VendorAddress2).HasMaxLength(50);

                entity.Property(e => e.VendorAddress3).HasMaxLength(50);

                entity.Property(e => e.VendorCity).HasMaxLength(50);

                entity.Property(e => e.VendorCountry).HasMaxLength(50);

                entity.Property(e => e.VendorEmail).HasMaxLength(60);

                entity.Property(e => e.VendorFax).HasMaxLength(50);

                entity.Property(e => e.VendorIndustryId)
                    .HasColumnName("VendorIndustryID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorLogin).HasMaxLength(60);

                entity.Property(e => e.VendorName).HasMaxLength(50);

                entity.Property(e => e.VendorPassword).HasMaxLength(15);

                entity.Property(e => e.VendorPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.VendorPasswordOld).HasMaxLength(15);

                entity.Property(e => e.VendorPhone).HasMaxLength(50);

                entity.Property(e => e.VendorRegionId)
                    .HasColumnName("VendorRegionID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorSourceId)
                    .HasColumnName("VendorSourceID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorState).HasMaxLength(50);

                entity.Property(e => e.VendorTypeId)
                    .HasColumnName("VendorTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorWebPage).HasMaxLength(80);

                entity.Property(e => e.VendorZip).HasMaxLength(10);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");
            });

            modelBuilder.Entity<VendorItemCrossReference>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId, e.VendorItemId })
                    .HasName("pk_VendorItemCrossReference")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorItemId)
                    .HasColumnName("VendorItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ItemDescription).HasMaxLength(80);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.VendorItemDescription).HasMaxLength(80);
            });

            modelBuilder.Entity<VendorPaymentBatchDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId, e.PaymentDetailId })
                    .HasName("pk_VendorPaymentBatchDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDetailId)
                    .HasColumnName("PaymentDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AppliedAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DiscountTaken)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.DocumentNumber).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(80);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.SettlementReference).HasMaxLength(50);

                entity.Property(e => e.TaxAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0))");

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.TrackingNumber).HasMaxLength(36);

                entity.Property(e => e.VendorControlAccount).HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.VendorName).HasMaxLength(50);

                entity.Property(e => e.WriteOffAmount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");
            });

            modelBuilder.Entity<VendorPaymentBatchHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.PaymentId })
                    .HasName("pk_VendorPaymentBatchHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentId)
                    .HasColumnName("PaymentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Amount)
                    .HasColumnType("money")
                    .HasDefaultValueSql("((0.00))");

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate).HasColumnType("datetime");

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CheckDate).HasColumnType("datetime");

                entity.Property(e => e.CheckNumber).HasMaxLength(20);

                entity.Property(e => e.CreditAmount).HasColumnType("money");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount)
                    .HasColumnName("GLBankAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PaymentClassId)
                    .HasColumnName("PaymentClassID")
                    .HasMaxLength(36);

                entity.Property(e => e.PaymentDate).HasColumnType("datetime");

                entity.Property(e => e.PaymentTypeId)
                    .HasColumnName("PaymentTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate).HasColumnType("datetime");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.UnAppliedAmount).HasColumnType("money");
            });

            modelBuilder.Entity<VendorPriceCrossReference>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorId, e.ItemPricingCode })
                    .HasName("pk_VendorPriceCrossReference")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorId)
                    .HasColumnName("VendorID")
                    .HasMaxLength(50);

                entity.Property(e => e.ItemPricingCode).HasMaxLength(36);

                entity.Property(e => e.Advertising)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(36);

                entity.Property(e => e.Freight)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.Handling)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.ItemPrice)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.Shipping)
                    .HasColumnType("money")
                    .HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<VendorTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.VendorTypeId })
                    .HasName("pk_VendorTypes")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.VendorTypeId)
                    .HasColumnName("VendorTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CreditorsControlAccount).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeGainOrLossAccount).HasMaxLength(36);

                entity.Property(e => e.DiscountsAccount).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.VendorTypeDescription).HasMaxLength(50);
            });

            modelBuilder.Entity<VoucherDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId, e.BankTransactionDetailId })
                    .HasName("pk_VoucherDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionDetailId)
                    .HasColumnName("BankTransactionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.DocumentDate).HasColumnType("datetime");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Payment')");
            });

            modelBuilder.Entity<VoucherHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId })
                    .HasName("pk_VoucherHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbudgetId)
                    .HasColumnName("GLBudgetID")
                    .HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayeeName).HasMaxLength(50);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Payment')");
            });

            modelBuilder.Entity<VoucherSharedDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId, e.BankTransactionDetailId })
                    .HasName("pk_VoucherSharedDetail")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionDetailId)
                    .HasColumnName("BankTransactionDetailID")
                    .HasColumnType("numeric(18, 0)")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'USD')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate).HasColumnType("datetime");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Payment')");
            });

            modelBuilder.Entity<VoucherSharedHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.BankTransactionId })
                    .HasName("pk_VoucherSharedHeader")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BankTransactionId)
                    .HasColumnName("BankTransactionID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.AuditCheck).HasDefaultValueSql("((0))");

                entity.Property(e => e.AuditComments).HasMaxLength(36);

                entity.Property(e => e.AuditedBy).HasMaxLength(36);

                entity.Property(e => e.AuditedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.BankDocumentNumber).HasMaxLength(30);

                entity.Property(e => e.BankId)
                    .HasColumnName("BankID")
                    .HasMaxLength(36);

                entity.Property(e => e.BatchControlNumber).HasMaxLength(36);

                entity.Property(e => e.BatchControlTotal).HasColumnType("money");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyExchangeRate).HasDefaultValueSql("((1))");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.GlbankAccount1)
                    .HasColumnName("GLBankAccount1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlbankAccount2)
                    .HasColumnName("GLBankAccount2")
                    .HasMaxLength(36);

                entity.Property(e => e.IssuedBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerPassword).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.Notes).HasMaxLength(255);

                entity.Property(e => e.PayeeName).HasMaxLength(50);

                entity.Property(e => e.Reference).HasMaxLength(50);

                entity.Property(e => e.Released).HasDefaultValueSql("((0))");

                entity.Property(e => e.ReleasedBy).HasMaxLength(36);

                entity.Property(e => e.ReleasedComments).HasMaxLength(36);

                entity.Property(e => e.ReleasedDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorPassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionAmount).HasColumnType("money");

                entity.Property(e => e.TransactionDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.TransactionType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Payment')");
            });

            modelBuilder.Entity<WarehouseBinTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseBinTypeId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinTypeId)
                    .HasColumnName("WarehouseBinTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinTypeDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<WarehouseBinZones>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseBinZoneId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZoneId)
                    .HasColumnName("WarehouseBinZoneID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinZoneDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<WarehouseBins>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseId, e.WarehouseBinId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.LockerStock).HasDefaultValueSql("((0))");

                entity.Property(e => e.LockerStockQty).HasDefaultValueSql("((0))");

                entity.Property(e => e.MaximumQuantity).HasDefaultValueSql("((999999999))");

                entity.Property(e => e.MinimumQuantity).HasDefaultValueSql("((0))");

                entity.Property(e => e.OverFlowBin)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Overflow')");

                entity.Property(e => e.ResponsiblePerson).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinHeight).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinLength).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinLocation).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinLocationX).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinLocationY).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinLocationZ).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinName).HasMaxLength(50);

                entity.Property(e => e.WarehouseBinNumber).HasMaxLength(36);

                entity.Property(e => e.WarehouseBinRfid)
                    .HasColumnName("WarehouseBinRFID")
                    .HasMaxLength(80);

                entity.Property(e => e.WarehouseBinType)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Default')");

                entity.Property(e => e.WarehouseBinWidth).HasMaxLength(10);

                entity.Property(e => e.WarehouseBinZone)
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'Default')");
            });

            modelBuilder.Entity<WarehouseByEmployees>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.EmployeeId, e.WarehouseId })
                    .HasName("PK_WarehouseByEmployee");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<WarehouseTransitDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransitId, e.TransitDetailLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitId)
                    .HasColumnName("TransitID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitDetailLineId)
                    .HasColumnName("TransitDetailLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransitDestinationWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitDestinationWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitDetailMemo1).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo10).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo2).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo3).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo4).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo5).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo6).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo7).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo8).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo9).HasMaxLength(50);

                entity.Property(e => e.TransitInTransitWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitInTransitWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitInstructions).HasMaxLength(255);

                entity.Property(e => e.TransitItemId)
                    .HasColumnName("TransitItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.TransitRequestedBy).HasMaxLength(36);

                entity.Property(e => e.TransitSourceWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitSourceWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitTrackingNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<WarehouseTransitDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransitId, e.TransitDetailLineId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitId)
                    .HasColumnName("TransitID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitDetailLineId)
                    .HasColumnName("TransitDetailLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.TransitDestinationWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitDestinationWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitDetailMemo1).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo10).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo2).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo3).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo4).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo5).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo6).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo7).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo8).HasMaxLength(50);

                entity.Property(e => e.TransitDetailMemo9).HasMaxLength(50);

                entity.Property(e => e.TransitInTransitWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitInTransitWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitInstructions).HasMaxLength(255);

                entity.Property(e => e.TransitItemId)
                    .HasColumnName("TransitItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.TransitRequestedBy).HasMaxLength(36);

                entity.Property(e => e.TransitSourceWarehouse).HasMaxLength(36);

                entity.Property(e => e.TransitSourceWarehouseBin).HasMaxLength(36);

                entity.Property(e => e.TransitTrackingNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<WarehouseTransitHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransitId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitId)
                    .HasColumnName("TransitID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.TransitBillOfLadingNumber).HasMaxLength(36);

                entity.Property(e => e.TransitEnteredDate).HasColumnType("datetime");

                entity.Property(e => e.TransitEtalDate)
                    .HasColumnName("TransitETAlDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.TransitHeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo10).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.TransitReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.TransitRequestedBy).HasMaxLength(36);

                entity.Property(e => e.TransitShipDate).HasColumnType("datetime");

                entity.Property(e => e.TransitShipVia).HasMaxLength(36);

                entity.Property(e => e.TransitShippingInstructions).HasMaxLength(255);

                entity.Property(e => e.TransitTrackingNumber).HasMaxLength(36);

                entity.Property(e => e.TransitTrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransitTralierNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<WarehouseTransitHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.TransitId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.TransitId)
                    .HasColumnName("TransitID")
                    .HasMaxLength(36);

                entity.Property(e => e.ApprovedBy).HasMaxLength(36);

                entity.Property(e => e.ApprovedDate).HasColumnType("datetime");

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.TransitBillOfLadingNumber).HasMaxLength(36);

                entity.Property(e => e.TransitEnteredDate).HasColumnType("datetime");

                entity.Property(e => e.TransitEtalDate)
                    .HasColumnName("TransitETAlDate")
                    .HasColumnType("datetime");

                entity.Property(e => e.TransitHeaderMemo1).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo10).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo2).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo3).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo4).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo5).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo6).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo7).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo8).HasMaxLength(50);

                entity.Property(e => e.TransitHeaderMemo9).HasMaxLength(50);

                entity.Property(e => e.TransitReceivedDate).HasColumnType("datetime");

                entity.Property(e => e.TransitRequestedBy).HasMaxLength(36);

                entity.Property(e => e.TransitShipDate).HasColumnType("datetime");

                entity.Property(e => e.TransitShipVia).HasMaxLength(36);

                entity.Property(e => e.TransitShippingInstructions).HasMaxLength(255);

                entity.Property(e => e.TransitTrackingNumber).HasMaxLength(36);

                entity.Property(e => e.TransitTrailerPrefix).HasMaxLength(36);

                entity.Property(e => e.TransitTralierNumber).HasMaxLength(36);
            });

            modelBuilder.Entity<Warehouses>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseId })
                    .HasName("pk_Warehouses")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CoscontrolAccount)
                    .HasColumnName("COSControlAccount")
                    .HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PackId)
                    .HasColumnName("PackID")
                    .HasMaxLength(36);

                entity.Property(e => e.RoutingAddressd).HasMaxLength(50);

                entity.Property(e => e.RoutingContactEmail)
                    .HasMaxLength(50)
                    .HasDefaultValueSql("(N'DEFAULT')");

                entity.Property(e => e.RoutingContactFax).HasMaxLength(50);

                entity.Property(e => e.RoutingContactName).HasMaxLength(50);

                entity.Property(e => e.RoutingContactPhone).HasMaxLength(50);

                entity.Property(e => e.SalesControlAccount).HasMaxLength(36);

                entity.Property(e => e.StockControlAccount).HasMaxLength(36);

                entity.Property(e => e.WarehouseAddress1).HasMaxLength(50);

                entity.Property(e => e.WarehouseAddress2).HasMaxLength(50);

                entity.Property(e => e.WarehouseAddress3).HasMaxLength(50);

                entity.Property(e => e.WarehouseAttention).HasMaxLength(50);

                entity.Property(e => e.WarehouseCity).HasMaxLength(50);

                entity.Property(e => e.WarehouseEmail).HasMaxLength(60);

                entity.Property(e => e.WarehouseFax).HasMaxLength(50);

                entity.Property(e => e.WarehouseName).HasMaxLength(50);

                entity.Property(e => e.WarehousePhone).HasMaxLength(50);

                entity.Property(e => e.WarehouseState).HasMaxLength(50);

                entity.Property(e => e.WarehouseWebPage).HasMaxLength(80);

                entity.Property(e => e.WarehouseZip).HasMaxLength(10);
            });

            modelBuilder.Entity<WarehousesBilling>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseId, e.ItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.ItemId)
                    .HasColumnName("ItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.TaxGroupId)
                    .HasColumnName("TaxGroupID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<WarehousesContacts>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseId, e.ContactId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactId)
                    .HasColumnName("ContactID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.ContactAddress1).HasMaxLength(50);

                entity.Property(e => e.ContactAddress2).HasMaxLength(50);

                entity.Property(e => e.ContactAddress3).HasMaxLength(50);

                entity.Property(e => e.ContactCellular).HasMaxLength(30);

                entity.Property(e => e.ContactCity).HasMaxLength(50);

                entity.Property(e => e.ContactDescription).HasMaxLength(50);

                entity.Property(e => e.ContactEmail).HasMaxLength(60);

                entity.Property(e => e.ContactFax).HasMaxLength(30);

                entity.Property(e => e.ContactFirstName).HasMaxLength(20);

                entity.Property(e => e.ContactLastName).HasMaxLength(20);

                entity.Property(e => e.ContactLogin).HasMaxLength(60);

                entity.Property(e => e.ContactNotes).HasMaxLength(250);

                entity.Property(e => e.ContactPager).HasMaxLength(30);

                entity.Property(e => e.ContactPassword).HasMaxLength(20);

                entity.Property(e => e.ContactPasswordDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordExpiresDate).HasColumnType("datetime");

                entity.Property(e => e.ContactPasswordOld).HasMaxLength(15);

                entity.Property(e => e.ContactPhone).HasMaxLength(30);

                entity.Property(e => e.ContactRegion).HasMaxLength(50);

                entity.Property(e => e.ContactState).HasMaxLength(50);

                entity.Property(e => e.ContactTypeId)
                    .HasColumnName("ContactTypeID")
                    .HasMaxLength(36);

                entity.Property(e => e.ContactWebPage).HasMaxLength(80);

                entity.Property(e => e.ContactZip).HasMaxLength(10);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);
            });

            modelBuilder.Entity<WarehousesCustomers>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WarehouseId, e.WarehouseCustomerId })
                    .HasName("pk_WarehousesCustomers")
                    .ForSqlServerIsClustered(false);

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseCustomerId)
                    .HasColumnName("WarehouseCustomerID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CustomerId)
                    .IsRequired()
                    .HasColumnName("CustomerID")
                    .HasMaxLength(50);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WarehouseCustomerAddress1).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerAddress2).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerAddress3).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerAttention).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerCity).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerContact).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerEmail).HasMaxLength(60);

                entity.Property(e => e.WarehouseCustomerFax).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerName).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerPhone).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerState).HasMaxLength(50);

                entity.Property(e => e.WarehouseCustomerWebPage).HasMaxLength(80);

                entity.Property(e => e.WarehouseCustomerZip).HasMaxLength(10);
            });

            modelBuilder.Entity<WebMessage>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.Attachment).HasMaxLength(255);

                entity.Property(e => e.Body).HasMaxLength(255);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CriteriaColumn)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.DeliveryDate).HasColumnType("datetime");

                entity.Property(e => e.EmailSubject).HasMaxLength(255);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MessageType)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.Parameter1)
                    .HasColumnName("parameter1")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter10)
                    .HasColumnName("parameter10")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter2)
                    .HasColumnName("parameter2")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter3)
                    .HasColumnName("parameter3")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter4)
                    .HasColumnName("parameter4")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter5)
                    .HasColumnName("parameter5")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter6)
                    .HasColumnName("parameter6")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter7)
                    .HasColumnName("parameter7")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter8)
                    .HasColumnName("parameter8")
                    .HasMaxLength(255);

                entity.Property(e => e.Parameter9)
                    .HasColumnName("parameter9")
                    .HasMaxLength(255);

                entity.Property(e => e.SmssenderName)
                    .HasColumnName("SMSSenderName")
                    .HasMaxLength(10);

                entity.Property(e => e.SourceColumn)
                    .IsRequired()
                    .HasMaxLength(255);

                entity.Property(e => e.SourceTable)
                    .IsRequired()
                    .HasMaxLength(255);
            });

            modelBuilder.Entity<WebParameters>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.EmailPassword).HasMaxLength(36);

                entity.Property(e => e.EmailSmtpserver)
                    .HasColumnName("EmailSMTPServer")
                    .HasMaxLength(36);

                entity.Property(e => e.EmailUserName).HasMaxLength(36);

                entity.Property(e => e.EmployeeId)
                    .IsRequired()
                    .HasColumnName("EmployeeID")
                    .HasMaxLength(36);

                entity.Property(e => e.Ipaddress)
                    .IsRequired()
                    .HasColumnName("IPAddress")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.PortNumber).HasMaxLength(36);

                entity.Property(e => e.TextPassword).HasMaxLength(36);

                entity.Property(e => e.TextSubAcct).HasMaxLength(36);

                entity.Property(e => e.TextUrl)
                    .HasColumnName("TextURL")
                    .HasMaxLength(36);

                entity.Property(e => e.TextUserName).HasMaxLength(36);
            });

            modelBuilder.Entity<Wipdetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderId, e.WorkOrderDetailLineId })
                    .HasName("PK_WIPDetail_1");

                entity.ToTable("WIPDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderId)
                    .HasColumnName("WorkOrderID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderDetailLineId)
                    .HasColumnName("WorkOrderDetailLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomnumber)
                    .IsRequired()
                    .HasColumnName("WorkOrderBOMNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderIssuedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderItemId)
                    .HasColumnName("WorkOrderItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderReference).HasMaxLength(36);
            });

            modelBuilder.Entity<Wipheader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderId, e.WorkOrderNumber, e.WorkOrderBomnumber })
                    .HasName("PK_WIPHeader_1");

                entity.ToTable("WIPHeader");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderId)
                    .HasColumnName("WorkOrderID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber).HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomnumber)
                    .HasColumnName("WorkOrderBOMNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.AdditionalCostAccount).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.Completed).HasDefaultValueSql("((0))");

                entity.Property(e => e.CompletedBy).HasMaxLength(36);

                entity.Property(e => e.CompletedDate).HasColumnType("datetime");

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.FgwarehouseBinId)
                    .HasColumnName("FGWarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.FgwarehouseId)
                    .HasColumnName("FGWarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.MaterialIssueVarianceAccount).HasMaxLength(36);

                entity.Property(e => e.NewBomitemCost)
                    .HasColumnName("NewBOMItemCost")
                    .HasColumnType("money");

                entity.Property(e => e.ProductionReference).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.SystemDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WarehouseBinId)
                    .HasColumnName("WarehouseBinID")
                    .HasMaxLength(36);

                entity.Property(e => e.WarehouseId)
                    .HasColumnName("WarehouseID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomotherCost)
                    .HasColumnName("WorkOrderBOMOtherCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomunitCost)
                    .HasColumnName("WorkOrderBOMUnitCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomunitLabor)
                    .HasColumnName("WorkOrderBOMUnitLabor")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderIssuedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderReference).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTotalCost).HasColumnType("money");
            });

            modelBuilder.Entity<WiptransactionDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderId, e.WorkOrderDetailLineId });

                entity.ToTable("WIPTransactionDetail");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderId)
                    .HasColumnName("WorkOrderID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderDetailLineId)
                    .HasColumnName("WorkOrderDetailLineID")
                    .ValueGeneratedOnAdd();

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ProjectId)
                    .HasColumnName("ProjectID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomnumber)
                    .IsRequired()
                    .HasColumnName("WorkOrderBOMNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderIssuedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderItemId)
                    .HasColumnName("WorkOrderItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber)
                    .IsRequired()
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderReference).HasMaxLength(36);
            });

            modelBuilder.Entity<WorkOrderDetail>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderNumber, e.WorkOrderLineNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber).HasMaxLength(36);

                entity.Property(e => e.WorkOrderLineNumber).ValueGeneratedOnAdd();

                entity.Property(e => e.AdditionalCostAccount).HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.MaterialIssueVarianceAccount).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomdescription)
                    .HasColumnName("WorkOrderBOMDescription")
                    .HasMaxLength(120);

                entity.Property(e => e.WorkOrderBomnumber)
                    .HasColumnName("WorkOrderBOMNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomotherCost)
                    .HasColumnName("WorkOrderBOMOtherCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomquantity).HasColumnName("WorkOrderBOMQuantity");

                entity.Property(e => e.WorkOrderBomunitCost)
                    .HasColumnName("WorkOrderBOMUnitCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomunitLabor)
                    .HasColumnName("WorkOrderBOMUnitLabor")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderCompletedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderDescription).HasMaxLength(255);

                entity.Property(e => e.WorkOrderDetailMemo1).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo2).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo3).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo4).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo5).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo6).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo7).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo8).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo9).HasMaxLength(80);

                entity.Property(e => e.WorkOrderExpectedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderInProgress).HasMaxLength(36);

                entity.Property(e => e.WorkOrderPriority).HasMaxLength(36);

                entity.Property(e => e.WorkOrderProgressNotes).HasMaxLength(255);

                entity.Property(e => e.WorkOrderSerialNumber).HasMaxLength(36);

                entity.Property(e => e.WorkOrderStartDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderStatus).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTotalCost).HasColumnType("money");
            });

            modelBuilder.Entity<WorkOrderDetailHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderNumber, e.WorkOrderLineNumber })
                    .HasName("PK_WorkOrderDetailHistory_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber).HasMaxLength(36);

                entity.Property(e => e.AdditionalCostAccount).HasMaxLength(36);

                entity.Property(e => e.AssetId)
                    .HasColumnName("AssetID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.GlanalysisType1)
                    .HasColumnName("GLAnalysisType1")
                    .HasMaxLength(36);

                entity.Property(e => e.GlanalysisType2)
                    .HasColumnName("GLAnalysisType2")
                    .HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.MaterialIssueVarianceAccount).HasMaxLength(36);

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomdescription)
                    .HasColumnName("WorkOrderBOMDescription")
                    .HasMaxLength(120);

                entity.Property(e => e.WorkOrderBomnumber)
                    .HasColumnName("WorkOrderBOMNumber")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderBomotherCost)
                    .HasColumnName("WorkOrderBOMOtherCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomquantity).HasColumnName("WorkOrderBOMQuantity");

                entity.Property(e => e.WorkOrderBomunitCost)
                    .HasColumnName("WorkOrderBOMUnitCost")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderBomunitLabor)
                    .HasColumnName("WorkOrderBOMUnitLabor")
                    .HasColumnType("money");

                entity.Property(e => e.WorkOrderCompletedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderDescription).HasMaxLength(255);

                entity.Property(e => e.WorkOrderDetailMemo1).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo2).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo3).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo4).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo5).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo6).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo7).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo8).HasMaxLength(80);

                entity.Property(e => e.WorkOrderDetailMemo9).HasMaxLength(80);

                entity.Property(e => e.WorkOrderExpectedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderInProgress).HasMaxLength(36);

                entity.Property(e => e.WorkOrderPriority).HasMaxLength(36);

                entity.Property(e => e.WorkOrderProgressNotes).HasMaxLength(255);

                entity.Property(e => e.WorkOrderSerialNumber).HasMaxLength(36);

                entity.Property(e => e.WorkOrderStartDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderStatus).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTotalCost).HasColumnType("money");
            });

            modelBuilder.Entity<WorkOrderHeader>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderNumber });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.WorkOrderApprovedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderApprovedByDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderAssignedTo).HasMaxLength(36);

                entity.Property(e => e.WorkOrderCancelDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderCompleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.WorkOrderCompletedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkOrderDescription).HasMaxLength(255);

                entity.Property(e => e.WorkOrderExpectedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderForCompanyId)
                    .HasColumnName("WorkOrderForCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderForDepartmentId)
                    .HasColumnName("WorkOrderForDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderForDivisionId)
                    .HasColumnName("WorkOrderForDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgress).HasMaxLength(36);

                entity.Property(e => e.WorkOrderManager).HasMaxLength(36);

                entity.Property(e => e.WorkOrderMemo1).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo2).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo3).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo4).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo5).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo6).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo7).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo8).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo9).HasMaxLength(80);

                entity.Property(e => e.WorkOrderPriority).HasMaxLength(36);

                entity.Property(e => e.WorkOrderProgressNotes).HasMaxLength(255);

                entity.Property(e => e.WorkOrderReason).HasMaxLength(120);

                entity.Property(e => e.WorkOrderReference).HasMaxLength(36);

                entity.Property(e => e.WorkOrderReferenceDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderRequestedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderStartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkOrderStatus).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTotalCost).HasColumnType("money");

                entity.Property(e => e.WorkOrderType).HasMaxLength(36);
            });

            modelBuilder.Entity<WorkOrderHeaderHistory>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderNumber })
                    .HasName("PK_WorkOrderHeaderHistory_1");

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderNumber).HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.CurrencyId)
                    .HasColumnName("CurrencyID")
                    .HasMaxLength(3)
                    .HasDefaultValueSql("(N'NGN')");

                entity.Property(e => e.EnteredBy).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.ManagerSignature).HasMaxLength(36);

                entity.Property(e => e.ManagerSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.Memorize).HasDefaultValueSql("((0))");

                entity.Property(e => e.Posted).HasDefaultValueSql("((0))");

                entity.Property(e => e.PostedBy).HasMaxLength(36);

                entity.Property(e => e.PostedDate).HasColumnType("datetime");

                entity.Property(e => e.Signature).HasMaxLength(36);

                entity.Property(e => e.SignaturePassword).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignature).HasMaxLength(36);

                entity.Property(e => e.SupervisorSignaturePassword).HasMaxLength(36);

                entity.Property(e => e.WorkOrderApprovedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderApprovedByDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderAssignedTo).HasMaxLength(36);

                entity.Property(e => e.WorkOrderCancelDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderCompleted).HasDefaultValueSql("((0))");

                entity.Property(e => e.WorkOrderCompletedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkOrderDescription).HasMaxLength(255);

                entity.Property(e => e.WorkOrderExpectedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderForCompanyId)
                    .HasColumnName("WorkOrderForCompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderForDepartmentId)
                    .HasColumnName("WorkOrderForDepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderForDivisionId)
                    .HasColumnName("WorkOrderForDivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgress).HasMaxLength(36);

                entity.Property(e => e.WorkOrderManager).HasMaxLength(36);

                entity.Property(e => e.WorkOrderMemo1).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo2).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo3).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo4).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo5).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo6).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo7).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo8).HasMaxLength(80);

                entity.Property(e => e.WorkOrderMemo9).HasMaxLength(80);

                entity.Property(e => e.WorkOrderPriority).HasMaxLength(36);

                entity.Property(e => e.WorkOrderProgressNotes).HasMaxLength(255);

                entity.Property(e => e.WorkOrderReason).HasMaxLength(120);

                entity.Property(e => e.WorkOrderReference).HasMaxLength(36);

                entity.Property(e => e.WorkOrderReferenceDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderRequestedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderStartDate)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.WorkOrderStatus).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTotalCost).HasColumnType("money");

                entity.Property(e => e.WorkOrderType).HasMaxLength(36);
            });

            modelBuilder.Entity<WorkOrderInProgress>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderInProgress1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgress1)
                    .HasColumnName("WorkOrderInProgress")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgressDescription).HasMaxLength(120);

                entity.Property(e => e.WorkOrderIssuedDate).HasColumnType("datetime");

                entity.Property(e => e.WorkOrderItemId)
                    .HasColumnName("WorkOrderItemID")
                    .HasMaxLength(36);
            });

            modelBuilder.Entity<WorkOrderInProgressTransaction>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderInProgressNumber, e.WorkOrderItemId });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgressNumber).HasMaxLength(36);

                entity.Property(e => e.WorkOrderItemId)
                    .HasColumnName("WorkOrderItemID")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderInProgressDescription).HasMaxLength(120);

                entity.Property(e => e.WorkOrderIssuedDate).HasColumnType("datetime");
            });

            modelBuilder.Entity<WorkOrderPriority>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderPriority1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderPriority1)
                    .HasColumnName("WorkOrderPriority")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderPriorityDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<WorkOrderStatus>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderStatus1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderStatus1)
                    .HasColumnName("WorkOrderStatus")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderStatusDescription).HasMaxLength(120);
            });

            modelBuilder.Entity<WorkOrderTypes>(entity =>
            {
                entity.HasKey(e => new { e.CompanyId, e.DivisionId, e.DepartmentId, e.WorkOrderTypes1 });

                entity.Property(e => e.CompanyId)
                    .HasColumnName("CompanyID")
                    .HasMaxLength(36);

                entity.Property(e => e.DivisionId)
                    .HasColumnName("DivisionID")
                    .HasMaxLength(36);

                entity.Property(e => e.DepartmentId)
                    .HasColumnName("DepartmentID")
                    .HasMaxLength(36);

                entity.Property(e => e.WorkOrderTypes1)
                    .HasColumnName("WorkOrderTypes")
                    .HasMaxLength(36);

                entity.Property(e => e.BranchCode).HasMaxLength(36);

                entity.Property(e => e.LockTs)
                    .HasColumnName("LockTS")
                    .HasColumnType("datetime");

                entity.Property(e => e.LockedBy).HasMaxLength(36);

                entity.Property(e => e.WorkOrderTypesDescription).HasMaxLength(120);
            });
        }
    }
}
